kube-virginia) virginia@ubuntu:~$ ./kubernetes-install.sh
+ source us-east-1-kubernetes.sh
./kubernetes-install.sh: line 2: us-east-1-kubernetes.sh: No such file or directory
+ echo 1
1
+ set -o errexit
+ set -o nounset
+ set -o pipefail
+ echo 2
2
+ [[ -n true ]]
+ create_cluster
+ echo 'Creating a kubernetes on aws...'
Creating a kubernetes on aws...
+ cd kubernetes
+ ./cluster/kube-up.sh
+ set -o errexit
+ set -o nounset
+ set -o pipefail
++ dirname ./cluster/kube-up.sh
+ KUBE_ROOT=./cluster/..
+ EXIT_ON_WEAK_ERROR=false
+ '[' -f ./cluster/../cluster/env.sh ']'
+ source ./cluster/../cluster/kube-env.sh
++ KUBERNETES_PROVIDER=aws
++ [[ -z '' ]]
++ declare -r 'color_start=\033['
++ declare -r 'color_red=\033[0;31m'
++ declare -r 'color_yellow=\033[0;33m'
++ declare -r 'color_green=\033[0;32m'
++ declare -r 'color_norm=\033[0m'
+ source ./cluster/../cluster/kube-util.sh
+++ dirname ./cluster/../cluster/kube-util.sh
++ KUBE_ROOT=./cluster/../cluster/..
++ '[' -n aws ']'
++ PROVIDER_UTILS=./cluster/../cluster/../cluster/aws/util.sh
++ '[' -f ./cluster/../cluster/../cluster/aws/util.sh ']'
++ source ./cluster/../cluster/../cluster/aws/util.sh
++++ dirname ./cluster/../cluster/../cluster/aws/util.sh
+++ KUBE_ROOT=./cluster/../cluster/../cluster/aws/../..
+++ source ./cluster/../cluster/../cluster/aws/../../cluster/aws/config-default.sh
++++ ZONE=us-east-1a
++++ MASTER_SIZE=m3.medium
++++ NODE_SIZE=m3.large
++++ NUM_NODES=2
++++ [[ -z m3.large ]]
++++ [[ -z m3.medium ]]
++++ AWS_S3_REGION=us-east-1
++++ DOCKER_STORAGE=aufs
++++ EXTRA_DOCKER_OPTS=
++++ INSTANCE_PREFIX=kubernetes
++++ CLUSTER_ID=kubernetes
++++ AWS_SSH_KEY=/home/virginia/.ssh/kube_aws_rsa
++++ IAM_PROFILE_MASTER=kubernetes-master
++++ IAM_PROFILE_NODE=kubernetes-minion
++++ LOG=/dev/null
++++ MASTER_DISK_TYPE=gp2
++++ MASTER_DISK_SIZE=20
++++ MASTER_ROOT_DISK_TYPE=gp2
++++ MASTER_ROOT_DISK_SIZE=8
++++ NODE_ROOT_DISK_TYPE=gp2
++++ NODE_ROOT_DISK_SIZE=32
++++ MASTER_NAME=kubernetes-master
++++ MASTER_TAG=kubernetes-master
++++ NODE_TAG=kubernetes-minion
++++ NODE_SCOPES=
++++ POLL_SLEEP_INTERVAL=3
++++ NON_MASQUERADE_CIDR=10.0.0.0/8
++++ SERVICE_CLUSTER_IP_RANGE=10.0.0.0/16
++++ CLUSTER_IP_RANGE=10.244.0.0/16
++++ MASTER_IP_RANGE=10.246.0.0/24
++++ MASTER_RESERVED_IP=
++++ RUNTIME_CONFIG=
++++ ENABLE_CLUSTER_MONITORING=influxdb
++++ ENABLE_NODE_LOGGING=true
++++ LOGGING_DESTINATION=elasticsearch
++++ ENABLE_CLUSTER_LOGGING=true
++++ ELASTICSEARCH_LOGGING_REPLICAS=1
++++ [[ false == \t\r\u\e ]]
++++ ENABLE_CLUSTER_DNS=true
++++ DNS_SERVER_IP=10.0.0.10
++++ DNS_DOMAIN=cluster.local
++++ DNS_REPLICAS=1
++++ ENABLE_CLUSTER_UI=true
++++ ENABLE_NODE_AUTOSCALER=true
++++ [[ true == \t\r\u\e ]]
++++ AUTOSCALER_MIN_NODES=1
++++ AUTOSCALER_MAX_NODES=2
++++ TARGET_NODE_UTILIZATION=0.7
++++ ADMISSION_CONTROL=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel
++++ ENABLE_NODE_PUBLIC_IP=true
++++ KUBE_OS_DISTRIBUTION=jessie
++++ KUBE_NODE_IMAGE=
++++ COREOS_CHANNEL=alpha
++++ CONTAINER_RUNTIME=docker
++++ RKT_VERSION=0.5.5
++++ NETWORK_PROVIDER=none
++++ OPENCONTRAIL_TAG=R2.20
++++ OPENCONTRAIL_KUBERNETES_TAG=master
++++ OPENCONTRAIL_PUBLIC_SUBNET=10.1.0.0/16
++++ E2E_STORAGE_TEST_ENVIRONMENT=false
+++ source ./cluster/../cluster/../cluster/aws/../../cluster/common.sh
++++ set -o errexit
++++ set -o nounset
++++ set -o pipefail
+++++ dirname ./cluster/../cluster/../cluster/aws/../../cluster/common.sh
++++ KUBE_ROOT=./cluster/../cluster/../cluster/aws/../../cluster/..
++++ DEFAULT_KUBECONFIG=/home/virginia/.kube/config
++++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/lib/util.sh
++++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/lib/logging.sh
++++ KUBE_RELEASE_VERSION_REGEX='^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-(beta|alpha)\.(0|[1-9][0-9]*))?$'
++++ KUBE_CI_VERSION_REGEX='^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)-(beta|alpha)\.(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*)\+[-0-9a-z]*)?$'
+++ ALLOCATE_NODE_CIDRS=true
+++ NODE_INSTANCE_PREFIX=kubernetes-minion
+++ ASG_NAME=kubernetes-minion-group-us-east-1a
+++ MASTER_DISK_ID=
+++ TAG_KEY_MASTER_IP=kubernetes.io/master-ip
+++ OS_DISTRIBUTION=jessie
+++ [[ jessie == \u\b\u\n\t\u ]]
+++ load_distro_utils
+++ case "${OS_DISTRIBUTION}" in
+++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/aws/jessie/util.sh
++++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/aws/trusty/common.sh
++++ SSH_USER=admin
+++ AWS_REGION=us-east-1
+++ export AWS_DEFAULT_REGION=us-east-1
+++ AWS_DEFAULT_REGION=us-east-1
+++ export AWS_DEFAULT_OUTPUT=text
+++ AWS_DEFAULT_OUTPUT=text
+++ AWS_CMD='aws ec2'
+++ AWS_ASG_CMD='aws autoscaling'
+++ VPC_CIDR_BASE=172.20
+++ MASTER_IP_SUFFIX=.9
+++ VPC_CIDR=172.20.0.0/16
+++ SUBNET_CIDR=172.20.0.0/24
+++ [[ -n '' ]]
+++ [[ -z '' ]]
+++ MASTER_INTERNAL_IP=172.20.0.9
+++ MASTER_SG_NAME=kubernetes-master-kubernetes
+++ NODE_SG_NAME=kubernetes-minion-kubernetes
+++ EPHEMERAL_BLOCK_DEVICE_MAPPINGS=',{"DeviceName": "/dev/sdc","VirtualName":"ephemeral0"},{"DeviceName": "/dev/sdd","VirtualName":"ephemeral1"},{"DeviceName": "/dev/sde","VirtualName":"ephemeral2"},{"DeviceName": "/dev/sdf","VirtualName":"ephemeral3"}'
+++ [[ '' == \e\b\s ]]
+ '[' -z us-east-1a ']'
+ echo '... Starting cluster in us-east-1a using provider aws'
... Starting cluster in us-east-1a using provider aws
+ echo '... calling verify-prereqs'
... calling verify-prereqs
+ verify-prereqs
++ which aws
+ [[ /home/virginia/.virtualenvs/kube-virginia/bin/aws == '' ]]
+ [[ '' == \t\r\u\e ]]
+ echo '... calling kube-up'
... calling kube-up
+ kube-up
+ echo 'Starting cluster using os distro: jessie'
Starting cluster using os distro: jessie
+ get-tokens
++ dd if=/dev/urandom bs=128 count=1
++ dd bs=32 count=1
++ tr -d =+/
++ base64
+ KUBELET_TOKEN=lvAIUZkjSBoanj8FNhz2MBIfDsRjjoGJ
++ dd if=/dev/urandom bs=128 count=1
++ dd bs=32 count=1
++ tr -d =+/
++ base64
+ KUBE_PROXY_TOKEN=MJmB5b3RngOUFJjfdhkYnZhC2MDD8Oqs
+ detect-image
+ case "${OS_DISTRIBUTION}" in
+ detect-jessie-image
+ [[ -z '' ]]
+ aws_account=721322707521
+ [[ -z '' ]]
+ AWS_IMAGE_NAME=k8s-1.2-debian-jessie-amd64-hvm-2016-03-05-ebs
++ aws ec2 describe-images --owner 721322707521 --filters Name=name,Values=k8s-1.2-debian-jessie-amd64-hvm-2016-03-05-ebs --query 'Images[].ImageId' --output text
+ AWS_IMAGE=ami-6c9ea606
+ [[ -z ami-6c9ea606 ]]
+ detect-minion-image
+ [[ -z '' ]]
+ detect-image
+ case "${OS_DISTRIBUTION}" in
+ detect-jessie-image
+ [[ -z ami-6c9ea606 ]]
+ KUBE_NODE_IMAGE=ami-6c9ea606
+ detect-root-device
+ local master_image=ami-6c9ea606
+ local node_image=ami-6c9ea606
++ aws ec2 describe-images --image-ids ami-6c9ea606 --query 'Images[].RootDeviceName'
+ ROOT_DEVICE_MASTER=/dev/xvda
+ [[ ami-6c9ea606 == \a\m\i\-\6\c\9\e\a\6\0\6 ]]
+ ROOT_DEVICE_NODE=/dev/xvda
+ MASTER_BLOCK_DEVICE_MAPPINGS='[{"DeviceName":"/dev/xvda","Ebs":{"DeleteOnTermination":true,"VolumeSize":8,"VolumeType":"gp2"}} ,{"DeviceName": "/dev/sdc","VirtualName":"ephemeral0"},{"DeviceName": "/dev/sdd","VirtualName":"ephemeral1"},{"DeviceName": "/dev/sde","VirtualName":"ephemeral2"},{"DeviceName": "/dev/sdf","VirtualName":"ephemeral3"}]'
+ NODE_BLOCK_DEVICE_MAPPINGS='[{"DeviceName":"/dev/xvda","Ebs":{"DeleteOnTermination":true,"VolumeSize":32,"VolumeType":"gp2"}} ,{"DeviceName": "/dev/sdc","VirtualName":"ephemeral0"},{"DeviceName": "/dev/sdd","VirtualName":"ephemeral1"},{"DeviceName": "/dev/sde","VirtualName":"ephemeral2"},{"DeviceName": "/dev/sdf","VirtualName":"ephemeral3"}]'
+ find-release-tars
+ SERVER_BINARY_TAR=./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-server-linux-amd64.tar.gz
+ [[ ! -f ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-server-linux-amd64.tar.gz ]]
+ [[ ! -f ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-server-linux-amd64.tar.gz ]]
+ SALT_TAR=./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-salt.tar.gz
+ [[ ! -f ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-salt.tar.gz ]]
+ [[ ! -f ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-salt.tar.gz ]]
+ KUBE_MANIFESTS_TAR=
+ [[ jessie == \t\r\u\s\t\y ]]
+ [[ jessie == \c\o\r\e\o\s ]]
+ ensure-temp-dir
+ [[ -z '' ]]
++ mktemp -d -t kubernetes.XXXXXX
+ KUBE_TEMP=/tmp/kubernetes.fZ0hhp
+ trap 'rm -rf "${KUBE_TEMP}"' EXIT
+ create-bootstrap-script
+ ensure-temp-dir
+ [[ -z /tmp/kubernetes.fZ0hhp ]]
+ BOOTSTRAP_SCRIPT=/tmp/kubernetes.fZ0hhp/bootstrap-script
+ sed '/^#+AWS_OVERRIDES_HERE/,$d' ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/gce/configure-vm.sh
+ cat ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/aws/templates/configure-vm-aws.sh
+ cat ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/aws/templates/format-disks.sh
+ sed -e '1,/^#+AWS_OVERRIDES_HERE/d' ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/gce/configure-vm.sh
+ upload-server-tars
+ SERVER_BINARY_TAR_URL=
+ SERVER_BINARY_TAR_HASH=
+ SALT_TAR_URL=
+ SALT_TAR_HASH=
+ BOOTSTRAP_SCRIPT_URL=
+ BOOTSTRAP_SCRIPT_HASH=
+ ensure-temp-dir
+ [[ -z /tmp/kubernetes.fZ0hhp ]]
++ sha1sum-file ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-server-linux-amd64.tar.gz
++ which shasum
++ shasum -a1 ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-server-linux-amd64.tar.gz
++ awk '{ print $1 }'
+ SERVER_BINARY_TAR_HASH=86c63983a1a1da3f1ec76e1914964e8a42fba244
++ sha1sum-file ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-salt.tar.gz
++ which shasum
++ shasum -a1 ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-salt.tar.gz
++ awk '{ print $1 }'
+ SALT_TAR_HASH=246074805c38dad8774a027a97201cf2bb33b1d4
++ sha1sum-file /tmp/kubernetes.fZ0hhp/bootstrap-script
++ which shasum
++ shasum -a1 /tmp/kubernetes.fZ0hhp/bootstrap-script
++ awk '{ print $1 }'
+ BOOTSTRAP_SCRIPT_HASH=6934c5ccd17380a45d59e6c83cbd5aaf9e5365c2
+ [[ -z '' ]]
+ local project_hash=
++ aws configure get aws_access_key_id
+ local key=AKIAIZSCPH3AXMTAJMLA
+ which md5
++ echo -n 'virginia AKIAIZSCPH3AXMTAJMLA'
++ awk '{ print $1 }'
++ md5sum
+ project_hash=1f8388770186e82b07ada78a3d29b1db
+ AWS_S3_BUCKET=kubernetes-staging-1f8388770186e82b07ada78a3d29b1db
+ echo 'Uploading to Amazon S3'
Uploading to Amazon S3
+ aws s3api get-bucket-location --bucket kubernetes-staging-1f8388770186e82b07ada78a3d29b1db
++ aws s3api get-bucket-location --bucket kubernetes-staging-1f8388770186e82b07ada78a3d29b1db
+ local s3_bucket_location=None
+ local s3_url_base=https://s3-None.amazonaws.com
+ [[ None == \N\o\n\e ]]
+ s3_url_base=https://s3.amazonaws.com
+ s3_bucket_location=us-east-1
+ local -r staging_path=devel
+ local -r local_dir=/tmp/kubernetes.fZ0hhp/s3/
+ mkdir /tmp/kubernetes.fZ0hhp/s3/
+ echo '+++ Staging server tars to S3 Storage: kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel'
+++ Staging server tars to S3 Storage: kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel
+ cp -a ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-server-linux-amd64.tar.gz /tmp/kubernetes.fZ0hhp/s3/
+ cp -a ./cluster/../cluster/../cluster/aws/../../cluster/../server/kubernetes-salt.tar.gz /tmp/kubernetes.fZ0hhp/s3/
+ cp -a /tmp/kubernetes.fZ0hhp/bootstrap-script /tmp/kubernetes.fZ0hhp/s3/
+ aws s3 sync --region us-east-1 --exact-timestamps /tmp/kubernetes.fZ0hhp/s3/ s3://kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/
upload: ../../../tmp/kubernetes.fZ0hhp/s3/bootstrap-script to s3://kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/bootstrap-script
+ local server_binary_path=devel/kubernetes-server-linux-amd64.tar.gz
+ aws s3api put-object-acl --region us-east-1 --bucket kubernetes-staging-1f8388770186e82b07ada78a3d29b1db --key devel/kubernetes-server-linux-amd64.tar.gz --grant-read 'uri="http://acs.amazonaws.com/groups/global/AllUsers"'
+ SERVER_BINARY_TAR_URL=https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz
+ local salt_tar_path=devel/kubernetes-salt.tar.gz
+ aws s3api put-object-acl --region us-east-1 --bucket kubernetes-staging-1f8388770186e82b07ada78a3d29b1db --key devel/kubernetes-salt.tar.gz --grant-read 'uri="http://acs.amazonaws.com/groups/global/AllUsers"'
+ SALT_TAR_URL=https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz
+ local bootstrap_script_path=devel/bootstrap-script
+ aws s3api put-object-acl --region us-east-1 --bucket kubernetes-staging-1f8388770186e82b07ada78a3d29b1db --key devel/bootstrap-script --grant-read 'uri="http://acs.amazonaws.com/groups/global/AllUsers"'
+ BOOTSTRAP_SCRIPT_URL=https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/bootstrap-script
+ echo 'Uploaded server tars:'
Uploaded server tars:
+ echo '  SERVER_BINARY_TAR_URL: https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz'
  SERVER_BINARY_TAR_URL: https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz
+ echo '  SALT_TAR_URL: https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz'
  SALT_TAR_URL: https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz
+ echo '  BOOTSTRAP_SCRIPT_URL: https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/bootstrap-script'
  BOOTSTRAP_SCRIPT_URL: https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/bootstrap-script
+ ensure-iam-profiles
+ aws iam get-instance-profile --instance-profile-name kubernetes-master
INSTANCEPROFILE arn:aws:iam::518863443564:instance-profile/kubernetes-master    2016-04-08T19:13:26Z    AIPAJOQBFRHGDTQNNVOWA   kubernetes-master       /
ROLES   arn:aws:iam::518863443564:role/kubernetes-master        2016-04-08T19:13:24Z    /       AROAJYNPXFLVSGZH2SOBA   kubernetes-master
ASSUMEROLEPOLICYDOCUMENT        2012-10-17
STATEMENT       sts:AssumeRole  Allow
PRINCIPAL       ec2.amazonaws.com
+ aws iam get-instance-profile --instance-profile-name kubernetes-minion
INSTANCEPROFILE arn:aws:iam::518863443564:instance-profile/kubernetes-minion    2016-04-08T19:13:31Z    AIPAJEUGEPXGMIK3EW6BC   kubernetes-minion       /
ROLES   arn:aws:iam::518863443564:role/kubernetes-minion        2016-04-08T19:13:29Z    /       AROAJJ24IGMSAHQIQ5DVM   kubernetes-minion
ASSUMEROLEPOLICYDOCUMENT        2012-10-17
STATEMENT       sts:AssumeRole  Allow
PRINCIPAL       ec2.amazonaws.com
+ load-or-gen-kube-basicauth
+ [[ ! -z '' ]]
+ [[ -z '' ]]
+ gen-kube-basicauth
+ KUBE_USER=admin
++ python -c 'import string,random; print("".join(random.SystemRandom().choice(string.ascii_letters + string.digits) for _ in range(16)))'
+ KUBE_PASSWORD=VOpgP0Ggnty5mLcq
+ load-or-gen-kube-bearertoken
+ [[ ! -z '' ]]
+ [[ -z '' ]]
+ gen-kube-bearertoken
++ dd if=/dev/urandom bs=128 count=1
++ base64
++ dd bs=32 count=1
++ tr -d =+/
+ KUBE_BEARER_TOKEN=iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1
+ ssh-key-setup
+ [[ ! -f /home/virginia/.ssh/kube_aws_rsa ]]
++ get-ssh-fingerprint /home/virginia/.ssh/kube_aws_rsa.pub
++ local -r pubkey_path=/home/virginia/.ssh/kube_aws_rsa.pub
++ ssh-keygen -lf /home/virginia/.ssh/kube_aws_rsa.pub
++ cut -f2 '-d '
+ AWS_SSH_KEY_FINGERPRINT=0d:75:9b:58:db:5b:46:fd:fa:44:7d:a6:6b:f2:6c:4f
+ echo 'Using SSH key with (AWS) fingerprint: 0d:75:9b:58:db:5b:46:fd:fa:44:7d:a6:6b:f2:6c:4f'
Using SSH key with (AWS) fingerprint: 0d:75:9b:58:db:5b:46:fd:fa:44:7d:a6:6b:f2:6c:4f
+ AWS_SSH_KEY_NAME=kubernetes-0d759b58db5b46fdfa447da66bf26c4f
+ import-public-key kubernetes-0d759b58db5b46fdfa447da66bf26c4f /home/virginia/.ssh/kube_aws_rsa.pub
+ local -r name=kubernetes-0d759b58db5b46fdfa447da66bf26c4f
+ local -r path=/home/virginia/.ssh/kube_aws_rsa.pub
+ local ok=1
+ local output=
++ aws ec2 import-key-pair --key-name kubernetes-0d759b58db5b46fdfa447da66bf26c4f --public-key-material file:///home/virginia/.ssh/kube_aws_rsa.pub
+ output='
A client error (InvalidKeyPair.Duplicate) occurred when calling the ImportKeyPair operation: The keypair '\''kubernetes-0d759b58db5b46fdfa447da66bf26c4f'\'' already exists.'
+ ok=0
+ [[ 0 == 0 ]]
+ [[
A client error (InvalidKeyPair.Duplicate) occurred when calling the ImportKeyPair operation: The keypair 'kubernetes-0d759b58db5b46fdfa447da66bf26c4f' already exists. != *\I\n\v\a\l\i\d\K\e\y\P\a\i\r\.\D\u\p\l\i\c\a\t\e* ]]
+ vpc-setup
+ [[ -z '' ]]
++ get_vpc_id
++ aws ec2 describe-vpcs --filters Name=tag:Name,Values=kubernetes-vpc Name=tag:KubernetesCluster,Values=kubernetes --query 'Vpcs[].VpcId'
+ VPC_ID=
+ [[ -z '' ]]
+ echo 'Creating vpc.'
Creating vpc.
++ aws ec2 create-vpc --cidr-block 172.20.0.0/16 --query Vpc.VpcId
+ VPC_ID=vpc-4cd52a2b
+ aws ec2 modify-vpc-attribute --vpc-id vpc-4cd52a2b --enable-dns-support '{"Value": true}'
+ aws ec2 modify-vpc-attribute --vpc-id vpc-4cd52a2b --enable-dns-hostnames '{"Value": true}'
+ add-tag vpc-4cd52a2b Name kubernetes-vpc
+ echo 'Adding tag to vpc-4cd52a2b: Name=kubernetes-vpc'
Adding tag to vpc-4cd52a2b: Name=kubernetes-vpc
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources vpc-4cd52a2b --tags Key=Name,Value=kubernetes-vpc
+ return
+ add-tag vpc-4cd52a2b KubernetesCluster kubernetes
+ echo 'Adding tag to vpc-4cd52a2b: KubernetesCluster=kubernetes'
Adding tag to vpc-4cd52a2b: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources vpc-4cd52a2b --tags Key=KubernetesCluster,Value=kubernetes
+ return
+ echo 'Using VPC vpc-4cd52a2b'
Using VPC vpc-4cd52a2b
+ create-dhcp-option-set
+ case "${AWS_REGION}" in
+ OPTION_SET_DOMAIN=ec2.internal
++ aws ec2 create-dhcp-options --dhcp-configuration Key=domain-name,Values=ec2.internal Key=domain-name-servers,Values=AmazonProvidedDNS --query DhcpOptions.DhcpOptionsId
+ DHCP_OPTION_SET_ID=dopt-e0c5d785
+ add-tag dopt-e0c5d785 Name kubernetes-dhcp-option-set
+ echo 'Adding tag to dopt-e0c5d785: Name=kubernetes-dhcp-option-set'
Adding tag to dopt-e0c5d785: Name=kubernetes-dhcp-option-set
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources dopt-e0c5d785 --tags Key=Name,Value=kubernetes-dhcp-option-set
+ return
+ add-tag dopt-e0c5d785 KubernetesCluster kubernetes
+ echo 'Adding tag to dopt-e0c5d785: KubernetesCluster=kubernetes'
Adding tag to dopt-e0c5d785: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources dopt-e0c5d785 --tags Key=KubernetesCluster,Value=kubernetes
+ return
+ aws ec2 associate-dhcp-options --dhcp-options-id dopt-e0c5d785 --vpc-id vpc-4cd52a2b
+ echo 'Using DHCP option set dopt-e0c5d785'
Using DHCP option set dopt-e0c5d785
+ subnet-setup
+ [[ -z '' ]]
++ get_subnet_id vpc-4cd52a2b us-east-1a
++ local vpc_id=vpc-4cd52a2b
++ local az=us-east-1a
++ aws ec2 describe-subnets --filters Name=tag:KubernetesCluster,Values=kubernetes Name=availabilityZone,Values=us-east-1a Name=vpc-id,Values=vpc-4cd52a2b --query 'Subnets[].SubnetId'
+ SUBNET_ID=
+ [[ -z '' ]]
+ echo 'Creating subnet.'
Creating subnet.
++ aws ec2 create-subnet --cidr-block 172.20.0.0/24 --vpc-id vpc-4cd52a2b --availability-zone us-east-1a --query Subnet.SubnetId
+ SUBNET_ID=subnet-19aaf86f
+ add-tag subnet-19aaf86f KubernetesCluster kubernetes
+ echo 'Adding tag to subnet-19aaf86f: KubernetesCluster=kubernetes'
Adding tag to subnet-19aaf86f: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources subnet-19aaf86f --tags Key=KubernetesCluster,Value=kubernetes
+ return
+ echo 'Using subnet subnet-19aaf86f'
Using subnet subnet-19aaf86f
++ get_igw_id vpc-4cd52a2b
++ local vpc_id=vpc-4cd52a2b
++ aws ec2 describe-internet-gateways --filters Name=attachment.vpc-id,Values=vpc-4cd52a2b --query 'InternetGateways[].InternetGatewayId'
+ IGW_ID=
+ [[ -z '' ]]
+ echo 'Creating Internet Gateway.'
Creating Internet Gateway.
++ aws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId
+ IGW_ID=igw-169dff72
+ aws ec2 attach-internet-gateway --internet-gateway-id igw-169dff72 --vpc-id vpc-4cd52a2b
+ echo 'Using Internet Gateway igw-169dff72'
Using Internet Gateway igw-169dff72
+ echo 'Associating route table.'
Associating route table.
++ aws ec2 describe-route-tables --filters Name=vpc-id,Values=vpc-4cd52a2b Name=tag:KubernetesCluster,Values=kubernetes --query 'RouteTables[].RouteTableId'
+ ROUTE_TABLE_ID=
+ [[ -z '' ]]
+ echo 'Creating route table'
Creating route table
++ aws ec2 create-route-table --vpc-id=vpc-4cd52a2b --query RouteTable.RouteTableId
+ ROUTE_TABLE_ID=rtb-84e795e3
+ add-tag rtb-84e795e3 KubernetesCluster kubernetes
+ echo 'Adding tag to rtb-84e795e3: KubernetesCluster=kubernetes'
Adding tag to rtb-84e795e3: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources rtb-84e795e3 --tags Key=KubernetesCluster,Value=kubernetes
+ return
+ echo 'Associating route table rtb-84e795e3 to subnet subnet-19aaf86f'
Associating route table rtb-84e795e3 to subnet subnet-19aaf86f
+ aws ec2 associate-route-table --route-table-id rtb-84e795e3 --subnet-id subnet-19aaf86f
+ echo 'Adding route to route table rtb-84e795e3'
Adding route to route table rtb-84e795e3
+ aws ec2 create-route --route-table-id rtb-84e795e3 --destination-cidr-block 0.0.0.0/0 --gateway-id igw-169dff72
+ echo 'Using Route Table rtb-84e795e3'
Using Route Table rtb-84e795e3
++ get_security_group_id kubernetes-master-kubernetes
++ local name=kubernetes-master-kubernetes
++ tr '\t' '\n'
++ aws ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-4cd52a2b Name=group-name,Values=kubernetes-master-kubernetes Name=tag:KubernetesCluster,Values=kubernetes --query 'SecurityGroups[].GroupId'
+ MASTER_SG_ID=
+ [[ -z '' ]]
+ echo 'Creating master security group.'
Creating master security group.
+ create-security-group kubernetes-master-kubernetes 'Kubernetes security group applied to master nodes'
+ local -r name=kubernetes-master-kubernetes
+ local -r 'description=Kubernetes security group applied to master nodes'
++ get_security_group_id kubernetes-master-kubernetes
++ local name=kubernetes-master-kubernetes
++ aws ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-4cd52a2b Name=group-name,Values=kubernetes-master-kubernetes Name=tag:KubernetesCluster,Values=kubernetes --query 'SecurityGroups[].GroupId'
++ tr '\t' '\n'
+ local sgid=
+ [[ -z '' ]]
+ echo 'Creating security group kubernetes-master-kubernetes.'
Creating security group kubernetes-master-kubernetes.
++ aws ec2 create-security-group --group-name kubernetes-master-kubernetes --description 'Kubernetes security group applied to master nodes' --vpc-id vpc-4cd52a2b --query GroupId
+ sgid=sg-8bdc22f0
+ add-tag sg-8bdc22f0 KubernetesCluster kubernetes
+ echo 'Adding tag to sg-8bdc22f0: KubernetesCluster=kubernetes'
Adding tag to sg-8bdc22f0: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources sg-8bdc22f0 --tags Key=KubernetesCluster,Value=kubernetes
+ return
++ get_security_group_id kubernetes-minion-kubernetes
++ local name=kubernetes-minion-kubernetes
++ tr '\t' '\n'
++ aws ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-4cd52a2b Name=group-name,Values=kubernetes-minion-kubernetes Name=tag:KubernetesCluster,Values=kubernetes --query 'SecurityGroups[].GroupId'
+ NODE_SG_ID=
+ [[ -z '' ]]
+ echo 'Creating minion security group.'
Creating minion security group.
+ create-security-group kubernetes-minion-kubernetes 'Kubernetes security group applied to minion nodes'
+ local -r name=kubernetes-minion-kubernetes
+ local -r 'description=Kubernetes security group applied to minion nodes'
++ get_security_group_id kubernetes-minion-kubernetes
++ local name=kubernetes-minion-kubernetes
++ aws ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-4cd52a2b Name=group-name,Values=kubernetes-minion-kubernetes Name=tag:KubernetesCluster,Values=kubernetes --query 'SecurityGroups[].GroupId'
++ tr '\t' '\n'
+ local sgid=
+ [[ -z '' ]]
+ echo 'Creating security group kubernetes-minion-kubernetes.'
Creating security group kubernetes-minion-kubernetes.
++ aws ec2 create-security-group --group-name kubernetes-minion-kubernetes --description 'Kubernetes security group applied to minion nodes' --vpc-id vpc-4cd52a2b --query GroupId
+ sgid=sg-82dc22f9
+ add-tag sg-82dc22f9 KubernetesCluster kubernetes
+ echo 'Adding tag to sg-82dc22f9: KubernetesCluster=kubernetes'
Adding tag to sg-82dc22f9: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources sg-82dc22f9 --tags Key=KubernetesCluster,Value=kubernetes
+ return
+ detect-security-groups
+ [[ -z '' ]]
++ get_security_group_id kubernetes-master-kubernetes
++ local name=kubernetes-master-kubernetes
++ aws ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-4cd52a2b Name=group-name,Values=kubernetes-master-kubernetes Name=tag:KubernetesCluster,Values=kubernetes --query 'SecurityGroups[].GroupId'
++ tr '\t' '\n'
+ MASTER_SG_ID=sg-8bdc22f0
+ [[ -z sg-8bdc22f0 ]]
+ echo 'Using master security group: kubernetes-master-kubernetes sg-8bdc22f0'
Using master security group: kubernetes-master-kubernetes sg-8bdc22f0
+ [[ -z '' ]]
++ get_security_group_id kubernetes-minion-kubernetes
++ local name=kubernetes-minion-kubernetes
++ tr '\t' '\n'
++ aws ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-4cd52a2b Name=group-name,Values=kubernetes-minion-kubernetes Name=tag:KubernetesCluster,Values=kubernetes --query 'SecurityGroups[].GroupId'
+ NODE_SG_ID=sg-82dc22f9
+ [[ -z sg-82dc22f9 ]]
+ echo 'Using minion security group: kubernetes-minion-kubernetes sg-82dc22f9'
Using minion security group: kubernetes-minion-kubernetes sg-82dc22f9
+ authorize-security-group-ingress sg-8bdc22f0 '--source-group sg-8bdc22f0 --protocol all'
+ local -r sgid=sg-8bdc22f0
+ shift
+ local ok=1
+ local output=
++ aws ec2 authorize-security-group-ingress --group-id sg-8bdc22f0 --source-group sg-8bdc22f0 --protocol all
+ output=
+ [[ 1 == 0 ]]
+ authorize-security-group-ingress sg-82dc22f9 '--source-group sg-82dc22f9 --protocol all'
+ local -r sgid=sg-82dc22f9
+ shift
+ local ok=1
+ local output=
++ aws ec2 authorize-security-group-ingress --group-id sg-82dc22f9 --source-group sg-82dc22f9 --protocol all
+ output=
+ [[ 1 == 0 ]]
+ authorize-security-group-ingress sg-8bdc22f0 '--source-group sg-82dc22f9 --protocol all'
+ local -r sgid=sg-8bdc22f0
+ shift
+ local ok=1
+ local output=
++ aws ec2 authorize-security-group-ingress --group-id sg-8bdc22f0 --source-group sg-82dc22f9 --protocol all
+ output=
+ [[ 1 == 0 ]]
+ authorize-security-group-ingress sg-82dc22f9 '--source-group sg-8bdc22f0 --protocol all'
+ local -r sgid=sg-82dc22f9
+ shift
+ local ok=1
+ local output=
++ aws ec2 authorize-security-group-ingress --group-id sg-82dc22f9 --source-group sg-8bdc22f0 --protocol all
+ output=
+ [[ 1 == 0 ]]
+ authorize-security-group-ingress sg-8bdc22f0 '--protocol tcp --port 22 --cidr 0.0.0.0/0'
+ local -r sgid=sg-8bdc22f0
+ shift
+ local ok=1
+ local output=
++ aws ec2 authorize-security-group-ingress --group-id sg-8bdc22f0 --protocol tcp --port 22 --cidr 0.0.0.0/0
+ output=
+ [[ 1 == 0 ]]
+ authorize-security-group-ingress sg-82dc22f9 '--protocol tcp --port 22 --cidr 0.0.0.0/0'
+ local -r sgid=sg-82dc22f9
+ shift
+ local ok=1
+ local output=
++ aws ec2 authorize-security-group-ingress --group-id sg-82dc22f9 --protocol tcp --port 22 --cidr 0.0.0.0/0
+ output=
+ [[ 1 == 0 ]]
+ authorize-security-group-ingress sg-8bdc22f0 '--protocol tcp --port 443 --cidr 0.0.0.0/0'
+ local -r sgid=sg-8bdc22f0
+ shift
+ local ok=1
+ local output=
++ aws ec2 authorize-security-group-ingress --group-id sg-8bdc22f0 --protocol tcp --port 443 --cidr 0.0.0.0/0
+ output=
+ [[ 1 == 0 ]]
+ [[ '' == \t\r\u\e ]]
+ start-master
+ build-runtime-config
+ :
+ ensure-master-pd
+ local name=kubernetes-master-pd
+ find-master-pd
+ local name=kubernetes-master-pd
+ [[ -z '' ]]
+ local zone_filter=Name=availability-zone,Values=us-east-1a
+ [[ '' == \t\r\u\e ]]
++ aws ec2 describe-volumes --filters Name=availability-zone,Values=us-east-1a Name=tag:Name,Values=kubernetes-master-pd Name=tag:KubernetesCluster,Values=kubernetes --query 'Volumes[].VolumeId'
+ MASTER_DISK_ID=
+ [[ -z '' ]]
+ echo 'Creating master disk: size 20GB, type gp2'
Creating master disk: size 20GB, type gp2
++ aws ec2 create-volume --availability-zone us-east-1a --volume-type gp2 --size 20 --query VolumeId
+ MASTER_DISK_ID=vol-dd1ac876
+ add-tag vol-dd1ac876 Name kubernetes-master-pd
+ echo 'Adding tag to vol-dd1ac876: Name=kubernetes-master-pd'
Adding tag to vol-dd1ac876: Name=kubernetes-master-pd
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources vol-dd1ac876 --tags Key=Name,Value=kubernetes-master-pd
+ return
+ add-tag vol-dd1ac876 KubernetesCluster kubernetes
+ echo 'Adding tag to vol-dd1ac876: KubernetesCluster=kubernetes'
Adding tag to vol-dd1ac876: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources vol-dd1ac876 --tags Key=KubernetesCluster,Value=kubernetes
+ return
+ ensure-master-ip
+ find-tagged-master-ip
+ find-master-pd
+ local name=kubernetes-master-pd
+ [[ -z vol-dd1ac876 ]]
+ [[ -n vol-dd1ac876 ]]
++ get-tag vol-dd1ac876 kubernetes.io/master-ip
++ aws ec2 describe-tags --filters Name=resource-id,Values=vol-dd1ac876 Name=key,Values=kubernetes.io/master-ip --query 'Tags[].Value'
+ KUBE_MASTER_IP=
+ [[ -z '' ]]
+ [[ '' =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]
++ aws ec2 allocate-address --domain vpc --query PublicIp
+ KUBE_MASTER_IP=52.202.226.173
+ echo 'Allocated Elastic IP for master: 52.202.226.173'
Allocated Elastic IP for master: 52.202.226.173
+ add-tag vol-dd1ac876 kubernetes.io/master-ip 52.202.226.173
+ echo 'Adding tag to vol-dd1ac876: kubernetes.io/master-ip=52.202.226.173'
Adding tag to vol-dd1ac876: kubernetes.io/master-ip=52.202.226.173
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources vol-dd1ac876 --tags Key=kubernetes.io/master-ip,Value=52.202.226.173
+ return
+ create-certs 52.202.226.173 172.20.0.9
+ local -r primary_cn=52.202.226.173
+ octets=($(echo "${SERVICE_CLUSTER_IP_RANGE}" | sed -e 's|/.*||' -e 's/\./ /g'))
++ echo 10.0.0.0/16
++ sed -e 's|/.*||' -e 's/\./ /g'
+ local octets
+ (( octets[3]+=1 ))
++ echo '10 0 0 1'
++ sed 's/ /./g'
+ local -r service_ip=10.0.0.1
+ local sans=
+ for extra in '$@'
+ [[ -n 52.202.226.173 ]]
+ sans=IP:52.202.226.173,
+ for extra in '$@'
+ [[ -n 172.20.0.9 ]]
+ sans=IP:52.202.226.173,IP:172.20.0.9,
+ sans=IP:52.202.226.173,IP:172.20.0.9,IP:10.0.0.1,DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster.local,DNS:kubernetes-master
+ echo 'Generating certs for alternate-names: IP:52.202.226.173,IP:172.20.0.9,IP:10.0.0.1,DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster.local,DNS:kubernetes-master'
Generating certs for alternate-names: IP:52.202.226.173,IP:172.20.0.9,IP:10.0.0.1,DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster.local,DNS:kubernetes-master
++ mktemp /tmp/kubernetes.fZ0hhp/cert_create_debug_output.XXX
+ local -r cert_create_debug_output=/tmp/kubernetes.fZ0hhp/cert_create_debug_output.Xwf
+ CERT_DIR=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3
++ cat /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/ca.crt
++ base64
++ tr -d '\r\n'
+ CA_CERT_BASE64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lKQUxEL0tLYUs2dzMvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ1F4SWpBZ0JnTlYKQkFNVUdUVXlMakl3TWk0eU1qWXVNVGN6UURFME5qSTFOVGcwT0RZd0hoY05NVFl3TlRBMk1UZ3hORFEyV2hjTgpNall3TlRBME1UZ3hORFEyV2pBa01TSXdJQVlEVlFRREZCazFNaTR5TURJdU1qSTJMakUzTTBBeE5EWXlOVFU0Ck5EZzJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBGNHRzNjA1YW13bkJFOEsKVG9TUHdiTUZSUldQdUtoc21WTDIveUp3UUxRM3dQNWNXN1dzc3pOcFhES2NXYUprT2d4OG9LN0VRY28zaVBlQQpNZ1NNRkNMMHJaa3VZcW9aRWkvT3FvUmRrM05tNGxSbGNXN0NpTWorZjQ5Qk9Wd2NDcHBjb1VYbkUyTGgydlpnCktLMERDaGtUOUVjKzVtMndKNDB2dmNWUW44UmZwUStVY05Db2pGanVhRHpSUnQyWjhtMVM1aHJGTGpNV2E3ck0KWC8yV3hYekozSXN4bFBMRTB5QnhjOFFHR1Bqb3NLZUZRVW1MbTlYQ2JNbEpCQXNldkJVV3RZNUtJRFZpNHRVQQpMUFdlRGlZYjRtRGFITmhWb0xodVRDSndMWlUvZGJ5NjlCajNYdkhYNjk2WlRDeUV6a2RWSjFwZ0RjdXlaRXhICnpkUkxIUUlEQVFBQm80R1RNSUdRTUIwR0ExVWREZ1FXQkJUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGV6QlUKQmdOVkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWgpOVEl1TWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQXdHQTFVZEV3UUZNQU1CCkFmOHdDd1lEVlIwUEJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHVNbW9wRkV6MFpXTkJpc1YKS3VZNXZNUEhUNVh4U29pbXJJQk9tSjNGMk1odmF2WHNURVJYY1NKbUhxeUVXejdvellkZ2NyRWM2K0dBVUx3dwpaV1BrOTdZUkxHTUxGbjJMZTdBbFFyV1RxQVFsRkhDQWxKK0o0MnJ5SFIwdkE0dU1mYlczQ1ZuVmlodGJnekVRCnhUTm1GMUdTMXl4bFcxcjdJT1NTbEdKTlNEVUtzMDdaTVFvbjFIUC9oOEpZUE9TZVpVb2JaZGhZQ3FTYS85MXcKS2YrU3RheG9wSWM3T2lJR0YzU0UxUWY2dG5RVTVZdUVjdWxyMW5vQkF4L2JaRW4yckUrNWtrYWtjRUlSUUNCNgpQRnJLNWRCS1dkR0QyQkNLZTMzQ1V3KzJzWXNWakpDSjVSbTJjYWpEQmdTK1RVU2dvN3lyR3gxN2Zhb0RORTRUCkUyc0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
++ cat /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubernetes-master.crt
++ tr -d '\r\n'
++ base64
+ MASTER_CERT_BASE64=Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAxICgweDEpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlcm5ldGVzLW1hc3RlcgogICAgICAgIFN1YmplY3QgUHVibGljIEtleSBJbmZvOgogICAgICAgICAgICBQdWJsaWMgS2V5IEFsZ29yaXRobTogcnNhRW5jcnlwdGlvbgogICAgICAgICAgICAgICAgUHVibGljLUtleTogKDIwNDggYml0KQogICAgICAgICAgICAgICAgTW9kdWx1czoKICAgICAgICAgICAgICAgICAgICAwMDpjMzphNzo3NTpiNTphMzoyNjpmYjpkOTo1Yzo4NjoxZjo4MDplYjo3ZjoKICAgICAgICAgICAgICAgICAgICA3ZjowNzo2ZDo2ZDpjZjpmNTo0NzpkNzo3NjpkNzo2MzphOTo0MzpiMTozZjoKICAgICAgICAgICAgICAgICAgICA0MDo0OToyZDo5MTpmZDpkMDo2Njo2Nzo5ZDo2NTpiMjoyMDowNzoxYzowYToKICAgICAgICAgICAgICAgICAgICBjNTowZTo4NTo0MzoxMTplYjplODphNDpiNTpmZjowZDo4MToyYzphZjpkODoKICAgICAgICAgICAgICAgICAgICBiNTo1MDpmNjoxYTo2MzozZjpjYzphNzo1Nzo2OTo2YToyNjplODozZToyYzoKICAgICAgICAgICAgICAgICAgICBmMzpiYTowYjozZDphNDo4Nzo5YzowYjoxNzpmMjplZTo3ZjpiZTo3MDpkZDoKICAgICAgICAgICAgICAgICAgICBhNTplODo4MzphNTpiZTo2ZDo5YzoyMjozZjozMToxMTowNjo0ZDo4MDo3ZToKICAgICAgICAgICAgICAgICAgICAyODoyMjo1ODpiNDo0NDo3OTphYzo5ZjplODo2ODoxZjpiYzo2NDoyYTo2YzoKICAgICAgICAgICAgICAgICAgICA2Yjo2NTowZTozNjpjNzowNjplYTo2MTozNTpiYTo4Mzo1MDpiMTo1MDpiMjoKICAgICAgICAgICAgICAgICAgICAxZTpiMDowZTpiNTpjZjo2MTphYjo1Mzo3ODoxZTphZDo5Yjo2Yjo4YTowZjoKICAgICAgICAgICAgICAgICAgICBiODoxNjpjZDo1ZjpkYTo3Zjo5MzphMDo5NDo0ODpjMDpmMjozZjo1YzoyMjoKICAgICAgICAgICAgICAgICAgICBiYzowYjo4MDo1NjplZToyMTpjOTowMTphZjoyYTpiYTo0Mzo2Yjo2Yzo3NzoKICAgICAgICAgICAgICAgICAgICA2NjpkODo5Mzo1ZDowMToxOTpjMjo1YjoyODo1ZDo2Yjo0Yjo1ODo2Mzo1ZDoKICAgICAgICAgICAgICAgICAgICA3NDphYjo4ODo1Yzo0YjpmMTpjMDowYjo1ODoyMDoyZjo0MjpiOTo4YTphYjoKICAgICAgICAgICAgICAgICAgICBkNDowMzphOTo0ZDo3MDpjZTo3ODowMDo1YTo0YTpkMTo4NjpiMzpkNTo5MjoKICAgICAgICAgICAgICAgICAgICBlNTo4OTo1YToyNjpmNTozZTphYzo4NzoxODplYTo2Njo3ZjphNDplZTo1ZDoKICAgICAgICAgICAgICAgICAgICA2MTplYjpjMzphMjphZjowMzpiODo0MDo5NzplMDo2Mjo2MDozNjpmZDpjZToKICAgICAgICAgICAgICAgICAgICBhNDplMwogICAgICAgICAgICAgICAgRXhwb25lbnQ6IDY1NTM3ICgweDEwMDAxKQogICAgICAgIFg1MDl2MyBleHRlbnNpb25zOgogICAgICAgICAgICBYNTA5djMgQmFzaWMgQ29uc3RyYWludHM6IAogICAgICAgICAgICAgICAgQ0E6RkFMU0UKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgS2V5IElkZW50aWZpZXI6IAogICAgICAgICAgICAgICAgNTA6QUI6RjY6NUQ6RUQ6NEU6QjI6RDU6N0Q6ODI6RTI6NUM6RUY6QTA6MTQ6Qjc6MTQ6RUY6NkM6NjEKICAgICAgICAgICAgWDUwOXYzIEF1dGhvcml0eSBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBrZXlpZDpFQzo3NDpCRTpFODpFMzo1MTpCNDpDQTpFMjoxRTo4NDpEQzpBMDoyODo0NjowMzo5QzozMDo5Nzo3QgogICAgICAgICAgICAgICAgRGlyTmFtZTovQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgICAgICAgICAgc2VyaWFsOkIwOkZGOjI4OkE2OjhBOkVCOjBEOkZGCgogICAgICAgICAgICBYNTA5djMgRXh0ZW5kZWQgS2V5IFVzYWdlOiAKICAgICAgICAgICAgICAgIFRMUyBXZWIgU2VydmVyIEF1dGhlbnRpY2F0aW9uCiAgICAgICAgICAgIFg1MDl2MyBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgRGlnaXRhbCBTaWduYXR1cmUsIEtleSBFbmNpcGhlcm1lbnQKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgQWx0ZXJuYXRpdmUgTmFtZTogCiAgICAgICAgICAgICAgICBJUCBBZGRyZXNzOjUyLjIwMi4yMjYuMTczLCBJUCBBZGRyZXNzOjE3Mi4yMC4wLjksIElQIEFkZHJlc3M6MTAuMC4wLjEsIEROUzprdWJlcm5ldGVzLCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LnN2YywgRE5TOmt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbCwgRE5TOmt1YmVybmV0ZXMtbWFzdGVyCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgICAxNDoxODowMzpiNDo5NDphZjo5MzplNTo1OTplNTpmNjpmYjo3OTo5MDo5NjozNzplMDpkNzoKICAgICAgICAgYjk6ZDE6NTU6OTM6NDY6YzM6ZTA6NzI6NDY6MmI6MWQ6YWI6OTQ6ZDg6YTA6M2I6M2U6ZWQ6CiAgICAgICAgIGMyOjkxOmZhOjU1OmNkOjk1OmQ3OjBkOmM4OmM0OjliOjY1OmMzOjhkOmY0OmIxOmI5OjdiOgogICAgICAgICBmODowNjo3NDo4MTo5ZTplNzo3NDo0Zjo4Yjo3NTphMDowMzplZjo2MTo1NTo2MTo2ZTpmZjoKICAgICAgICAgZDk6ZTE6ZmU6M2Y6MmI6M2M6Nzc6NzE6YWI6Mzc6NGQ6MWE6MDU6YWY6MTc6M2I6NWE6MzE6CiAgICAgICAgIDk4Ojk3OjEwOjM4OjYzOjQzOjY2OjdlOmY0OmQ1OmRiOjRjOjNhOjU5OjAyOmY3OjgzOjYxOgogICAgICAgICA2ODpjODphZTphZTo0NDplNzo3OTozMzowYzo1ZTpkMTphMzo5MzoxMjo2YzplYzoxMzpiYjoKICAgICAgICAgNmI6Mzk6OTg6NzQ6OTc6ZWI6YzA6NzE6ZTE6OWE6Yzk6YTY6NmM6Y2I6NTM6YzQ6ZGQ6MDk6CiAgICAgICAgIGFjOjc1OmZjOmQ1OmQ1OjEyOjA5OjFhOjhmOmEzOjRjOjdjOmMxOjJlOjYxOjIwOjk3OmFhOgogICAgICAgICA0ODpjMzpiZjpmMDpkMjozODowOTphYjowMzo5YzplODozMTozNjozMDpjZDpjMzpiZDowZjoKICAgICAgICAgMjY6NTg6NTk6N2U6ZTE6MTM6MWI6NDY6YmU6N2U6YjY6OWE6MWE6ZDc6M2I6ZWI6MjA6NWI6CiAgICAgICAgIDJkOjQ2OjQ0OmEwOjA0OjJlOmEyOjA5OjNjOmU5OjA0OjUxOjYxOmFjOjdjOmJlOjdiOmIxOgogICAgICAgICBlMTplOTozNTozNDphNTplMDphMToxMTowZDo0ZTpkYToxYTo4NDowYTo4ODo3ZTpiYjo3YjoKICAgICAgICAgMTk6YWY6MzQ6MDM6MDA6YzI6NGI6ZDg6OTc6NTQ6N2Q6OTg6NzU6ZmQ6ZDM6NzM6ZmE6M2Y6CiAgICAgICAgIGYwOjk5OjYyOjM2Ci0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEOURDQ0F0eWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBa01TSXdJQVlEVlFRREZCazFNaTR5Ck1ESXVNakkyTGpFM00wQXhORFl5TlRVNE5EZzJNQjRYRFRFMk1EVXdOakU0TVRRME5sb1hEVEkyTURVd05ERTQKTVRRME5sb3dIREVhTUJnR0ExVUVBeE1SYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREcDNXMW95YjcyVnlHSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94ClAwQkpMWkg5MEdabm5XV3lJQWNjQ3NVT2hVTVI2K2lrdGY4TmdTeXYyTFZROWhwalA4eW5WMmxxSnVnK0xQTzYKQ3oya2g1d0xGL0x1Zjc1dzNhWG9nNlcrYlp3aVB6RVJCazJBZmlnaVdMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSApCdXBoTmJxRFVMRlFzaDZ3RHJYUFlhdFRlQjZ0bTJ1S0Q3Z1d6Vi9hZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCCnJ5cTZRMnRzZDJiWWsxMEJHY0piS0YxclMxaGpYWFNyaUZ4TDhjQUxXQ0F2UXJtS3E5UURxVTF3em5nQVdrclIKaHJQVmt1V0pXaWIxUHF5SEdPcG1mNlR1WFdIcnc2S3ZBN2hBbCtCaVlEYjl6cVRqQWdNQkFBR2pnZ0UzTUlJQgpNekFKQmdOVkhSTUVBakFBTUIwR0ExVWREZ1FXQkJSUXEvWmQ3VTZ5MVgyQzRsenZvQlMzRk85c1lUQlVCZ05WCkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXUKTWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzRwpBUVVGQndNQk1Bc0dBMVVkRHdRRUF3SUZvRENCamdZRFZSMFJCSUdHTUlHRGh3UTB5dUt0aHdTc0ZBQUpod1FLCkFBQUJnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQ0ZtdDFZbVZ5Ym1WMFpYTXUKWkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaApiSUlSYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJRWUE3U1VyNVBsCldlWDIrM21RbGpmZzE3blJWWk5HdytCeVJpc2RxNVRZb0RzKzdjS1IrbFhObGRjTnlNU2JaY09OOUxHNWUvZ0cKZElHZTUzUlBpM1dnQSs5aFZXRnUvOW5oL2o4clBIZHhxemROR2dXdkZ6dGFNWmlYRURoalEyWis5TlhiVERwWgpBdmVEWVdqSXJxNUU1M2t6REY3Um81TVNiT3dUdTJzNW1IU1g2OEJ4NFpySnBtekxVOFRkQ2F4MS9OWFZFZ2thCmo2Tk1mTUV1WVNDWHFrakR2L0RTT0FtckE1em9NVFl3emNPOUR5WllXWDdoRXh0R3ZuNjJtaHJYTytzZ1d5MUcKUktBRUxxSUpQT2tFVVdHc2ZMNTdzZUhwTlRTbDRLRVJEVTdhR29RS2lINjdleG12TkFNQXdrdllsMVI5bUhYOQowM1A2UC9DWllqWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
++ cat /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubernetes-master.key
++ base64
++ tr -d '\r\n'
+ MASTER_KEY_BASE64=LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRERwM1cxb3liNzJWeUcKSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94UDBCSkxaSDkwR1publdXeUlBY2NDc1VPaFVNUjYraWt0ZjhOZ1N5dgoyTFZROWhwalA4eW5WMmxxSnVnK0xQTzZDejJraDV3TEYvTHVmNzV3M2FYb2c2VytiWndpUHpFUkJrMkFmaWdpCldMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSEJ1cGhOYnFEVUxGUXNoNndEclhQWWF0VGVCNnRtMnVLRDdnV3pWL2EKZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCcnlxNlEydHNkMmJZazEwQkdjSmJLRjFyUzFoalhYU3JpRnhMOGNBTApXQ0F2UXJtS3E5UURxVTF3em5nQVdrclJoclBWa3VXSldpYjFQcXlIR09wbWY2VHVYV0hydzZLdkE3aEFsK0JpCllEYjl6cVRqQWdNQkFBRUNnZ0VCQUk1UG51RzRRMkhLcjI3ck9VV1NIaDZUN056blp4TUU0UlFmaVJwQ2pJcnQKdDVQcllxRVpMbUJLeFlFVElGUTRnQmxvQTNiUzNpcS9lM2FJWlJIM2dDZ1N2dFExVTNxZnhDdDlYT1pFeU5pRQp2dTZldzlmUVdRQVZhRmpnY00wN1F1YnlHY2x0VVRBV0V6RXdYaWEwYmVoK0RrYVBMRGhqVmhaU0tXdkl6dkJXCjhaOENLYjlNa1hKMFdQTFlCSE8zZk5lZUNHRFk2ZVQ2eFpSQlZJNWUrVHppNEZySmdFdE51WHpJVVJnRmc5YmwKT1lMd1gzYTlwaEMzbjNlanVFT0toSXpDcVN1WWVRV0dBMEJweVV0YzAwdHRCaEcyVVpYVFVJWWRHdHZocWhoeQpFQmdOdWs4YjZTMTR4TW9GcUxFUnFYTXA4Tk5nelFCQzhRTEFwdWE4WWdFQ2dZRUErcmNwNHF5dmdXeEI0ZUhoCklYVngvVFJZYU1hOFRTaGtKcktoYkMwYjdzNmRnZWpGOUdIWThoUk5XSkNaNGloUlltTWs0cE1LNTI3clNaME4KSGV5RGZ2aXAwT2lBdTFsZGFaNFJ6VC9KREhYYXJva2toT3pDN2pwUG45bjAwMXkraVdNSit0UTBBUHVYUlFDSApkVFE5QWFnZXZ4RlpTUG9UbUNjRHZxeVZyZU1DZ1lFQXg4Y3d4cUdIQkVZU3FCUGlZVEdNc1dwQWsvcDAydUNOClNhTWlZVmhmci9icXJJdnBRSTViTUlleVRrdU5QMW96WVRZcVh2d0xXaXpBeXFxSHkxMXlyaDZSL1VZUzg1VFkKU2tGY2ExSk0xZHR1MHJUZ1dnNnRIckVLU0FTazFEaTZYVThjNE1pZ3p0SWg1WHZwRDBVZ01pNmJOTmRKVTE3bQpCQmdrNTVnMDNRRUNnWUVBdjZVakwxSXhGZzFhanYvS3gzaXZHWTNaeHIyalVwZDlkdGMwN1N2T0hrMXh1TXZtCkJWaUdMUVczMmVzdXRlRjcxR2xVMkp6dHlOclFvQVNjOGpMSWtWWWkrTDNCS1hTMkl2WGhSYk5zUzBvTFR6OGwKMnpYZ0M1b25JMW5IKzRqNVhLdUlCV1FRSEhBMHdWb1dNVkV0RVFjaCtZdVpaRjlFZXhuWGt2ajVzV0VDZ1lBOApVR3p2YXhEaVAyMmVoUEpSdWEzcVdsUEkyVkt5U2gwZDREeWUreGxZZk1sNDhueW5XdE01SVo2NWVLSGFRSmRHCmdCM21zMTJTQ2ZUaXV2MW9ibndUQ1hPMTdaUUhLaWJxdERUOHljb2N2clVFdEVzUHBXS3E0M1JoTGRXOXBLclAKUlBWSkFBbGNwNkJJTWxLNG8zd0c2bjg5UXNvR2U1NGlHay82QTcvaUFRS0JnUURXQmxlSnplTDlhRWkxU0xWQgpsWFhYbTRZR2UyeWhEUnFlY0w4em5NT3FLdEQ2VE9hcTlXMEZ6Ui96b3lDVkVBKytEYVdmMk9qTk4xSXl4TENTCjN1TmVlcTJwRVg3WVc0ZHFrQWpzSXRTL3hwZGgvdXV4Y1hzY0IyQ2lHQUM4bDVweE5WbmFHaUlXQzRvaGRFZ0cKN2JtN3FrMzZaQ21lZmwxaW5YdGp6SXVmMXc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
++ cat /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubelet.crt
++ tr -d '\r\n'
++ base64
+ KUBELET_CERT_BASE64=Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAyICgweDIpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlbGV0CiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmQyOjM1OjY4OjRkOjJmOjcwOjdmOmU3OmU0OmJmOjUyOmIwOjYxOmFlOgogICAgICAgICAgICAgICAgICAgIGYyOmVmOmFhOjU4Ojg4OjA0OjZhOmFmOmIyOjZhOjA5OjNhOjBmOjZkOmIyOgogICAgICAgICAgICAgICAgICAgIDkzOmIzOmZhOjBhOjU2OmQ5OjdjOmEzOjBkOjQ0OjgwOmUxOmU3OjExOjg4OgogICAgICAgICAgICAgICAgICAgIDA3OmE0OjNhOmM0OjkwOmI1OmEyOjYyOjg0OmM1OmNmOmE2OmVhOjJmOjI3OgogICAgICAgICAgICAgICAgICAgIDFiOjU3OmFiOmFlOjgzOmNlOjhjOjNhOmI2OjdlOjBlOjA2OjhkOjQ5OjAzOgogICAgICAgICAgICAgICAgICAgIDZlOmFkOjdhOmQ0OmFiOmJhOjg5OmU0OmE4OjJlOjMwOmVlOjdmOjFmOjdiOgogICAgICAgICAgICAgICAgICAgIDFjOmE5OmJkOjcyOjk4OmFjOjU3OmI3OjQ2OmI2OmRhOjVhOmM4OmE2OjY5OgogICAgICAgICAgICAgICAgICAgIGY4OjU2OjkxOjc3OjQ4OmNmOjJhOmVjOjYwOjlmOjUxOjQ5OmEzOjA0OjY2OgogICAgICAgICAgICAgICAgICAgIGUzOmQ3Ojg2OjkyOjY1OjQ3OmQ5OjhmOmViOmU5OjA5OjZhOjE4OjI3OjEwOgogICAgICAgICAgICAgICAgICAgIDdhOjlhOjFmOmQwOjE4OjkwOjk5OmVjOjAzOjFiOmMxOjhlOmFiOjI1OjQwOgogICAgICAgICAgICAgICAgICAgIDNmOmZlOmJiOjU4OjY2OjkxOjEwOjcxOmU3OjQzOjM4OjYyOjkzOmMwOjczOgogICAgICAgICAgICAgICAgICAgIDM3OmRmOjg5Ojc2OmIzOjdkOmY2OjYxOjMxOmEwOmNjOjU4OmU4OmNhOmFiOgogICAgICAgICAgICAgICAgICAgIDE4Ojk2OjRjOmU3OmY3OjYwOmQ0OmZiOmNjOjBjOmM0OjZjOjBmOjgzOjBmOgogICAgICAgICAgICAgICAgICAgIDc3OjE1OmE1OmM5OmU4OjRhOjI2OjkyOjMyOmIzOjYzOmFlOjQwOmQ1OmQ2OgogICAgICAgICAgICAgICAgICAgIDhmOjllOmFjOmJiOjc2OjI4OmFmOjY0OjA5OjE5OmNlOjk4OjNmOmZkOjMzOgogICAgICAgICAgICAgICAgICAgIDU0OjM1OmMxOjAwOjIxOmVlOjQxOjBmOmRkOjY0OmFmOjBjOjIyOjc5OjIwOgogICAgICAgICAgICAgICAgICAgIDYxOjkwOjllOjkyOmY1OmFkOjQ0OjNlOjlmOmRkOjFkOjU5OjJlOjQyOjMyOgogICAgICAgICAgICAgICAgICAgIDQyOjQzCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBFMzpDNzpFRDpEMjo5Nzo2NjpCNzo2RToxMTozMDo5QTo2QzpDQjoxQjo3RDoxQzpBQTo2NTo4MTo5NgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjk6ZGU6Y2Y6Y2M6ZjY6YTQ6YjM6MTY6MDQ6NzA6OWE6NDM6ZTc6ZGQ6Mzg6MmQ6OTc6MzU6CiAgICAgICAgIDhhOjhkOjA5OjcxOjRkOjIyOjVkOmY5OjcxOjAxOmYwOjJiOjVhOmIzOjgzOmY5OjgzOmEzOgogICAgICAgICA1Yjo3ODoxNDo0MDo2NTpmNDo3Njo1MDphNjpmMjo0YzpjZjphZjo3YTo1NDpkMTo5Yjo3ODoKICAgICAgICAgNTk6YWI6ODI6YzM6MGI6YWE6ZGY6ODU6YTE6YzA6ZDc6Zjk6YjM6NjM6Mzk6OWI6ZmU6ZTQ6CiAgICAgICAgIDFhOjNiOmJhOjBlOjNmOjQ1OmQ5OmVkOmRhOmU1OjdjOjVlOmZiOjI0OjQwOjUzOmM4OjYwOgogICAgICAgICBkYzpkNjozMzphNTo5NDowZjo2MzowZDo4MzpmMjpiYzo3ZjoyYzphODphYTpjODowMToxOToKICAgICAgICAgY2I6ODE6Yjk6NGU6YmM6Mzg6MmI6NGM6Mzg6OWU6OGM6YTk6ZTQ6NDI6ODE6MGI6YTc6Y2Y6CiAgICAgICAgIDJmOmQ2OmRmOjk2OjU5OmYyOjk2OjI2OmNiOmRmOjcxOjNhOjFmOjkxOjM3OjA4OmY4Ojk5OgogICAgICAgICAyZTpkZjplYTo5NjpmNzpmODo0YjpjOTo2MTplZjo2NzphMDo5ZDoxZjozODo4MDowODozZToKICAgICAgICAgNjI6ODU6NGE6NTg6OWM6ZTE6ZTI6NDM6N2Y6NWY6Yzk6MDA6ZjM6MGE6OTM6MjU6N2M6MTc6CiAgICAgICAgIGI5OjI3Ojc0OmQ2OmMxOmM5OmRhOjJmOjI0OmNiOjQ0OmY3OjY1OmEzOmQxOmI0OjVmOmE3OgogICAgICAgICBjYjoyNTo3ZjpmNzo1Mjo0Yzo3Mjo2NjpmNzphMDozMTpmYzpiMTo2NzpkMTo5MzoxMDpmNjoKICAgICAgICAgOTg6MGE6NmQ6NjE6OTI6ZTg6NTc6MDc6MWE6N2I6NTY6YjI6ZDM6ZmI6YWU6MDI6YjI6MzI6CiAgICAgICAgIDJmOmYxOjAxOjY3OmI2OjFkOmVlOjkyOjI0OmMwOmE1OmZjOjYwOjBlOmI5OjQ5OjNjOjExOgogICAgICAgICAzNToxNzo5NTpmZgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBakFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV3hsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5JMWFFMHZjSC9uNUw5U3NHR3U4dStxV0lnRWFxK3lhZ2s2RDIyeWs3UDZDbGJaZktNTgpSSURoNXhHSUI2UTZ4SkMxb21LRXhjK202aThuRzFlcnJvUE9qRHEyZmc0R2pVa0RicTE2MUt1NmllU29MakR1CmZ4OTdIS205Y3Bpc1Y3ZEd0dHBheUtacCtGYVJkMGpQS3V4Z24xRkpvd1JtNDllR2ttVkgyWS9yNlFscUdDY1EKZXBvZjBCaVFtZXdERzhHT3F5VkFQLzY3V0dhUkVISG5RemhpazhCek45K0pkck45OW1FeG9NeFk2TXFyR0paTQo1L2RnMVB2TURNUnNENE1QZHhXbHllaEtKcEl5czJPdVFOWFdqNTZzdTNZb3IyUUpHYzZZUC8welZEWEJBQ0h1ClFRL2RaSzhNSW5rZ1laQ2Vrdld0UkQ2ZjNSMVpMa0l5UWtNQ0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJUangrM1NsMmEzYmhFd21tekxHMzBjcW1XQmxqQlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYWQ3UHpQYWtzeFlFY0pwRDU5MDRMWmMxaW8wSgpjVTBpWGZseEFmQXJXck9EK1lPalczZ1VRR1gwZGxDbThrelByM3BVMFp0NFdhdUN3d3VxMzRXaHdOZjVzMk01Cm0vN2tHanU2RGo5RjJlM2E1WHhlK3lSQVU4aGczTll6cFpRUFl3MkQ4cngvTEtpcXlBRVp5NEc1VHJ3NEswdzQKbm95cDVFS0JDNmZQTDliZmxsbnlsaWJMMzNFNkg1RTNDUGlaTHQvcWx2ZjRTOGxoNzJlZ25SODRnQWcrWW9WSwpXSnpoNGtOL1g4a0E4d3FUSlh3WHVTZDAxc0hKMmk4a3kwVDNaYVBSdEYrbnl5Vi85MUpNY21iM29ESDhzV2ZSCmt4RDJtQXB0WVpMb1Z3Y2FlMWF5MC91dUFySXlML0VCWjdZZDdwSWt3S1g4WUE2NVNUd1JOUmVWL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
++ cat /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubelet.key
++ tr -d '\r\n'
++ base64
+ KUBELET_KEY_BASE64=LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFNOV2hOTDNCLzUrUy8KVXJCaHJ2THZxbGlJQkdxdnNtb0pPZzl0c3BPeitncFcyWHlqRFVTQTRlY1JpQWVrT3NTUXRhSmloTVhQcHVvdgpKeHRYcTY2RHpvdzZ0bjRPQm8xSkEyNnRldFNydW9ua3FDNHc3bjhmZXh5cHZYS1lyRmUzUnJiYVdzaW1hZmhXCmtYZEl6eXJzWUo5UlNhTUVadVBYaHBKbFI5bVA2K2tKYWhnbkVIcWFIOUFZa0puc0F4dkJqcXNsUUQvK3UxaG0Ka1JCeDUwTTRZcFBBY3pmZmlYYXpmZlpoTWFETVdPaktxeGlXVE9mM1lOVDd6QXpFYkErREQzY1ZwY25vU2lhUwpNck5qcmtEVjFvK2VyTHQyS0s5a0NSbk9tRC85TTFRMXdRQWg3a0VQM1dTdkRDSjVJR0dRbnBMMXJVUStuOTBkCldTNUNNa0pEQWdNQkFBRUNnZ0VBWkpMaEFHeitLblJNNGEweWJzcEJ1YUdMRWlqcTBuMU9kbk90QmhNMjBCbUYKOE4vRjNrMXV4U3RRWHZieWtRVDlIeStJTGhMUWdmV2Vma2o3c0FxWVNMLytIK2xJam5WY0M5NzBpVlFIaE5LUApQek9vUmdrV0VYM1p6T3l6YzVDaHR6TENNZDdWdWFsaUJDazlKVHpaa0piNkl1NVViTHE5c0ZUV25sYXVKVWtnCkRYd0hjWUhTNTM4U05ncEhqZktqZ3JnenFVV1NMdy81aHB5SFlCaVhXdklnY1hRdkwxUkVuY0Y2RmFHYXMvS1oKa2JxdHVCOEMxOXUweklFLzg3ZHdBMEhSN21uSldhNGJtNTBwalVGU0xPdlN5cFhONkNTc0NidXBNYnR5TkloaApiSlE3UVZxVGFGejNURS9qRWtid0RNK3dxZmpuY1RPNjBIeG51WWJjNFFLQmdRRHB1UUMzMVR2TEJpekZWb2JYCmJmdDczOW1kSXlJOTBUaHl4dTlxZ0tUL3dxRGdMa0plRG5XV1dlTHBkUzFlTXNPRVAzQTRyTHloK25rQWNIbjIKWVlQWlBOa2NycjRaKzZaOXhvN29UTjlSb3RLdDcyWmNmSlZQT0dva3RXWVIxcFRHaDB6WU53b1FaRnlwZ0hPRQp2UlF5c3AvVmkwZmRCaThTSzZOSkNVcHQzUUtCZ1FEbVBxVTZ0L2ptUEQra1ZmaXF2NmNrcDZVaGx5LzVkQUFxClVERTV6eW83ZG5hSGpYTk5seTVMNkFvV0d4eGtJRkVQdXZrS3pSU2I0cm54QlFSMUhma0FBalI3WWtVZkdBdVEKYTB0eUxTZXpqSU1tTGd1ZDIxakJKSWxwazB2UkUvTnlQZGFOc25vMkVTbG9sTnBESUREZTdLQ3N6K29rcmpXVgp4c1hNT1VhK253S0JnUUNQbTBqQnE1ZE5xOEdlandmVEhwVERERXZkclZUQXZ1ajhQUmVtVE4wVStUVjRDWFJsCjdtUjV1VWtmUVF4Yk1MM0phR0Uvc1lORjAyeTl4RjVyOEliZTEvQmZHMDliRDdEQTMxdTNpR1ErK05pU1h1SjYKT1dKVWhzbFJQTlEyYWE2SVBXSU9CK043SnU5NGhxQjBFdWx5TFNiZ1F2QW84ai9CM21ZNTNpZUpVUUtCZ1FEUwpkVmJRK3BNLzJMaVB2YW5rWWZVbE16eGxITzVVUmExVkFDSk81a2VEUFFDUlhVR1ZIZWpLcDVwNHBHVnFQSVA4Ckxmc3czVTdHUXhPVjlQRWpJTGVYUTJ5M2o1Y0JHaGlQOVJOc2xVdmgra0Z6Sjhta2pIaHZhN2RUVXJtTnJuL3IKNEF4N1R6WVlyODA2OUQwaCtJM1RaMVpqUUZXVkc4eU5VTGxDdU9RcW53S0JnRS9wSkFCT3h4QWlJOUxHL0R6aAovWkt3bC9CeFJQYnJ3VXpaZFc1NDMrMUpPS1AvVzRXTWZwL2RHeXRzV2hHNWhyOXlzMDJPSmUyVWVvVzU1cmFBCkxXVkJrZXlITk9peFVvSU5YbytFUmpDcVppNXVFeHNSQ3J0SDIySW8vcU5WZ2tvd3Rhb1pPRVYydkR3UkdhdGoKVUM5ZFFqb3FJTkxqTDJRUmViTG42RndZCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
++ cat /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubecfg.crt
++ tr -d '\r\n'
++ base64
+ KUBECFG_CERT_BASE64=Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAzICgweDMpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlY2ZnCiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmYzOjUxOmE1OmI5OjJiOmI4OjEzOjc4OmYzOmI3OmRiOjNiOjc4OmFlOgogICAgICAgICAgICAgICAgICAgIDBiOjJkOmY0OmIyOmE3OjNlOjJmOmNiOjQ2OjEzOmE3OjRkOmUzOjQwOjgwOgogICAgICAgICAgICAgICAgICAgIDRkOmVlOmQ0OmIyOjRhOjlkOmRmOjFiOjE0OjcxOjYwOmY4OmYzOjhhOjk1OgogICAgICAgICAgICAgICAgICAgIGU4OjVkOmY0OjdmOjBiOmI4OjAwOmQzOmYzOmUwOjlmOmJjOjhmOjQ1OjgxOgogICAgICAgICAgICAgICAgICAgIDg4OmMwOjRmOjIzOjE5OmRlOjc0OjE1OjI2OjVmOjI1OmVhOjQ1OmQ0OjIwOgogICAgICAgICAgICAgICAgICAgIDIxOmE1OjhkOjU4OjVhOjY3OjJkOmFhOjYwOjFhOjJmOmExOmRlOjgwOmIwOgogICAgICAgICAgICAgICAgICAgIDMwOjU2OjQ0OmM1OjM5OmJmOmRhOjJlOmNlOmMzOjcxOmE4OjhkOmI0OjA0OgogICAgICAgICAgICAgICAgICAgIDlkOjA1OjVmOjYwOjMzOjAzOmY5OjlmOjYzOjNiOjA3OmQzOjc5OmUxOjViOgogICAgICAgICAgICAgICAgICAgIDYwOjg0OmJlOmZkOmExOjVjOjdiOjFiOjFlOmMxOmJhOmM3Ojk4OjIyOjVmOgogICAgICAgICAgICAgICAgICAgIDU4OjI4OmQ2OjIwOjViOjdiOmY1OjQxOjI1OjFiOjZmOjA3OjU4OmY1OmMzOgogICAgICAgICAgICAgICAgICAgIGYwOjM2Ojk2OmYyOjIxOmRmOmVkOjBmOmRmOjQ5OmY2OjBmOmYzOjQ3OjE5OgogICAgICAgICAgICAgICAgICAgIDhlOmEwOmY1OjliOmMyOmQ0OjJlOjY5OjJiOmUwOjA1OmI1OmQ0OmFmOmRmOgogICAgICAgICAgICAgICAgICAgIDM5OjhlOjI1OjkwOjdlOmFiOjI2OmQ1OjdlOmNkOmI3OjM5OjM2OjNlOmNiOgogICAgICAgICAgICAgICAgICAgIDI3OmNlOjQ2OmNkOjQwOjI2OjUyOjA2OjQzOjA2OjhlOjhjOjg4OjEzOmRlOgogICAgICAgICAgICAgICAgICAgIGYwOjAyOjA3OmE2OmUxOmI3OmJkOjJmOjIwOjE2OmZkOjU0OjczOjZjOjBlOgogICAgICAgICAgICAgICAgICAgIDk0OjU0OjNhOjUzOjgwOjVmOmZlOjMwOjkyOmE5OjUyOjJjOjQ2OjZjOmE0OgogICAgICAgICAgICAgICAgICAgIDc1OjM0OmEwOjJhOmY1OjdhOjVkOjU0Ojk5OjBlOjMyOmRjOmFmOmQwOjYyOgogICAgICAgICAgICAgICAgICAgIGExOjlmCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICA4RTo3Nzo3ODpFRjo0NDpGRDpBNzpCQjoyNjoxMzoxNTo0QTo5RjowNDpBMzpCRDo4NToxNDo4Qzo0QgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjA6ODA6YmY6ZjA6MDA6MjM6Yzg6NTc6YjM6ZmI6YmM6NmM6NDQ6ZGE6ZTI6Mzc6ZmI6YWM6CiAgICAgICAgIDQ2OmUyOmM5OmMyOmE3OmQ5OjdkOjJiOjdjOjdjOjAyOmUyOjYwOjk2OmY1OjgwOjUzOmI3OgogICAgICAgICA4Mzo4YTo3NToxNToxODowYTo4OTo3ZjpiODo0MzphNDpiOTo4YTo0ZDplNDoyYzo3NDoyYzoKICAgICAgICAgYTc6NzI6OGE6ZTU6NzQ6OTA6ZDY6Yjg6NzE6MGY6OTg6ZDM6MTA6NjE6ZDI6NjI6ZGM6OTE6CiAgICAgICAgIDQ0Ojg0OmIzOjEyOjJiOjEwOjlmOjIyOmM0OjYyOjY1OmYwOjljOjVhOmRmOmJiOjE3OmZmOgogICAgICAgICBhYjoyMTpkZjozYjozOTo3MDpiODo5ZTozZDpjYjoyOToxYzo3ZDoyOTpmYzo1Nzo5MTpkYjoKICAgICAgICAgN2U6Yjg6MGM6OWY6MTY6MGQ6YmY6ZWE6NDc6NzI6NGE6NGI6NWU6YzE6YzE6YmQ6ODA6NmM6CiAgICAgICAgIDAxOjg3OmQ1OjAzOjRkOjdkOjFjOjBkOjM5OjZmOjYzOmIwOmU2OjAzOjM2OmU1OjNiOjEyOgogICAgICAgICBhNjo2YToxZDpmZToyYTpiNDphODpjODoyNTo4Njo1ODo3MTo5ODpiZDo4ZTpjMDozNDpkMzoKICAgICAgICAgYWQ6MzM6MGI6YzE6ZGI6NmI6N2Y6ZGU6MTg6NTk6ODU6YTk6ZGI6MTg6Nzk6MDE6ODI6ZjY6CiAgICAgICAgIGY0OmQzOjcwOjZhOjk3OjExOjEwOmIxOjVmOmE3OjdjOjMzOjhmOjkyOmQ0OjM2OjViOjVjOgogICAgICAgICBiMjozZDo0NzoyMzo1ZTo5YTo0NTo0MjplNDo4NjowMDowZTpiOTo3NDo4NToxNzo0ZTpkOToKICAgICAgICAgMDE6OTk6YWY6OTQ6ZTM6MTA6Zjg6OGI6ZDc6YjM6NjY6YWU6MTI6NjI6YjA6NGI6ODc6ZWU6CiAgICAgICAgIDEyOmIxOmNiOmExOjYwOjY0OjQwOmE2OjExOjg1OmNjOjI0OjQzOjRhOjcxOmI0OjIyOmU0OgogICAgICAgICA5MjpmZjo0NDowNgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBekFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV05tWnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQVBOUnBia3J1Qk40ODdmYk8zaXVDeTMwc3FjK0w4dEdFNmRONDBDQVRlN1Vza3FkM3hzVQpjV0Q0ODRxVjZGMzBmd3U0QU5QejRKKzhqMFdCaU1CUEl4bmVkQlVtWHlYcVJkUWdJYVdOV0ZwbkxhcGdHaStoCjNvQ3dNRlpFeFRtLzJpN093M0dvamJRRW5RVmZZRE1EK1o5ak93ZlRlZUZiWUlTKy9hRmNleHNld2JySG1DSmYKV0NqV0lGdDc5VUVsRzI4SFdQWEQ4RGFXOGlIZjdRL2ZTZllQODBjWmpxRDFtOExVTG1rcjRBVzExSy9mT1k0bAprSDZySnRWK3piYzVOajdMSjg1R3pVQW1VZ1pEQm82TWlCUGU4QUlIcHVHM3ZTOGdGdjFVYzJ3T2xGUTZVNEJmCi9qQ1NxVklzUm15a2RUU2dLdlY2WFZTWkRqTGNyOUJpb1o4Q0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJTT2QzanZSUDJudXlZVEZVcWZCS085aFJTTVN6QlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWUlDLzhBQWp5RmV6Kzd4c1JOcmlOL3VzUnVMSgp3cWZaZlN0OGZBTGlZSmIxZ0ZPM2c0cDFGUmdLaVgrNFE2UzVpazNrTEhRc3AzS0s1WFNRMXJoeEQ1alRFR0hTCll0eVJSSVN6RWlzUW55TEVZbVh3bkZyZnV4Zi9xeUhmT3psd3VKNDl5eWtjZlNuOFY1SGJmcmdNbnhZTnYrcEgKY2twTFhzSEJ2WUJzQVlmVkEwMTlIQTA1YjJPdzVnTTI1VHNTcG1vZC9pcTBxTWdsaGxoeG1MMk93RFRUclRNTAp3ZHRyZjk0WVdZV3AyeGg1QVlMMjlOTndhcGNSRUxGZnAzd3pqNUxVTmx0Y3NqMUhJMTZhUlVMa2hnQU91WFNGCkYwN1pBWm12bE9NUStJdlhzMmF1RW1Ld1M0ZnVFckhMb1dCa1FLWVJoY3drUTBweHRDTGtrdjlFQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
++ cat /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubecfg.key
++ tr -d '\r\n'
++ base64
+ KUBECFG_KEY_BASE64=LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHpVYVc1SzdnVGVQTzMKMnp0NHJnc3Q5TEtuUGkvTFJoT25UZU5BZ0UzdTFMSktuZDhiRkhGZytQT0tsZWhkOUg4THVBRFQ4K0Nmdkk5RgpnWWpBVHlNWjNuUVZKbDhsNmtYVUlDR2xqVmhhWnkycVlCb3ZvZDZBc0RCV1JNVTV2OW91enNOeHFJMjBCSjBGClgyQXpBL21mWXpzSDAzbmhXMkNFdnYyaFhIc2JIc0c2eDVnaVgxZ28xaUJiZS9WQkpSdHZCMWoxdy9BMmx2SWgKMyswUDMwbjJEL05IR1k2ZzladkMxQzVwSytBRnRkU3Yzem1PSlpCK3F5YlZmczIzT1RZK3l5Zk9SczFBSmxJRwpRd2FPaklnVDN2QUNCNmJodDcwdklCYjlWSE5zRHBSVU9sT0FYLzR3a3FsU0xFWnNwSFUwb0NyMWVsMVVtUTR5CjNLL1FZcUdmQWdNQkFBRUNnZ0VCQU5pQWk5OXFBVTZDVHdvSGJyR0EyNzIyZjhqRVVxNmkyaFlCL2ZXRXROT1EKT2x5ZWdNaU50aHk5SjZibW9HNEpnWW9oM2NxNnMrSXVXNlZURHlWZXhUTGRkNWppSGNPVTR6Rk9yZUdyRlRUTApuaHg5aW85Ympxb2ZHOE9IU1o2TEVVNlk5OXNJU1o0bWhMa2xGbW9PWFd6dlZMVXYvTUVERjZ6R2JOUEpnRml0Cmx5VmcwYTV4dTdCWGFUOVdSR3lXVkxQYytUY3pOTlZwWHdIaE5rMFRCZGNLVkUxc1EwQlBjS01LN3g4NTd3ZmMKZHYyN2hyK0E1N29mWFZ5emdiakZlS1pVbWNsZTlXY3NKQVFxSVNoL2psQnZHL1NjTTVDczYyaFBKc2ExSWJzdgpETWoxMXNJWGRBMHFzTURKUU9qK2thdnQ0MlkxVGhVQld3aTZQcjNRR1NFQ2dZRUEva2djSkZzZjYyWjcrdUlICjRiZ3Q5WElSdjFLVXZEbkFMc3RmS3JQWlNSaUsxWWMrd0JSMjJDR2NxUG8wL2hxay9QOXYzTituZkVzYU1EV0wKZ3RsUURGekltRng5ZlVJL1c4cVFWVkZ3QXo5QndyRWJwYVhNQStyWVVZR1pEZkRNaUd3N1VlRUYzNXFEaGhIZApqQmpuMmtMMEtYbnVaSE5LamdnZU0xZzE5ZmtDZ1lFQTlQYVNsMTM2UE1qZThrME9DUnYrTFBEcUlPL3lVREg3CjBtR2sxZTNQZDJuT2tyRXB4OHRmOStkeERtSk94UXFoM2lJRk1RZ004VW1VODZnbjZOR2F6ZDVubWNVYkZpT3oKeTVaT3VjTHFrTW43M2tEQjB4NE1obzU0SjAxeHFOdTBGUHdaaGZrcGllL3BNdzYrZlk4cjAvb2hCMzhidm9rSQowbTFLa01URzJsY0NnWUVBc2tqZzRtUzV4cFMrakxMNkQ3clJEbXlDSVFESHBBbGh3KzEzdGpzUE4vN3JLTGVBCnViQWZlMzVsbHR5SFZ6cGJQNy9oTUozbmtuQWQxbnRVYTlQdUdoemIwR2ZZM0lBY2FFRm9YVW1TSGRTMlNNbGcKdHcyK00yanZib1pOUjhiendSc1JwR0QvZXoyY3hkMjAxa3VJRkRJcGV3TXdzR0ZkZnFRV2VLMTZlQkVDZ1lBWAoxZnBUb2tCY004dUYxanVjWlUzcFA1UDRtb0NBanl5S3Z4ZVQvV3pubUxNU0VRMFl0TkJreGU5NVQ5V01WTW1GClhOZ1dla3NRRzNIVDk3UFNjcnJXZDJLclVzT2M5dUppMkFCWEVRRlVEMk5qci9kc1BJdEplSWwyZ1pHaXRhWWoKT0ppZk1heDZFSThuZWJMTmN1WDMzV25qV2Rud1ExTkpibnNIOVMzSVJ3S0JnQXgxVktNc1Q0VkdqVzN6bkI2SAo0V3N5dXNCelU3RUdPT0xkZmlwMlRoWlN1Q1VONWlSYVExd1BsRVpnK0JIZEViNmNVTnZsaUFkZU56OXZSdDJyCi8yMnhlS0QwZW5vbXRoQzN2c3BUVFRsKzZlSHlWZFBuYitvUFdJMHc1SW4wS3B3Ykw2clorVkhCRjZ0NHMxSnYKc3diRXlqKzYwUldUVzBYSVNOeE9PKzZGCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
+ KUBECFG_CERT_BASE64=
+ KUBECFG_KEY_BASE64=
+ write-master-env
+ [[ '' == \t\r\u\e ]]
+ build-kube-env true /tmp/kubernetes.fZ0hhp/master-kube-env.yaml
+ local master=true
+ local file=/tmp/kubernetes.fZ0hhp/master-kube-env.yaml
+ build-runtime-config
+ :
+ rm -f /tmp/kubernetes.fZ0hhp/master-kube-env.yaml
+ cat
+++ date -u +%Y-%m-%dT%T%z
++ yaml-quote 2016-05-06T18:14:46+0000
+++ echo 2016-05-06T18:14:46+0000
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''2016-05-06T18:14:46+0000'\'''
++ yaml-quote kubernetes
+++ echo kubernetes
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''kubernetes'\'''
++ yaml-quote kubernetes-minion
+++ echo kubernetes-minion
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''kubernetes-minion'\'''
++ yaml-quote 10.244.0.0/16
+++ echo 10.244.0.0/16
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.244.0.0/16'\'''
++ yaml-quote https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz
+++ echo https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz'\'''
++ yaml-quote 86c63983a1a1da3f1ec76e1914964e8a42fba244
+++ echo 86c63983a1a1da3f1ec76e1914964e8a42fba244
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''86c63983a1a1da3f1ec76e1914964e8a42fba244'\'''
++ yaml-quote https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz
+++ echo https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz'\'''
++ yaml-quote 246074805c38dad8774a027a97201cf2bb33b1d4
+++ echo 246074805c38dad8774a027a97201cf2bb33b1d4
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''246074805c38dad8774a027a97201cf2bb33b1d4'\'''
++ yaml-quote 10.0.0.0/16
+++ echo 10.0.0.0/16
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.0.0.0/16'\'''
++ yaml-quote kubernetes-master
+++ echo kubernetes-master
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''kubernetes-master'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote influxdb
+++ echo influxdb
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''influxdb'\'''
++ yaml-quote none
+++ echo none
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''none'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote elasticsearch
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo elasticsearch
++ echo ''\''elasticsearch'\'''
++ yaml-quote 1
+++ echo 1
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''1'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote false
+++ echo false
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''false'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote 1
+++ echo 1
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''1'\'''
++ yaml-quote 10.0.0.10
+++ echo 10.0.0.10
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.0.0.10'\'''
++ yaml-quote cluster.local
+++ echo cluster.local
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''cluster.local'\'''
++ yaml-quote lvAIUZkjSBoanj8FNhz2MBIfDsRjjoGJ
+++ echo lvAIUZkjSBoanj8FNhz2MBIfDsRjjoGJ
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''lvAIUZkjSBoanj8FNhz2MBIfDsRjjoGJ'\'''
++ yaml-quote MJmB5b3RngOUFJjfdhkYnZhC2MDD8Oqs
+++ echo MJmB5b3RngOUFJjfdhkYnZhC2MDD8Oqs
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''MJmB5b3RngOUFJjfdhkYnZhC2MDD8Oqs'\'''
++ yaml-quote NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel
+++ echo NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel'\'''
++ yaml-quote 10.246.0.0/24
+++ echo 10.246.0.0/24
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.246.0.0/24'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lKQUxEL0tLYUs2dzMvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ1F4SWpBZ0JnTlYKQkFNVUdUVXlMakl3TWk0eU1qWXVNVGN6UURFME5qSTFOVGcwT0RZd0hoY05NVFl3TlRBMk1UZ3hORFEyV2hjTgpNall3TlRBME1UZ3hORFEyV2pBa01TSXdJQVlEVlFRREZCazFNaTR5TURJdU1qSTJMakUzTTBBeE5EWXlOVFU0Ck5EZzJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBGNHRzNjA1YW13bkJFOEsKVG9TUHdiTUZSUldQdUtoc21WTDIveUp3UUxRM3dQNWNXN1dzc3pOcFhES2NXYUprT2d4OG9LN0VRY28zaVBlQQpNZ1NNRkNMMHJaa3VZcW9aRWkvT3FvUmRrM05tNGxSbGNXN0NpTWorZjQ5Qk9Wd2NDcHBjb1VYbkUyTGgydlpnCktLMERDaGtUOUVjKzVtMndKNDB2dmNWUW44UmZwUStVY05Db2pGanVhRHpSUnQyWjhtMVM1aHJGTGpNV2E3ck0KWC8yV3hYekozSXN4bFBMRTB5QnhjOFFHR1Bqb3NLZUZRVW1MbTlYQ2JNbEpCQXNldkJVV3RZNUtJRFZpNHRVQQpMUFdlRGlZYjRtRGFITmhWb0xodVRDSndMWlUvZGJ5NjlCajNYdkhYNjk2WlRDeUV6a2RWSjFwZ0RjdXlaRXhICnpkUkxIUUlEQVFBQm80R1RNSUdRTUIwR0ExVWREZ1FXQkJUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGV6QlUKQmdOVkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWgpOVEl1TWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQXdHQTFVZEV3UUZNQU1CCkFmOHdDd1lEVlIwUEJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHVNbW9wRkV6MFpXTkJpc1YKS3VZNXZNUEhUNVh4U29pbXJJQk9tSjNGMk1odmF2WHNURVJYY1NKbUhxeUVXejdvellkZ2NyRWM2K0dBVUx3dwpaV1BrOTdZUkxHTUxGbjJMZTdBbFFyV1RxQVFsRkhDQWxKK0o0MnJ5SFIwdkE0dU1mYlczQ1ZuVmlodGJnekVRCnhUTm1GMUdTMXl4bFcxcjdJT1NTbEdKTlNEVUtzMDdaTVFvbjFIUC9oOEpZUE9TZVpVb2JaZGhZQ3FTYS85MXcKS2YrU3RheG9wSWM3T2lJR0YzU0UxUWY2dG5RVTVZdUVjdWxyMW5vQkF4L2JaRW4yckUrNWtrYWtjRUlSUUNCNgpQRnJLNWRCS1dkR0QyQkNLZTMzQ1V3KzJzWXNWakpDSjVSbTJjYWpEQmdTK1RVU2dvN3lyR3gxN2Zhb0RORTRUCkUyc0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
+++ echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lKQUxEL0tLYUs2dzMvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ1F4SWpBZ0JnTlYKQkFNVUdUVXlMakl3TWk0eU1qWXVNVGN6UURFME5qSTFOVGcwT0RZd0hoY05NVFl3TlRBMk1UZ3hORFEyV2hjTgpNall3TlRBME1UZ3hORFEyV2pBa01TSXdJQVlEVlFRREZCazFNaTR5TURJdU1qSTJMakUzTTBBeE5EWXlOVFU0Ck5EZzJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBGNHRzNjA1YW13bkJFOEsKVG9TUHdiTUZSUldQdUtoc21WTDIveUp3UUxRM3dQNWNXN1dzc3pOcFhES2NXYUprT2d4OG9LN0VRY28zaVBlQQpNZ1NNRkNMMHJaa3VZcW9aRWkvT3FvUmRrM05tNGxSbGNXN0NpTWorZjQ5Qk9Wd2NDcHBjb1VYbkUyTGgydlpnCktLMERDaGtUOUVjKzVtMndKNDB2dmNWUW44UmZwUStVY05Db2pGanVhRHpSUnQyWjhtMVM1aHJGTGpNV2E3ck0KWC8yV3hYekozSXN4bFBMRTB5QnhjOFFHR1Bqb3NLZUZRVW1MbTlYQ2JNbEpCQXNldkJVV3RZNUtJRFZpNHRVQQpMUFdlRGlZYjRtRGFITmhWb0xodVRDSndMWlUvZGJ5NjlCajNYdkhYNjk2WlRDeUV6a2RWSjFwZ0RjdXlaRXhICnpkUkxIUUlEQVFBQm80R1RNSUdRTUIwR0ExVWREZ1FXQkJUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGV6QlUKQmdOVkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWgpOVEl1TWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQXdHQTFVZEV3UUZNQU1CCkFmOHdDd1lEVlIwUEJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHVNbW9wRkV6MFpXTkJpc1YKS3VZNXZNUEhUNVh4U29pbXJJQk9tSjNGMk1odmF2WHNURVJYY1NKbUhxeUVXejdvellkZ2NyRWM2K0dBVUx3dwpaV1BrOTdZUkxHTUxGbjJMZTdBbFFyV1RxQVFsRkhDQWxKK0o0MnJ5SFIwdkE0dU1mYlczQ1ZuVmlodGJnekVRCnhUTm1GMUdTMXl4bFcxcjdJT1NTbEdKTlNEVUtzMDdaTVFvbjFIUC9oOEpZUE9TZVpVb2JaZGhZQ3FTYS85MXcKS2YrU3RheG9wSWM3T2lJR0YzU0UxUWY2dG5RVTVZdUVjdWxyMW5vQkF4L2JaRW4yckUrNWtrYWtjRUlSUUNCNgpQRnJLNWRCS1dkR0QyQkNLZTMzQ1V3KzJzWXNWakpDSjVSbTJjYWpEQmdTK1RVU2dvN3lyR3gxN2Zhb0RORTRUCkUyc0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lKQUxEL0tLYUs2dzMvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ1F4SWpBZ0JnTlYKQkFNVUdUVXlMakl3TWk0eU1qWXVNVGN6UURFME5qSTFOVGcwT0RZd0hoY05NVFl3TlRBMk1UZ3hORFEyV2hjTgpNall3TlRBME1UZ3hORFEyV2pBa01TSXdJQVlEVlFRREZCazFNaTR5TURJdU1qSTJMakUzTTBBeE5EWXlOVFU0Ck5EZzJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBGNHRzNjA1YW13bkJFOEsKVG9TUHdiTUZSUldQdUtoc21WTDIveUp3UUxRM3dQNWNXN1dzc3pOcFhES2NXYUprT2d4OG9LN0VRY28zaVBlQQpNZ1NNRkNMMHJaa3VZcW9aRWkvT3FvUmRrM05tNGxSbGNXN0NpTWorZjQ5Qk9Wd2NDcHBjb1VYbkUyTGgydlpnCktLMERDaGtUOUVjKzVtMndKNDB2dmNWUW44UmZwUStVY05Db2pGanVhRHpSUnQyWjhtMVM1aHJGTGpNV2E3ck0KWC8yV3hYekozSXN4bFBMRTB5QnhjOFFHR1Bqb3NLZUZRVW1MbTlYQ2JNbEpCQXNldkJVV3RZNUtJRFZpNHRVQQpMUFdlRGlZYjRtRGFITmhWb0xodVRDSndMWlUvZGJ5NjlCajNYdkhYNjk2WlRDeUV6a2RWSjFwZ0RjdXlaRXhICnpkUkxIUUlEQVFBQm80R1RNSUdRTUIwR0ExVWREZ1FXQkJUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGV6QlUKQmdOVkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWgpOVEl1TWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQXdHQTFVZEV3UUZNQU1CCkFmOHdDd1lEVlIwUEJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHVNbW9wRkV6MFpXTkJpc1YKS3VZNXZNUEhUNVh4U29pbXJJQk9tSjNGMk1odmF2WHNURVJYY1NKbUhxeUVXejdvellkZ2NyRWM2K0dBVUx3dwpaV1BrOTdZUkxHTUxGbjJMZTdBbFFyV1RxQVFsRkhDQWxKK0o0MnJ5SFIwdkE0dU1mYlczQ1ZuVmlodGJnekVRCnhUTm1GMUdTMXl4bFcxcjdJT1NTbEdKTlNEVUtzMDdaTVFvbjFIUC9oOEpZUE9TZVpVb2JaZGhZQ3FTYS85MXcKS2YrU3RheG9wSWM3T2lJR0YzU0UxUWY2dG5RVTVZdUVjdWxyMW5vQkF4L2JaRW4yckUrNWtrYWtjRUlSUUNCNgpQRnJLNWRCS1dkR0QyQkNLZTMzQ1V3KzJzWXNWakpDSjVSbTJjYWpEQmdTK1RVU2dvN3lyR3gxN2Zhb0RORTRUCkUyc0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\'''
++ yaml-quote Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAyICgweDIpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlbGV0CiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmQyOjM1OjY4OjRkOjJmOjcwOjdmOmU3OmU0OmJmOjUyOmIwOjYxOmFlOgogICAgICAgICAgICAgICAgICAgIGYyOmVmOmFhOjU4Ojg4OjA0OjZhOmFmOmIyOjZhOjA5OjNhOjBmOjZkOmIyOgogICAgICAgICAgICAgICAgICAgIDkzOmIzOmZhOjBhOjU2OmQ5OjdjOmEzOjBkOjQ0OjgwOmUxOmU3OjExOjg4OgogICAgICAgICAgICAgICAgICAgIDA3OmE0OjNhOmM0OjkwOmI1OmEyOjYyOjg0OmM1OmNmOmE2OmVhOjJmOjI3OgogICAgICAgICAgICAgICAgICAgIDFiOjU3OmFiOmFlOjgzOmNlOjhjOjNhOmI2OjdlOjBlOjA2OjhkOjQ5OjAzOgogICAgICAgICAgICAgICAgICAgIDZlOmFkOjdhOmQ0OmFiOmJhOjg5OmU0OmE4OjJlOjMwOmVlOjdmOjFmOjdiOgogICAgICAgICAgICAgICAgICAgIDFjOmE5OmJkOjcyOjk4OmFjOjU3OmI3OjQ2OmI2OmRhOjVhOmM4OmE2OjY5OgogICAgICAgICAgICAgICAgICAgIGY4OjU2OjkxOjc3OjQ4OmNmOjJhOmVjOjYwOjlmOjUxOjQ5OmEzOjA0OjY2OgogICAgICAgICAgICAgICAgICAgIGUzOmQ3Ojg2OjkyOjY1OjQ3OmQ5OjhmOmViOmU5OjA5OjZhOjE4OjI3OjEwOgogICAgICAgICAgICAgICAgICAgIDdhOjlhOjFmOmQwOjE4OjkwOjk5OmVjOjAzOjFiOmMxOjhlOmFiOjI1OjQwOgogICAgICAgICAgICAgICAgICAgIDNmOmZlOmJiOjU4OjY2OjkxOjEwOjcxOmU3OjQzOjM4OjYyOjkzOmMwOjczOgogICAgICAgICAgICAgICAgICAgIDM3OmRmOjg5Ojc2OmIzOjdkOmY2OjYxOjMxOmEwOmNjOjU4OmU4OmNhOmFiOgogICAgICAgICAgICAgICAgICAgIDE4Ojk2OjRjOmU3OmY3OjYwOmQ0OmZiOmNjOjBjOmM0OjZjOjBmOjgzOjBmOgogICAgICAgICAgICAgICAgICAgIDc3OjE1OmE1OmM5OmU4OjRhOjI2OjkyOjMyOmIzOjYzOmFlOjQwOmQ1OmQ2OgogICAgICAgICAgICAgICAgICAgIDhmOjllOmFjOmJiOjc2OjI4OmFmOjY0OjA5OjE5OmNlOjk4OjNmOmZkOjMzOgogICAgICAgICAgICAgICAgICAgIDU0OjM1OmMxOjAwOjIxOmVlOjQxOjBmOmRkOjY0OmFmOjBjOjIyOjc5OjIwOgogICAgICAgICAgICAgICAgICAgIDYxOjkwOjllOjkyOmY1OmFkOjQ0OjNlOjlmOmRkOjFkOjU5OjJlOjQyOjMyOgogICAgICAgICAgICAgICAgICAgIDQyOjQzCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBFMzpDNzpFRDpEMjo5Nzo2NjpCNzo2RToxMTozMDo5QTo2QzpDQjoxQjo3RDoxQzpBQTo2NTo4MTo5NgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjk6ZGU6Y2Y6Y2M6ZjY6YTQ6YjM6MTY6MDQ6NzA6OWE6NDM6ZTc6ZGQ6Mzg6MmQ6OTc6MzU6CiAgICAgICAgIDhhOjhkOjA5OjcxOjRkOjIyOjVkOmY5OjcxOjAxOmYwOjJiOjVhOmIzOjgzOmY5OjgzOmEzOgogICAgICAgICA1Yjo3ODoxNDo0MDo2NTpmNDo3Njo1MDphNjpmMjo0YzpjZjphZjo3YTo1NDpkMTo5Yjo3ODoKICAgICAgICAgNTk6YWI6ODI6YzM6MGI6YWE6ZGY6ODU6YTE6YzA6ZDc6Zjk6YjM6NjM6Mzk6OWI6ZmU6ZTQ6CiAgICAgICAgIDFhOjNiOmJhOjBlOjNmOjQ1OmQ5OmVkOmRhOmU1OjdjOjVlOmZiOjI0OjQwOjUzOmM4OjYwOgogICAgICAgICBkYzpkNjozMzphNTo5NDowZjo2MzowZDo4MzpmMjpiYzo3ZjoyYzphODphYTpjODowMToxOToKICAgICAgICAgY2I6ODE6Yjk6NGU6YmM6Mzg6MmI6NGM6Mzg6OWU6OGM6YTk6ZTQ6NDI6ODE6MGI6YTc6Y2Y6CiAgICAgICAgIDJmOmQ2OmRmOjk2OjU5OmYyOjk2OjI2OmNiOmRmOjcxOjNhOjFmOjkxOjM3OjA4OmY4Ojk5OgogICAgICAgICAyZTpkZjplYTo5NjpmNzpmODo0YjpjOTo2MTplZjo2NzphMDo5ZDoxZjozODo4MDowODozZToKICAgICAgICAgNjI6ODU6NGE6NTg6OWM6ZTE6ZTI6NDM6N2Y6NWY6Yzk6MDA6ZjM6MGE6OTM6MjU6N2M6MTc6CiAgICAgICAgIGI5OjI3Ojc0OmQ2OmMxOmM5OmRhOjJmOjI0OmNiOjQ0OmY3OjY1OmEzOmQxOmI0OjVmOmE3OgogICAgICAgICBjYjoyNTo3ZjpmNzo1Mjo0Yzo3Mjo2NjpmNzphMDozMTpmYzpiMTo2NzpkMTo5MzoxMDpmNjoKICAgICAgICAgOTg6MGE6NmQ6NjE6OTI6ZTg6NTc6MDc6MWE6N2I6NTY6YjI6ZDM6ZmI6YWU6MDI6YjI6MzI6CiAgICAgICAgIDJmOmYxOjAxOjY3OmI2OjFkOmVlOjkyOjI0OmMwOmE1OmZjOjYwOjBlOmI5OjQ5OjNjOjExOgogICAgICAgICAzNToxNzo5NTpmZgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBakFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV3hsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5JMWFFMHZjSC9uNUw5U3NHR3U4dStxV0lnRWFxK3lhZ2s2RDIyeWs3UDZDbGJaZktNTgpSSURoNXhHSUI2UTZ4SkMxb21LRXhjK202aThuRzFlcnJvUE9qRHEyZmc0R2pVa0RicTE2MUt1NmllU29MakR1CmZ4OTdIS205Y3Bpc1Y3ZEd0dHBheUtacCtGYVJkMGpQS3V4Z24xRkpvd1JtNDllR2ttVkgyWS9yNlFscUdDY1EKZXBvZjBCaVFtZXdERzhHT3F5VkFQLzY3V0dhUkVISG5RemhpazhCek45K0pkck45OW1FeG9NeFk2TXFyR0paTQo1L2RnMVB2TURNUnNENE1QZHhXbHllaEtKcEl5czJPdVFOWFdqNTZzdTNZb3IyUUpHYzZZUC8welZEWEJBQ0h1ClFRL2RaSzhNSW5rZ1laQ2Vrdld0UkQ2ZjNSMVpMa0l5UWtNQ0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJUangrM1NsMmEzYmhFd21tekxHMzBjcW1XQmxqQlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYWQ3UHpQYWtzeFlFY0pwRDU5MDRMWmMxaW8wSgpjVTBpWGZseEFmQXJXck9EK1lPalczZ1VRR1gwZGxDbThrelByM3BVMFp0NFdhdUN3d3VxMzRXaHdOZjVzMk01Cm0vN2tHanU2RGo5RjJlM2E1WHhlK3lSQVU4aGczTll6cFpRUFl3MkQ4cngvTEtpcXlBRVp5NEc1VHJ3NEswdzQKbm95cDVFS0JDNmZQTDliZmxsbnlsaWJMMzNFNkg1RTNDUGlaTHQvcWx2ZjRTOGxoNzJlZ25SODRnQWcrWW9WSwpXSnpoNGtOL1g4a0E4d3FUSlh3WHVTZDAxc0hKMmk4a3kwVDNaYVBSdEYrbnl5Vi85MUpNY21iM29ESDhzV2ZSCmt4RDJtQXB0WVpMb1Z3Y2FlMWF5MC91dUFySXlML0VCWjdZZDdwSWt3S1g4WUE2NVNUd1JOUmVWL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAyICgweDIpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlbGV0CiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmQyOjM1OjY4OjRkOjJmOjcwOjdmOmU3OmU0OmJmOjUyOmIwOjYxOmFlOgogICAgICAgICAgICAgICAgICAgIGYyOmVmOmFhOjU4Ojg4OjA0OjZhOmFmOmIyOjZhOjA5OjNhOjBmOjZkOmIyOgogICAgICAgICAgICAgICAgICAgIDkzOmIzOmZhOjBhOjU2OmQ5OjdjOmEzOjBkOjQ0OjgwOmUxOmU3OjExOjg4OgogICAgICAgICAgICAgICAgICAgIDA3OmE0OjNhOmM0OjkwOmI1OmEyOjYyOjg0OmM1OmNmOmE2OmVhOjJmOjI3OgogICAgICAgICAgICAgICAgICAgIDFiOjU3OmFiOmFlOjgzOmNlOjhjOjNhOmI2OjdlOjBlOjA2OjhkOjQ5OjAzOgogICAgICAgICAgICAgICAgICAgIDZlOmFkOjdhOmQ0OmFiOmJhOjg5OmU0OmE4OjJlOjMwOmVlOjdmOjFmOjdiOgogICAgICAgICAgICAgICAgICAgIDFjOmE5OmJkOjcyOjk4OmFjOjU3OmI3OjQ2OmI2OmRhOjVhOmM4OmE2OjY5OgogICAgICAgICAgICAgICAgICAgIGY4OjU2OjkxOjc3OjQ4OmNmOjJhOmVjOjYwOjlmOjUxOjQ5OmEzOjA0OjY2OgogICAgICAgICAgICAgICAgICAgIGUzOmQ3Ojg2OjkyOjY1OjQ3OmQ5OjhmOmViOmU5OjA5OjZhOjE4OjI3OjEwOgogICAgICAgICAgICAgICAgICAgIDdhOjlhOjFmOmQwOjE4OjkwOjk5OmVjOjAzOjFiOmMxOjhlOmFiOjI1OjQwOgogICAgICAgICAgICAgICAgICAgIDNmOmZlOmJiOjU4OjY2OjkxOjEwOjcxOmU3OjQzOjM4OjYyOjkzOmMwOjczOgogICAgICAgICAgICAgICAgICAgIDM3OmRmOjg5Ojc2OmIzOjdkOmY2OjYxOjMxOmEwOmNjOjU4OmU4OmNhOmFiOgogICAgICAgICAgICAgICAgICAgIDE4Ojk2OjRjOmU3OmY3OjYwOmQ0OmZiOmNjOjBjOmM0OjZjOjBmOjgzOjBmOgogICAgICAgICAgICAgICAgICAgIDc3OjE1OmE1OmM5OmU4OjRhOjI2OjkyOjMyOmIzOjYzOmFlOjQwOmQ1OmQ2OgogICAgICAgICAgICAgICAgICAgIDhmOjllOmFjOmJiOjc2OjI4OmFmOjY0OjA5OjE5OmNlOjk4OjNmOmZkOjMzOgogICAgICAgICAgICAgICAgICAgIDU0OjM1OmMxOjAwOjIxOmVlOjQxOjBmOmRkOjY0OmFmOjBjOjIyOjc5OjIwOgogICAgICAgICAgICAgICAgICAgIDYxOjkwOjllOjkyOmY1OmFkOjQ0OjNlOjlmOmRkOjFkOjU5OjJlOjQyOjMyOgogICAgICAgICAgICAgICAgICAgIDQyOjQzCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBFMzpDNzpFRDpEMjo5Nzo2NjpCNzo2RToxMTozMDo5QTo2QzpDQjoxQjo3RDoxQzpBQTo2NTo4MTo5NgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjk6ZGU6Y2Y6Y2M6ZjY6YTQ6YjM6MTY6MDQ6NzA6OWE6NDM6ZTc6ZGQ6Mzg6MmQ6OTc6MzU6CiAgICAgICAgIDhhOjhkOjA5OjcxOjRkOjIyOjVkOmY5OjcxOjAxOmYwOjJiOjVhOmIzOjgzOmY5OjgzOmEzOgogICAgICAgICA1Yjo3ODoxNDo0MDo2NTpmNDo3Njo1MDphNjpmMjo0YzpjZjphZjo3YTo1NDpkMTo5Yjo3ODoKICAgICAgICAgNTk6YWI6ODI6YzM6MGI6YWE6ZGY6ODU6YTE6YzA6ZDc6Zjk6YjM6NjM6Mzk6OWI6ZmU6ZTQ6CiAgICAgICAgIDFhOjNiOmJhOjBlOjNmOjQ1OmQ5OmVkOmRhOmU1OjdjOjVlOmZiOjI0OjQwOjUzOmM4OjYwOgogICAgICAgICBkYzpkNjozMzphNTo5NDowZjo2MzowZDo4MzpmMjpiYzo3ZjoyYzphODphYTpjODowMToxOToKICAgICAgICAgY2I6ODE6Yjk6NGU6YmM6Mzg6MmI6NGM6Mzg6OWU6OGM6YTk6ZTQ6NDI6ODE6MGI6YTc6Y2Y6CiAgICAgICAgIDJmOmQ2OmRmOjk2OjU5OmYyOjk2OjI2OmNiOmRmOjcxOjNhOjFmOjkxOjM3OjA4OmY4Ojk5OgogICAgICAgICAyZTpkZjplYTo5NjpmNzpmODo0YjpjOTo2MTplZjo2NzphMDo5ZDoxZjozODo4MDowODozZToKICAgICAgICAgNjI6ODU6NGE6NTg6OWM6ZTE6ZTI6NDM6N2Y6NWY6Yzk6MDA6ZjM6MGE6OTM6MjU6N2M6MTc6CiAgICAgICAgIGI5OjI3Ojc0OmQ2OmMxOmM5OmRhOjJmOjI0OmNiOjQ0OmY3OjY1OmEzOmQxOmI0OjVmOmE3OgogICAgICAgICBjYjoyNTo3ZjpmNzo1Mjo0Yzo3Mjo2NjpmNzphMDozMTpmYzpiMTo2NzpkMTo5MzoxMDpmNjoKICAgICAgICAgOTg6MGE6NmQ6NjE6OTI6ZTg6NTc6MDc6MWE6N2I6NTY6YjI6ZDM6ZmI6YWU6MDI6YjI6MzI6CiAgICAgICAgIDJmOmYxOjAxOjY3OmI2OjFkOmVlOjkyOjI0OmMwOmE1OmZjOjYwOjBlOmI5OjQ5OjNjOjExOgogICAgICAgICAzNToxNzo5NTpmZgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBakFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV3hsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5JMWFFMHZjSC9uNUw5U3NHR3U4dStxV0lnRWFxK3lhZ2s2RDIyeWs3UDZDbGJaZktNTgpSSURoNXhHSUI2UTZ4SkMxb21LRXhjK202aThuRzFlcnJvUE9qRHEyZmc0R2pVa0RicTE2MUt1NmllU29MakR1CmZ4OTdIS205Y3Bpc1Y3ZEd0dHBheUtacCtGYVJkMGpQS3V4Z24xRkpvd1JtNDllR2ttVkgyWS9yNlFscUdDY1EKZXBvZjBCaVFtZXdERzhHT3F5VkFQLzY3V0dhUkVISG5RemhpazhCek45K0pkck45OW1FeG9NeFk2TXFyR0paTQo1L2RnMVB2TURNUnNENE1QZHhXbHllaEtKcEl5czJPdVFOWFdqNTZzdTNZb3IyUUpHYzZZUC8welZEWEJBQ0h1ClFRL2RaSzhNSW5rZ1laQ2Vrdld0UkQ2ZjNSMVpMa0l5UWtNQ0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJUangrM1NsMmEzYmhFd21tekxHMzBjcW1XQmxqQlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYWQ3UHpQYWtzeFlFY0pwRDU5MDRMWmMxaW8wSgpjVTBpWGZseEFmQXJXck9EK1lPalczZ1VRR1gwZGxDbThrelByM3BVMFp0NFdhdUN3d3VxMzRXaHdOZjVzMk01Cm0vN2tHanU2RGo5RjJlM2E1WHhlK3lSQVU4aGczTll6cFpRUFl3MkQ4cngvTEtpcXlBRVp5NEc1VHJ3NEswdzQKbm95cDVFS0JDNmZQTDliZmxsbnlsaWJMMzNFNkg1RTNDUGlaTHQvcWx2ZjRTOGxoNzJlZ25SODRnQWcrWW9WSwpXSnpoNGtOL1g4a0E4d3FUSlh3WHVTZDAxc0hKMmk4a3kwVDNaYVBSdEYrbnl5Vi85MUpNY21iM29ESDhzV2ZSCmt4RDJtQXB0WVpMb1Z3Y2FlMWF5MC91dUFySXlML0VCWjdZZDdwSWt3S1g4WUE2NVNUd1JOUmVWL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
++ echo ''\''Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAyICgweDIpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlbGV0CiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmQyOjM1OjY4OjRkOjJmOjcwOjdmOmU3OmU0OmJmOjUyOmIwOjYxOmFlOgogICAgICAgICAgICAgICAgICAgIGYyOmVmOmFhOjU4Ojg4OjA0OjZhOmFmOmIyOjZhOjA5OjNhOjBmOjZkOmIyOgogICAgICAgICAgICAgICAgICAgIDkzOmIzOmZhOjBhOjU2OmQ5OjdjOmEzOjBkOjQ0OjgwOmUxOmU3OjExOjg4OgogICAgICAgICAgICAgICAgICAgIDA3OmE0OjNhOmM0OjkwOmI1OmEyOjYyOjg0OmM1OmNmOmE2OmVhOjJmOjI3OgogICAgICAgICAgICAgICAgICAgIDFiOjU3OmFiOmFlOjgzOmNlOjhjOjNhOmI2OjdlOjBlOjA2OjhkOjQ5OjAzOgogICAgICAgICAgICAgICAgICAgIDZlOmFkOjdhOmQ0OmFiOmJhOjg5OmU0OmE4OjJlOjMwOmVlOjdmOjFmOjdiOgogICAgICAgICAgICAgICAgICAgIDFjOmE5OmJkOjcyOjk4OmFjOjU3OmI3OjQ2OmI2OmRhOjVhOmM4OmE2OjY5OgogICAgICAgICAgICAgICAgICAgIGY4OjU2OjkxOjc3OjQ4OmNmOjJhOmVjOjYwOjlmOjUxOjQ5OmEzOjA0OjY2OgogICAgICAgICAgICAgICAgICAgIGUzOmQ3Ojg2OjkyOjY1OjQ3OmQ5OjhmOmViOmU5OjA5OjZhOjE4OjI3OjEwOgogICAgICAgICAgICAgICAgICAgIDdhOjlhOjFmOmQwOjE4OjkwOjk5OmVjOjAzOjFiOmMxOjhlOmFiOjI1OjQwOgogICAgICAgICAgICAgICAgICAgIDNmOmZlOmJiOjU4OjY2OjkxOjEwOjcxOmU3OjQzOjM4OjYyOjkzOmMwOjczOgogICAgICAgICAgICAgICAgICAgIDM3OmRmOjg5Ojc2OmIzOjdkOmY2OjYxOjMxOmEwOmNjOjU4OmU4OmNhOmFiOgogICAgICAgICAgICAgICAgICAgIDE4Ojk2OjRjOmU3OmY3OjYwOmQ0OmZiOmNjOjBjOmM0OjZjOjBmOjgzOjBmOgogICAgICAgICAgICAgICAgICAgIDc3OjE1OmE1OmM5OmU4OjRhOjI2OjkyOjMyOmIzOjYzOmFlOjQwOmQ1OmQ2OgogICAgICAgICAgICAgICAgICAgIDhmOjllOmFjOmJiOjc2OjI4OmFmOjY0OjA5OjE5OmNlOjk4OjNmOmZkOjMzOgogICAgICAgICAgICAgICAgICAgIDU0OjM1OmMxOjAwOjIxOmVlOjQxOjBmOmRkOjY0OmFmOjBjOjIyOjc5OjIwOgogICAgICAgICAgICAgICAgICAgIDYxOjkwOjllOjkyOmY1OmFkOjQ0OjNlOjlmOmRkOjFkOjU5OjJlOjQyOjMyOgogICAgICAgICAgICAgICAgICAgIDQyOjQzCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBFMzpDNzpFRDpEMjo5Nzo2NjpCNzo2RToxMTozMDo5QTo2QzpDQjoxQjo3RDoxQzpBQTo2NTo4MTo5NgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjk6ZGU6Y2Y6Y2M6ZjY6YTQ6YjM6MTY6MDQ6NzA6OWE6NDM6ZTc6ZGQ6Mzg6MmQ6OTc6MzU6CiAgICAgICAgIDhhOjhkOjA5OjcxOjRkOjIyOjVkOmY5OjcxOjAxOmYwOjJiOjVhOmIzOjgzOmY5OjgzOmEzOgogICAgICAgICA1Yjo3ODoxNDo0MDo2NTpmNDo3Njo1MDphNjpmMjo0YzpjZjphZjo3YTo1NDpkMTo5Yjo3ODoKICAgICAgICAgNTk6YWI6ODI6YzM6MGI6YWE6ZGY6ODU6YTE6YzA6ZDc6Zjk6YjM6NjM6Mzk6OWI6ZmU6ZTQ6CiAgICAgICAgIDFhOjNiOmJhOjBlOjNmOjQ1OmQ5OmVkOmRhOmU1OjdjOjVlOmZiOjI0OjQwOjUzOmM4OjYwOgogICAgICAgICBkYzpkNjozMzphNTo5NDowZjo2MzowZDo4MzpmMjpiYzo3ZjoyYzphODphYTpjODowMToxOToKICAgICAgICAgY2I6ODE6Yjk6NGU6YmM6Mzg6MmI6NGM6Mzg6OWU6OGM6YTk6ZTQ6NDI6ODE6MGI6YTc6Y2Y6CiAgICAgICAgIDJmOmQ2OmRmOjk2OjU5OmYyOjk2OjI2OmNiOmRmOjcxOjNhOjFmOjkxOjM3OjA4OmY4Ojk5OgogICAgICAgICAyZTpkZjplYTo5NjpmNzpmODo0YjpjOTo2MTplZjo2NzphMDo5ZDoxZjozODo4MDowODozZToKICAgICAgICAgNjI6ODU6NGE6NTg6OWM6ZTE6ZTI6NDM6N2Y6NWY6Yzk6MDA6ZjM6MGE6OTM6MjU6N2M6MTc6CiAgICAgICAgIGI5OjI3Ojc0OmQ2OmMxOmM5OmRhOjJmOjI0OmNiOjQ0OmY3OjY1OmEzOmQxOmI0OjVmOmE3OgogICAgICAgICBjYjoyNTo3ZjpmNzo1Mjo0Yzo3Mjo2NjpmNzphMDozMTpmYzpiMTo2NzpkMTo5MzoxMDpmNjoKICAgICAgICAgOTg6MGE6NmQ6NjE6OTI6ZTg6NTc6MDc6MWE6N2I6NTY6YjI6ZDM6ZmI6YWU6MDI6YjI6MzI6CiAgICAgICAgIDJmOmYxOjAxOjY3OmI2OjFkOmVlOjkyOjI0OmMwOmE1OmZjOjYwOjBlOmI5OjQ5OjNjOjExOgogICAgICAgICAzNToxNzo5NTpmZgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBakFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV3hsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5JMWFFMHZjSC9uNUw5U3NHR3U4dStxV0lnRWFxK3lhZ2s2RDIyeWs3UDZDbGJaZktNTgpSSURoNXhHSUI2UTZ4SkMxb21LRXhjK202aThuRzFlcnJvUE9qRHEyZmc0R2pVa0RicTE2MUt1NmllU29MakR1CmZ4OTdIS205Y3Bpc1Y3ZEd0dHBheUtacCtGYVJkMGpQS3V4Z24xRkpvd1JtNDllR2ttVkgyWS9yNlFscUdDY1EKZXBvZjBCaVFtZXdERzhHT3F5VkFQLzY3V0dhUkVISG5RemhpazhCek45K0pkck45OW1FeG9NeFk2TXFyR0paTQo1L2RnMVB2TURNUnNENE1QZHhXbHllaEtKcEl5czJPdVFOWFdqNTZzdTNZb3IyUUpHYzZZUC8welZEWEJBQ0h1ClFRL2RaSzhNSW5rZ1laQ2Vrdld0UkQ2ZjNSMVpMa0l5UWtNQ0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJUangrM1NsMmEzYmhFd21tekxHMzBjcW1XQmxqQlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYWQ3UHpQYWtzeFlFY0pwRDU5MDRMWmMxaW8wSgpjVTBpWGZseEFmQXJXck9EK1lPalczZ1VRR1gwZGxDbThrelByM3BVMFp0NFdhdUN3d3VxMzRXaHdOZjVzMk01Cm0vN2tHanU2RGo5RjJlM2E1WHhlK3lSQVU4aGczTll6cFpRUFl3MkQ4cngvTEtpcXlBRVp5NEc1VHJ3NEswdzQKbm95cDVFS0JDNmZQTDliZmxsbnlsaWJMMzNFNkg1RTNDUGlaTHQvcWx2ZjRTOGxoNzJlZ25SODRnQWcrWW9WSwpXSnpoNGtOL1g4a0E4d3FUSlh3WHVTZDAxc0hKMmk4a3kwVDNaYVBSdEYrbnl5Vi85MUpNY21iM29ESDhzV2ZSCmt4RDJtQXB0WVpMb1Z3Y2FlMWF5MC91dUFySXlML0VCWjdZZDdwSWt3S1g4WUE2NVNUd1JOUmVWL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='\'''
++ yaml-quote LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFNOV2hOTDNCLzUrUy8KVXJCaHJ2THZxbGlJQkdxdnNtb0pPZzl0c3BPeitncFcyWHlqRFVTQTRlY1JpQWVrT3NTUXRhSmloTVhQcHVvdgpKeHRYcTY2RHpvdzZ0bjRPQm8xSkEyNnRldFNydW9ua3FDNHc3bjhmZXh5cHZYS1lyRmUzUnJiYVdzaW1hZmhXCmtYZEl6eXJzWUo5UlNhTUVadVBYaHBKbFI5bVA2K2tKYWhnbkVIcWFIOUFZa0puc0F4dkJqcXNsUUQvK3UxaG0Ka1JCeDUwTTRZcFBBY3pmZmlYYXpmZlpoTWFETVdPaktxeGlXVE9mM1lOVDd6QXpFYkErREQzY1ZwY25vU2lhUwpNck5qcmtEVjFvK2VyTHQyS0s5a0NSbk9tRC85TTFRMXdRQWg3a0VQM1dTdkRDSjVJR0dRbnBMMXJVUStuOTBkCldTNUNNa0pEQWdNQkFBRUNnZ0VBWkpMaEFHeitLblJNNGEweWJzcEJ1YUdMRWlqcTBuMU9kbk90QmhNMjBCbUYKOE4vRjNrMXV4U3RRWHZieWtRVDlIeStJTGhMUWdmV2Vma2o3c0FxWVNMLytIK2xJam5WY0M5NzBpVlFIaE5LUApQek9vUmdrV0VYM1p6T3l6YzVDaHR6TENNZDdWdWFsaUJDazlKVHpaa0piNkl1NVViTHE5c0ZUV25sYXVKVWtnCkRYd0hjWUhTNTM4U05ncEhqZktqZ3JnenFVV1NMdy81aHB5SFlCaVhXdklnY1hRdkwxUkVuY0Y2RmFHYXMvS1oKa2JxdHVCOEMxOXUweklFLzg3ZHdBMEhSN21uSldhNGJtNTBwalVGU0xPdlN5cFhONkNTc0NidXBNYnR5TkloaApiSlE3UVZxVGFGejNURS9qRWtid0RNK3dxZmpuY1RPNjBIeG51WWJjNFFLQmdRRHB1UUMzMVR2TEJpekZWb2JYCmJmdDczOW1kSXlJOTBUaHl4dTlxZ0tUL3dxRGdMa0plRG5XV1dlTHBkUzFlTXNPRVAzQTRyTHloK25rQWNIbjIKWVlQWlBOa2NycjRaKzZaOXhvN29UTjlSb3RLdDcyWmNmSlZQT0dva3RXWVIxcFRHaDB6WU53b1FaRnlwZ0hPRQp2UlF5c3AvVmkwZmRCaThTSzZOSkNVcHQzUUtCZ1FEbVBxVTZ0L2ptUEQra1ZmaXF2NmNrcDZVaGx5LzVkQUFxClVERTV6eW83ZG5hSGpYTk5seTVMNkFvV0d4eGtJRkVQdXZrS3pSU2I0cm54QlFSMUhma0FBalI3WWtVZkdBdVEKYTB0eUxTZXpqSU1tTGd1ZDIxakJKSWxwazB2UkUvTnlQZGFOc25vMkVTbG9sTnBESUREZTdLQ3N6K29rcmpXVgp4c1hNT1VhK253S0JnUUNQbTBqQnE1ZE5xOEdlandmVEhwVERERXZkclZUQXZ1ajhQUmVtVE4wVStUVjRDWFJsCjdtUjV1VWtmUVF4Yk1MM0phR0Uvc1lORjAyeTl4RjVyOEliZTEvQmZHMDliRDdEQTMxdTNpR1ErK05pU1h1SjYKT1dKVWhzbFJQTlEyYWE2SVBXSU9CK043SnU5NGhxQjBFdWx5TFNiZ1F2QW84ai9CM21ZNTNpZUpVUUtCZ1FEUwpkVmJRK3BNLzJMaVB2YW5rWWZVbE16eGxITzVVUmExVkFDSk81a2VEUFFDUlhVR1ZIZWpLcDVwNHBHVnFQSVA4Ckxmc3czVTdHUXhPVjlQRWpJTGVYUTJ5M2o1Y0JHaGlQOVJOc2xVdmgra0Z6Sjhta2pIaHZhN2RUVXJtTnJuL3IKNEF4N1R6WVlyODA2OUQwaCtJM1RaMVpqUUZXVkc4eU5VTGxDdU9RcW53S0JnRS9wSkFCT3h4QWlJOUxHL0R6aAovWkt3bC9CeFJQYnJ3VXpaZFc1NDMrMUpPS1AvVzRXTWZwL2RHeXRzV2hHNWhyOXlzMDJPSmUyVWVvVzU1cmFBCkxXVkJrZXlITk9peFVvSU5YbytFUmpDcVppNXVFeHNSQ3J0SDIySW8vcU5WZ2tvd3Rhb1pPRVYydkR3UkdhdGoKVUM5ZFFqb3FJTkxqTDJRUmViTG42RndZCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFNOV2hOTDNCLzUrUy8KVXJCaHJ2THZxbGlJQkdxdnNtb0pPZzl0c3BPeitncFcyWHlqRFVTQTRlY1JpQWVrT3NTUXRhSmloTVhQcHVvdgpKeHRYcTY2RHpvdzZ0bjRPQm8xSkEyNnRldFNydW9ua3FDNHc3bjhmZXh5cHZYS1lyRmUzUnJiYVdzaW1hZmhXCmtYZEl6eXJzWUo5UlNhTUVadVBYaHBKbFI5bVA2K2tKYWhnbkVIcWFIOUFZa0puc0F4dkJqcXNsUUQvK3UxaG0Ka1JCeDUwTTRZcFBBY3pmZmlYYXpmZlpoTWFETVdPaktxeGlXVE9mM1lOVDd6QXpFYkErREQzY1ZwY25vU2lhUwpNck5qcmtEVjFvK2VyTHQyS0s5a0NSbk9tRC85TTFRMXdRQWg3a0VQM1dTdkRDSjVJR0dRbnBMMXJVUStuOTBkCldTNUNNa0pEQWdNQkFBRUNnZ0VBWkpMaEFHeitLblJNNGEweWJzcEJ1YUdMRWlqcTBuMU9kbk90QmhNMjBCbUYKOE4vRjNrMXV4U3RRWHZieWtRVDlIeStJTGhMUWdmV2Vma2o3c0FxWVNMLytIK2xJam5WY0M5NzBpVlFIaE5LUApQek9vUmdrV0VYM1p6T3l6YzVDaHR6TENNZDdWdWFsaUJDazlKVHpaa0piNkl1NVViTHE5c0ZUV25sYXVKVWtnCkRYd0hjWUhTNTM4U05ncEhqZktqZ3JnenFVV1NMdy81aHB5SFlCaVhXdklnY1hRdkwxUkVuY0Y2RmFHYXMvS1oKa2JxdHVCOEMxOXUweklFLzg3ZHdBMEhSN21uSldhNGJtNTBwalVGU0xPdlN5cFhONkNTc0NidXBNYnR5TkloaApiSlE3UVZxVGFGejNURS9qRWtid0RNK3dxZmpuY1RPNjBIeG51WWJjNFFLQmdRRHB1UUMzMVR2TEJpekZWb2JYCmJmdDczOW1kSXlJOTBUaHl4dTlxZ0tUL3dxRGdMa0plRG5XV1dlTHBkUzFlTXNPRVAzQTRyTHloK25rQWNIbjIKWVlQWlBOa2NycjRaKzZaOXhvN29UTjlSb3RLdDcyWmNmSlZQT0dva3RXWVIxcFRHaDB6WU53b1FaRnlwZ0hPRQp2UlF5c3AvVmkwZmRCaThTSzZOSkNVcHQzUUtCZ1FEbVBxVTZ0L2ptUEQra1ZmaXF2NmNrcDZVaGx5LzVkQUFxClVERTV6eW83ZG5hSGpYTk5seTVMNkFvV0d4eGtJRkVQdXZrS3pSU2I0cm54QlFSMUhma0FBalI3WWtVZkdBdVEKYTB0eUxTZXpqSU1tTGd1ZDIxakJKSWxwazB2UkUvTnlQZGFOc25vMkVTbG9sTnBESUREZTdLQ3N6K29rcmpXVgp4c1hNT1VhK253S0JnUUNQbTBqQnE1ZE5xOEdlandmVEhwVERERXZkclZUQXZ1ajhQUmVtVE4wVStUVjRDWFJsCjdtUjV1VWtmUVF4Yk1MM0phR0Uvc1lORjAyeTl4RjVyOEliZTEvQmZHMDliRDdEQTMxdTNpR1ErK05pU1h1SjYKT1dKVWhzbFJQTlEyYWE2SVBXSU9CK043SnU5NGhxQjBFdWx5TFNiZ1F2QW84ai9CM21ZNTNpZUpVUUtCZ1FEUwpkVmJRK3BNLzJMaVB2YW5rWWZVbE16eGxITzVVUmExVkFDSk81a2VEUFFDUlhVR1ZIZWpLcDVwNHBHVnFQSVA4Ckxmc3czVTdHUXhPVjlQRWpJTGVYUTJ5M2o1Y0JHaGlQOVJOc2xVdmgra0Z6Sjhta2pIaHZhN2RUVXJtTnJuL3IKNEF4N1R6WVlyODA2OUQwaCtJM1RaMVpqUUZXVkc4eU5VTGxDdU9RcW53S0JnRS9wSkFCT3h4QWlJOUxHL0R6aAovWkt3bC9CeFJQYnJ3VXpaZFc1NDMrMUpPS1AvVzRXTWZwL2RHeXRzV2hHNWhyOXlzMDJPSmUyVWVvVzU1cmFBCkxXVkJrZXlITk9peFVvSU5YbytFUmpDcVppNXVFeHNSQ3J0SDIySW8vcU5WZ2tvd3Rhb1pPRVYydkR3UkdhdGoKVUM5ZFFqb3FJTkxqTDJRUmViTG42RndZCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
++ echo ''\''LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFNOV2hOTDNCLzUrUy8KVXJCaHJ2THZxbGlJQkdxdnNtb0pPZzl0c3BPeitncFcyWHlqRFVTQTRlY1JpQWVrT3NTUXRhSmloTVhQcHVvdgpKeHRYcTY2RHpvdzZ0bjRPQm8xSkEyNnRldFNydW9ua3FDNHc3bjhmZXh5cHZYS1lyRmUzUnJiYVdzaW1hZmhXCmtYZEl6eXJzWUo5UlNhTUVadVBYaHBKbFI5bVA2K2tKYWhnbkVIcWFIOUFZa0puc0F4dkJqcXNsUUQvK3UxaG0Ka1JCeDUwTTRZcFBBY3pmZmlYYXpmZlpoTWFETVdPaktxeGlXVE9mM1lOVDd6QXpFYkErREQzY1ZwY25vU2lhUwpNck5qcmtEVjFvK2VyTHQyS0s5a0NSbk9tRC85TTFRMXdRQWg3a0VQM1dTdkRDSjVJR0dRbnBMMXJVUStuOTBkCldTNUNNa0pEQWdNQkFBRUNnZ0VBWkpMaEFHeitLblJNNGEweWJzcEJ1YUdMRWlqcTBuMU9kbk90QmhNMjBCbUYKOE4vRjNrMXV4U3RRWHZieWtRVDlIeStJTGhMUWdmV2Vma2o3c0FxWVNMLytIK2xJam5WY0M5NzBpVlFIaE5LUApQek9vUmdrV0VYM1p6T3l6YzVDaHR6TENNZDdWdWFsaUJDazlKVHpaa0piNkl1NVViTHE5c0ZUV25sYXVKVWtnCkRYd0hjWUhTNTM4U05ncEhqZktqZ3JnenFVV1NMdy81aHB5SFlCaVhXdklnY1hRdkwxUkVuY0Y2RmFHYXMvS1oKa2JxdHVCOEMxOXUweklFLzg3ZHdBMEhSN21uSldhNGJtNTBwalVGU0xPdlN5cFhONkNTc0NidXBNYnR5TkloaApiSlE3UVZxVGFGejNURS9qRWtid0RNK3dxZmpuY1RPNjBIeG51WWJjNFFLQmdRRHB1UUMzMVR2TEJpekZWb2JYCmJmdDczOW1kSXlJOTBUaHl4dTlxZ0tUL3dxRGdMa0plRG5XV1dlTHBkUzFlTXNPRVAzQTRyTHloK25rQWNIbjIKWVlQWlBOa2NycjRaKzZaOXhvN29UTjlSb3RLdDcyWmNmSlZQT0dva3RXWVIxcFRHaDB6WU53b1FaRnlwZ0hPRQp2UlF5c3AvVmkwZmRCaThTSzZOSkNVcHQzUUtCZ1FEbVBxVTZ0L2ptUEQra1ZmaXF2NmNrcDZVaGx5LzVkQUFxClVERTV6eW83ZG5hSGpYTk5seTVMNkFvV0d4eGtJRkVQdXZrS3pSU2I0cm54QlFSMUhma0FBalI3WWtVZkdBdVEKYTB0eUxTZXpqSU1tTGd1ZDIxakJKSWxwazB2UkUvTnlQZGFOc25vMkVTbG9sTnBESUREZTdLQ3N6K29rcmpXVgp4c1hNT1VhK253S0JnUUNQbTBqQnE1ZE5xOEdlandmVEhwVERERXZkclZUQXZ1ajhQUmVtVE4wVStUVjRDWFJsCjdtUjV1VWtmUVF4Yk1MM0phR0Uvc1lORjAyeTl4RjVyOEliZTEvQmZHMDliRDdEQTMxdTNpR1ErK05pU1h1SjYKT1dKVWhzbFJQTlEyYWE2SVBXSU9CK043SnU5NGhxQjBFdWx5TFNiZ1F2QW84ai9CM21ZNTNpZUpVUUtCZ1FEUwpkVmJRK3BNLzJMaVB2YW5rWWZVbE16eGxITzVVUmExVkFDSk81a2VEUFFDUlhVR1ZIZWpLcDVwNHBHVnFQSVA4Ckxmc3czVTdHUXhPVjlQRWpJTGVYUTJ5M2o1Y0JHaGlQOVJOc2xVdmgra0Z6Sjhta2pIaHZhN2RUVXJtTnJuL3IKNEF4N1R6WVlyODA2OUQwaCtJM1RaMVpqUUZXVkc4eU5VTGxDdU9RcW53S0JnRS9wSkFCT3h4QWlJOUxHL0R6aAovWkt3bC9CeFJQYnJ3VXpaZFc1NDMrMUpPS1AvVzRXTWZwL2RHeXRzV2hHNWhyOXlzMDJPSmUyVWVvVzU1cmFBCkxXVkJrZXlITk9peFVvSU5YbytFUmpDcVppNXVFeHNSQ3J0SDIySW8vcU5WZ2tvd3Rhb1pPRVYydkR3UkdhdGoKVUM5ZFFqb3FJTkxqTDJRUmViTG42RndZCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\'''
++ yaml-quote none
+++ echo none
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''none'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote R2.20
+++ echo R2.20
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''R2.20'\'''
++ yaml-quote master
+++ echo master
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''master'\'''
++ yaml-quote 10.1.0.0/16
+++ echo 10.1.0.0/16
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.1.0.0/16'\'''
++ yaml-quote false
+++ echo false
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''false'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote 10.0.0.0/8
+++ echo 10.0.0.0/8
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.0.0.0/8'\'''
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ [[ jessie == \t\r\u\s\t\y ]]
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ [[ true == \t\r\u\e ]]
+ cat
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote admin
+++ echo admin
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''admin'\'''
++ yaml-quote VOpgP0Ggnty5mLcq
+++ echo VOpgP0Ggnty5mLcq
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''VOpgP0Ggnty5mLcq'\'''
++ yaml-quote iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1
+++ echo iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1'\'''
++ yaml-quote Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAxICgweDEpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlcm5ldGVzLW1hc3RlcgogICAgICAgIFN1YmplY3QgUHVibGljIEtleSBJbmZvOgogICAgICAgICAgICBQdWJsaWMgS2V5IEFsZ29yaXRobTogcnNhRW5jcnlwdGlvbgogICAgICAgICAgICAgICAgUHVibGljLUtleTogKDIwNDggYml0KQogICAgICAgICAgICAgICAgTW9kdWx1czoKICAgICAgICAgICAgICAgICAgICAwMDpjMzphNzo3NTpiNTphMzoyNjpmYjpkOTo1Yzo4NjoxZjo4MDplYjo3ZjoKICAgICAgICAgICAgICAgICAgICA3ZjowNzo2ZDo2ZDpjZjpmNTo0NzpkNzo3NjpkNzo2MzphOTo0MzpiMTozZjoKICAgICAgICAgICAgICAgICAgICA0MDo0OToyZDo5MTpmZDpkMDo2Njo2Nzo5ZDo2NTpiMjoyMDowNzoxYzowYToKICAgICAgICAgICAgICAgICAgICBjNTowZTo4NTo0MzoxMTplYjplODphNDpiNTpmZjowZDo4MToyYzphZjpkODoKICAgICAgICAgICAgICAgICAgICBiNTo1MDpmNjoxYTo2MzozZjpjYzphNzo1Nzo2OTo2YToyNjplODozZToyYzoKICAgICAgICAgICAgICAgICAgICBmMzpiYTowYjozZDphNDo4Nzo5YzowYjoxNzpmMjplZTo3ZjpiZTo3MDpkZDoKICAgICAgICAgICAgICAgICAgICBhNTplODo4MzphNTpiZTo2ZDo5YzoyMjozZjozMToxMTowNjo0ZDo4MDo3ZToKICAgICAgICAgICAgICAgICAgICAyODoyMjo1ODpiNDo0NDo3OTphYzo5ZjplODo2ODoxZjpiYzo2NDoyYTo2YzoKICAgICAgICAgICAgICAgICAgICA2Yjo2NTowZTozNjpjNzowNjplYTo2MTozNTpiYTo4Mzo1MDpiMTo1MDpiMjoKICAgICAgICAgICAgICAgICAgICAxZTpiMDowZTpiNTpjZjo2MTphYjo1Mzo3ODoxZTphZDo5Yjo2Yjo4YTowZjoKICAgICAgICAgICAgICAgICAgICBiODoxNjpjZDo1ZjpkYTo3Zjo5MzphMDo5NDo0ODpjMDpmMjozZjo1YzoyMjoKICAgICAgICAgICAgICAgICAgICBiYzowYjo4MDo1NjplZToyMTpjOTowMTphZjoyYTpiYTo0Mzo2Yjo2Yzo3NzoKICAgICAgICAgICAgICAgICAgICA2NjpkODo5Mzo1ZDowMToxOTpjMjo1YjoyODo1ZDo2Yjo0Yjo1ODo2Mzo1ZDoKICAgICAgICAgICAgICAgICAgICA3NDphYjo4ODo1Yzo0YjpmMTpjMDowYjo1ODoyMDoyZjo0MjpiOTo4YTphYjoKICAgICAgICAgICAgICAgICAgICBkNDowMzphOTo0ZDo3MDpjZTo3ODowMDo1YTo0YTpkMTo4NjpiMzpkNTo5MjoKICAgICAgICAgICAgICAgICAgICBlNTo4OTo1YToyNjpmNTozZTphYzo4NzoxODplYTo2Njo3ZjphNDplZTo1ZDoKICAgICAgICAgICAgICAgICAgICA2MTplYjpjMzphMjphZjowMzpiODo0MDo5NzplMDo2Mjo2MDozNjpmZDpjZToKICAgICAgICAgICAgICAgICAgICBhNDplMwogICAgICAgICAgICAgICAgRXhwb25lbnQ6IDY1NTM3ICgweDEwMDAxKQogICAgICAgIFg1MDl2MyBleHRlbnNpb25zOgogICAgICAgICAgICBYNTA5djMgQmFzaWMgQ29uc3RyYWludHM6IAogICAgICAgICAgICAgICAgQ0E6RkFMU0UKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgS2V5IElkZW50aWZpZXI6IAogICAgICAgICAgICAgICAgNTA6QUI6RjY6NUQ6RUQ6NEU6QjI6RDU6N0Q6ODI6RTI6NUM6RUY6QTA6MTQ6Qjc6MTQ6RUY6NkM6NjEKICAgICAgICAgICAgWDUwOXYzIEF1dGhvcml0eSBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBrZXlpZDpFQzo3NDpCRTpFODpFMzo1MTpCNDpDQTpFMjoxRTo4NDpEQzpBMDoyODo0NjowMzo5QzozMDo5Nzo3QgogICAgICAgICAgICAgICAgRGlyTmFtZTovQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgICAgICAgICAgc2VyaWFsOkIwOkZGOjI4OkE2OjhBOkVCOjBEOkZGCgogICAgICAgICAgICBYNTA5djMgRXh0ZW5kZWQgS2V5IFVzYWdlOiAKICAgICAgICAgICAgICAgIFRMUyBXZWIgU2VydmVyIEF1dGhlbnRpY2F0aW9uCiAgICAgICAgICAgIFg1MDl2MyBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgRGlnaXRhbCBTaWduYXR1cmUsIEtleSBFbmNpcGhlcm1lbnQKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgQWx0ZXJuYXRpdmUgTmFtZTogCiAgICAgICAgICAgICAgICBJUCBBZGRyZXNzOjUyLjIwMi4yMjYuMTczLCBJUCBBZGRyZXNzOjE3Mi4yMC4wLjksIElQIEFkZHJlc3M6MTAuMC4wLjEsIEROUzprdWJlcm5ldGVzLCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LnN2YywgRE5TOmt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbCwgRE5TOmt1YmVybmV0ZXMtbWFzdGVyCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgICAxNDoxODowMzpiNDo5NDphZjo5MzplNTo1OTplNTpmNjpmYjo3OTo5MDo5NjozNzplMDpkNzoKICAgICAgICAgYjk6ZDE6NTU6OTM6NDY6YzM6ZTA6NzI6NDY6MmI6MWQ6YWI6OTQ6ZDg6YTA6M2I6M2U6ZWQ6CiAgICAgICAgIGMyOjkxOmZhOjU1OmNkOjk1OmQ3OjBkOmM4OmM0OjliOjY1OmMzOjhkOmY0OmIxOmI5OjdiOgogICAgICAgICBmODowNjo3NDo4MTo5ZTplNzo3NDo0Zjo4Yjo3NTphMDowMzplZjo2MTo1NTo2MTo2ZTpmZjoKICAgICAgICAgZDk6ZTE6ZmU6M2Y6MmI6M2M6Nzc6NzE6YWI6Mzc6NGQ6MWE6MDU6YWY6MTc6M2I6NWE6MzE6CiAgICAgICAgIDk4Ojk3OjEwOjM4OjYzOjQzOjY2OjdlOmY0OmQ1OmRiOjRjOjNhOjU5OjAyOmY3OjgzOjYxOgogICAgICAgICA2ODpjODphZTphZTo0NDplNzo3OTozMzowYzo1ZTpkMTphMzo5MzoxMjo2YzplYzoxMzpiYjoKICAgICAgICAgNmI6Mzk6OTg6NzQ6OTc6ZWI6YzA6NzE6ZTE6OWE6Yzk6YTY6NmM6Y2I6NTM6YzQ6ZGQ6MDk6CiAgICAgICAgIGFjOjc1OmZjOmQ1OmQ1OjEyOjA5OjFhOjhmOmEzOjRjOjdjOmMxOjJlOjYxOjIwOjk3OmFhOgogICAgICAgICA0ODpjMzpiZjpmMDpkMjozODowOTphYjowMzo5YzplODozMTozNjozMDpjZDpjMzpiZDowZjoKICAgICAgICAgMjY6NTg6NTk6N2U6ZTE6MTM6MWI6NDY6YmU6N2U6YjY6OWE6MWE6ZDc6M2I6ZWI6MjA6NWI6CiAgICAgICAgIDJkOjQ2OjQ0OmEwOjA0OjJlOmEyOjA5OjNjOmU5OjA0OjUxOjYxOmFjOjdjOmJlOjdiOmIxOgogICAgICAgICBlMTplOTozNTozNDphNTplMDphMToxMTowZDo0ZTpkYToxYTo4NDowYTo4ODo3ZTpiYjo3YjoKICAgICAgICAgMTk6YWY6MzQ6MDM6MDA6YzI6NGI6ZDg6OTc6NTQ6N2Q6OTg6NzU6ZmQ6ZDM6NzM6ZmE6M2Y6CiAgICAgICAgIGYwOjk5OjYyOjM2Ci0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEOURDQ0F0eWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBa01TSXdJQVlEVlFRREZCazFNaTR5Ck1ESXVNakkyTGpFM00wQXhORFl5TlRVNE5EZzJNQjRYRFRFMk1EVXdOakU0TVRRME5sb1hEVEkyTURVd05ERTQKTVRRME5sb3dIREVhTUJnR0ExVUVBeE1SYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREcDNXMW95YjcyVnlHSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94ClAwQkpMWkg5MEdabm5XV3lJQWNjQ3NVT2hVTVI2K2lrdGY4TmdTeXYyTFZROWhwalA4eW5WMmxxSnVnK0xQTzYKQ3oya2g1d0xGL0x1Zjc1dzNhWG9nNlcrYlp3aVB6RVJCazJBZmlnaVdMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSApCdXBoTmJxRFVMRlFzaDZ3RHJYUFlhdFRlQjZ0bTJ1S0Q3Z1d6Vi9hZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCCnJ5cTZRMnRzZDJiWWsxMEJHY0piS0YxclMxaGpYWFNyaUZ4TDhjQUxXQ0F2UXJtS3E5UURxVTF3em5nQVdrclIKaHJQVmt1V0pXaWIxUHF5SEdPcG1mNlR1WFdIcnc2S3ZBN2hBbCtCaVlEYjl6cVRqQWdNQkFBR2pnZ0UzTUlJQgpNekFKQmdOVkhSTUVBakFBTUIwR0ExVWREZ1FXQkJSUXEvWmQ3VTZ5MVgyQzRsenZvQlMzRk85c1lUQlVCZ05WCkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXUKTWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzRwpBUVVGQndNQk1Bc0dBMVVkRHdRRUF3SUZvRENCamdZRFZSMFJCSUdHTUlHRGh3UTB5dUt0aHdTc0ZBQUpod1FLCkFBQUJnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQ0ZtdDFZbVZ5Ym1WMFpYTXUKWkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaApiSUlSYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJRWUE3U1VyNVBsCldlWDIrM21RbGpmZzE3blJWWk5HdytCeVJpc2RxNVRZb0RzKzdjS1IrbFhObGRjTnlNU2JaY09OOUxHNWUvZ0cKZElHZTUzUlBpM1dnQSs5aFZXRnUvOW5oL2o4clBIZHhxemROR2dXdkZ6dGFNWmlYRURoalEyWis5TlhiVERwWgpBdmVEWVdqSXJxNUU1M2t6REY3Um81TVNiT3dUdTJzNW1IU1g2OEJ4NFpySnBtekxVOFRkQ2F4MS9OWFZFZ2thCmo2Tk1mTUV1WVNDWHFrakR2L0RTT0FtckE1em9NVFl3emNPOUR5WllXWDdoRXh0R3ZuNjJtaHJYTytzZ1d5MUcKUktBRUxxSUpQT2tFVVdHc2ZMNTdzZUhwTlRTbDRLRVJEVTdhR29RS2lINjdleG12TkFNQXdrdllsMVI5bUhYOQowM1A2UC9DWllqWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAxICgweDEpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlcm5ldGVzLW1hc3RlcgogICAgICAgIFN1YmplY3QgUHVibGljIEtleSBJbmZvOgogICAgICAgICAgICBQdWJsaWMgS2V5IEFsZ29yaXRobTogcnNhRW5jcnlwdGlvbgogICAgICAgICAgICAgICAgUHVibGljLUtleTogKDIwNDggYml0KQogICAgICAgICAgICAgICAgTW9kdWx1czoKICAgICAgICAgICAgICAgICAgICAwMDpjMzphNzo3NTpiNTphMzoyNjpmYjpkOTo1Yzo4NjoxZjo4MDplYjo3ZjoKICAgICAgICAgICAgICAgICAgICA3ZjowNzo2ZDo2ZDpjZjpmNTo0NzpkNzo3NjpkNzo2MzphOTo0MzpiMTozZjoKICAgICAgICAgICAgICAgICAgICA0MDo0OToyZDo5MTpmZDpkMDo2Njo2Nzo5ZDo2NTpiMjoyMDowNzoxYzowYToKICAgICAgICAgICAgICAgICAgICBjNTowZTo4NTo0MzoxMTplYjplODphNDpiNTpmZjowZDo4MToyYzphZjpkODoKICAgICAgICAgICAgICAgICAgICBiNTo1MDpmNjoxYTo2MzozZjpjYzphNzo1Nzo2OTo2YToyNjplODozZToyYzoKICAgICAgICAgICAgICAgICAgICBmMzpiYTowYjozZDphNDo4Nzo5YzowYjoxNzpmMjplZTo3ZjpiZTo3MDpkZDoKICAgICAgICAgICAgICAgICAgICBhNTplODo4MzphNTpiZTo2ZDo5YzoyMjozZjozMToxMTowNjo0ZDo4MDo3ZToKICAgICAgICAgICAgICAgICAgICAyODoyMjo1ODpiNDo0NDo3OTphYzo5ZjplODo2ODoxZjpiYzo2NDoyYTo2YzoKICAgICAgICAgICAgICAgICAgICA2Yjo2NTowZTozNjpjNzowNjplYTo2MTozNTpiYTo4Mzo1MDpiMTo1MDpiMjoKICAgICAgICAgICAgICAgICAgICAxZTpiMDowZTpiNTpjZjo2MTphYjo1Mzo3ODoxZTphZDo5Yjo2Yjo4YTowZjoKICAgICAgICAgICAgICAgICAgICBiODoxNjpjZDo1ZjpkYTo3Zjo5MzphMDo5NDo0ODpjMDpmMjozZjo1YzoyMjoKICAgICAgICAgICAgICAgICAgICBiYzowYjo4MDo1NjplZToyMTpjOTowMTphZjoyYTpiYTo0Mzo2Yjo2Yzo3NzoKICAgICAgICAgICAgICAgICAgICA2NjpkODo5Mzo1ZDowMToxOTpjMjo1YjoyODo1ZDo2Yjo0Yjo1ODo2Mzo1ZDoKICAgICAgICAgICAgICAgICAgICA3NDphYjo4ODo1Yzo0YjpmMTpjMDowYjo1ODoyMDoyZjo0MjpiOTo4YTphYjoKICAgICAgICAgICAgICAgICAgICBkNDowMzphOTo0ZDo3MDpjZTo3ODowMDo1YTo0YTpkMTo4NjpiMzpkNTo5MjoKICAgICAgICAgICAgICAgICAgICBlNTo4OTo1YToyNjpmNTozZTphYzo4NzoxODplYTo2Njo3ZjphNDplZTo1ZDoKICAgICAgICAgICAgICAgICAgICA2MTplYjpjMzphMjphZjowMzpiODo0MDo5NzplMDo2Mjo2MDozNjpmZDpjZToKICAgICAgICAgICAgICAgICAgICBhNDplMwogICAgICAgICAgICAgICAgRXhwb25lbnQ6IDY1NTM3ICgweDEwMDAxKQogICAgICAgIFg1MDl2MyBleHRlbnNpb25zOgogICAgICAgICAgICBYNTA5djMgQmFzaWMgQ29uc3RyYWludHM6IAogICAgICAgICAgICAgICAgQ0E6RkFMU0UKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgS2V5IElkZW50aWZpZXI6IAogICAgICAgICAgICAgICAgNTA6QUI6RjY6NUQ6RUQ6NEU6QjI6RDU6N0Q6ODI6RTI6NUM6RUY6QTA6MTQ6Qjc6MTQ6RUY6NkM6NjEKICAgICAgICAgICAgWDUwOXYzIEF1dGhvcml0eSBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBrZXlpZDpFQzo3NDpCRTpFODpFMzo1MTpCNDpDQTpFMjoxRTo4NDpEQzpBMDoyODo0NjowMzo5QzozMDo5Nzo3QgogICAgICAgICAgICAgICAgRGlyTmFtZTovQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgICAgICAgICAgc2VyaWFsOkIwOkZGOjI4OkE2OjhBOkVCOjBEOkZGCgogICAgICAgICAgICBYNTA5djMgRXh0ZW5kZWQgS2V5IFVzYWdlOiAKICAgICAgICAgICAgICAgIFRMUyBXZWIgU2VydmVyIEF1dGhlbnRpY2F0aW9uCiAgICAgICAgICAgIFg1MDl2MyBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgRGlnaXRhbCBTaWduYXR1cmUsIEtleSBFbmNpcGhlcm1lbnQKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgQWx0ZXJuYXRpdmUgTmFtZTogCiAgICAgICAgICAgICAgICBJUCBBZGRyZXNzOjUyLjIwMi4yMjYuMTczLCBJUCBBZGRyZXNzOjE3Mi4yMC4wLjksIElQIEFkZHJlc3M6MTAuMC4wLjEsIEROUzprdWJlcm5ldGVzLCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LnN2YywgRE5TOmt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbCwgRE5TOmt1YmVybmV0ZXMtbWFzdGVyCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgICAxNDoxODowMzpiNDo5NDphZjo5MzplNTo1OTplNTpmNjpmYjo3OTo5MDo5NjozNzplMDpkNzoKICAgICAgICAgYjk6ZDE6NTU6OTM6NDY6YzM6ZTA6NzI6NDY6MmI6MWQ6YWI6OTQ6ZDg6YTA6M2I6M2U6ZWQ6CiAgICAgICAgIGMyOjkxOmZhOjU1OmNkOjk1OmQ3OjBkOmM4OmM0OjliOjY1OmMzOjhkOmY0OmIxOmI5OjdiOgogICAgICAgICBmODowNjo3NDo4MTo5ZTplNzo3NDo0Zjo4Yjo3NTphMDowMzplZjo2MTo1NTo2MTo2ZTpmZjoKICAgICAgICAgZDk6ZTE6ZmU6M2Y6MmI6M2M6Nzc6NzE6YWI6Mzc6NGQ6MWE6MDU6YWY6MTc6M2I6NWE6MzE6CiAgICAgICAgIDk4Ojk3OjEwOjM4OjYzOjQzOjY2OjdlOmY0OmQ1OmRiOjRjOjNhOjU5OjAyOmY3OjgzOjYxOgogICAgICAgICA2ODpjODphZTphZTo0NDplNzo3OTozMzowYzo1ZTpkMTphMzo5MzoxMjo2YzplYzoxMzpiYjoKICAgICAgICAgNmI6Mzk6OTg6NzQ6OTc6ZWI6YzA6NzE6ZTE6OWE6Yzk6YTY6NmM6Y2I6NTM6YzQ6ZGQ6MDk6CiAgICAgICAgIGFjOjc1OmZjOmQ1OmQ1OjEyOjA5OjFhOjhmOmEzOjRjOjdjOmMxOjJlOjYxOjIwOjk3OmFhOgogICAgICAgICA0ODpjMzpiZjpmMDpkMjozODowOTphYjowMzo5YzplODozMTozNjozMDpjZDpjMzpiZDowZjoKICAgICAgICAgMjY6NTg6NTk6N2U6ZTE6MTM6MWI6NDY6YmU6N2U6YjY6OWE6MWE6ZDc6M2I6ZWI6MjA6NWI6CiAgICAgICAgIDJkOjQ2OjQ0OmEwOjA0OjJlOmEyOjA5OjNjOmU5OjA0OjUxOjYxOmFjOjdjOmJlOjdiOmIxOgogICAgICAgICBlMTplOTozNTozNDphNTplMDphMToxMTowZDo0ZTpkYToxYTo4NDowYTo4ODo3ZTpiYjo3YjoKICAgICAgICAgMTk6YWY6MzQ6MDM6MDA6YzI6NGI6ZDg6OTc6NTQ6N2Q6OTg6NzU6ZmQ6ZDM6NzM6ZmE6M2Y6CiAgICAgICAgIGYwOjk5OjYyOjM2Ci0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEOURDQ0F0eWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBa01TSXdJQVlEVlFRREZCazFNaTR5Ck1ESXVNakkyTGpFM00wQXhORFl5TlRVNE5EZzJNQjRYRFRFMk1EVXdOakU0TVRRME5sb1hEVEkyTURVd05ERTQKTVRRME5sb3dIREVhTUJnR0ExVUVBeE1SYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREcDNXMW95YjcyVnlHSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94ClAwQkpMWkg5MEdabm5XV3lJQWNjQ3NVT2hVTVI2K2lrdGY4TmdTeXYyTFZROWhwalA4eW5WMmxxSnVnK0xQTzYKQ3oya2g1d0xGL0x1Zjc1dzNhWG9nNlcrYlp3aVB6RVJCazJBZmlnaVdMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSApCdXBoTmJxRFVMRlFzaDZ3RHJYUFlhdFRlQjZ0bTJ1S0Q3Z1d6Vi9hZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCCnJ5cTZRMnRzZDJiWWsxMEJHY0piS0YxclMxaGpYWFNyaUZ4TDhjQUxXQ0F2UXJtS3E5UURxVTF3em5nQVdrclIKaHJQVmt1V0pXaWIxUHF5SEdPcG1mNlR1WFdIcnc2S3ZBN2hBbCtCaVlEYjl6cVRqQWdNQkFBR2pnZ0UzTUlJQgpNekFKQmdOVkhSTUVBakFBTUIwR0ExVWREZ1FXQkJSUXEvWmQ3VTZ5MVgyQzRsenZvQlMzRk85c1lUQlVCZ05WCkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXUKTWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzRwpBUVVGQndNQk1Bc0dBMVVkRHdRRUF3SUZvRENCamdZRFZSMFJCSUdHTUlHRGh3UTB5dUt0aHdTc0ZBQUpod1FLCkFBQUJnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQ0ZtdDFZbVZ5Ym1WMFpYTXUKWkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaApiSUlSYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJRWUE3U1VyNVBsCldlWDIrM21RbGpmZzE3blJWWk5HdytCeVJpc2RxNVRZb0RzKzdjS1IrbFhObGRjTnlNU2JaY09OOUxHNWUvZ0cKZElHZTUzUlBpM1dnQSs5aFZXRnUvOW5oL2o4clBIZHhxemROR2dXdkZ6dGFNWmlYRURoalEyWis5TlhiVERwWgpBdmVEWVdqSXJxNUU1M2t6REY3Um81TVNiT3dUdTJzNW1IU1g2OEJ4NFpySnBtekxVOFRkQ2F4MS9OWFZFZ2thCmo2Tk1mTUV1WVNDWHFrakR2L0RTT0FtckE1em9NVFl3emNPOUR5WllXWDdoRXh0R3ZuNjJtaHJYTytzZ1d5MUcKUktBRUxxSUpQT2tFVVdHc2ZMNTdzZUhwTlRTbDRLRVJEVTdhR29RS2lINjdleG12TkFNQXdrdllsMVI5bUhYOQowM1A2UC9DWllqWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
++ echo ''\''Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAxICgweDEpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlcm5ldGVzLW1hc3RlcgogICAgICAgIFN1YmplY3QgUHVibGljIEtleSBJbmZvOgogICAgICAgICAgICBQdWJsaWMgS2V5IEFsZ29yaXRobTogcnNhRW5jcnlwdGlvbgogICAgICAgICAgICAgICAgUHVibGljLUtleTogKDIwNDggYml0KQogICAgICAgICAgICAgICAgTW9kdWx1czoKICAgICAgICAgICAgICAgICAgICAwMDpjMzphNzo3NTpiNTphMzoyNjpmYjpkOTo1Yzo4NjoxZjo4MDplYjo3ZjoKICAgICAgICAgICAgICAgICAgICA3ZjowNzo2ZDo2ZDpjZjpmNTo0NzpkNzo3NjpkNzo2MzphOTo0MzpiMTozZjoKICAgICAgICAgICAgICAgICAgICA0MDo0OToyZDo5MTpmZDpkMDo2Njo2Nzo5ZDo2NTpiMjoyMDowNzoxYzowYToKICAgICAgICAgICAgICAgICAgICBjNTowZTo4NTo0MzoxMTplYjplODphNDpiNTpmZjowZDo4MToyYzphZjpkODoKICAgICAgICAgICAgICAgICAgICBiNTo1MDpmNjoxYTo2MzozZjpjYzphNzo1Nzo2OTo2YToyNjplODozZToyYzoKICAgICAgICAgICAgICAgICAgICBmMzpiYTowYjozZDphNDo4Nzo5YzowYjoxNzpmMjplZTo3ZjpiZTo3MDpkZDoKICAgICAgICAgICAgICAgICAgICBhNTplODo4MzphNTpiZTo2ZDo5YzoyMjozZjozMToxMTowNjo0ZDo4MDo3ZToKICAgICAgICAgICAgICAgICAgICAyODoyMjo1ODpiNDo0NDo3OTphYzo5ZjplODo2ODoxZjpiYzo2NDoyYTo2YzoKICAgICAgICAgICAgICAgICAgICA2Yjo2NTowZTozNjpjNzowNjplYTo2MTozNTpiYTo4Mzo1MDpiMTo1MDpiMjoKICAgICAgICAgICAgICAgICAgICAxZTpiMDowZTpiNTpjZjo2MTphYjo1Mzo3ODoxZTphZDo5Yjo2Yjo4YTowZjoKICAgICAgICAgICAgICAgICAgICBiODoxNjpjZDo1ZjpkYTo3Zjo5MzphMDo5NDo0ODpjMDpmMjozZjo1YzoyMjoKICAgICAgICAgICAgICAgICAgICBiYzowYjo4MDo1NjplZToyMTpjOTowMTphZjoyYTpiYTo0Mzo2Yjo2Yzo3NzoKICAgICAgICAgICAgICAgICAgICA2NjpkODo5Mzo1ZDowMToxOTpjMjo1YjoyODo1ZDo2Yjo0Yjo1ODo2Mzo1ZDoKICAgICAgICAgICAgICAgICAgICA3NDphYjo4ODo1Yzo0YjpmMTpjMDowYjo1ODoyMDoyZjo0MjpiOTo4YTphYjoKICAgICAgICAgICAgICAgICAgICBkNDowMzphOTo0ZDo3MDpjZTo3ODowMDo1YTo0YTpkMTo4NjpiMzpkNTo5MjoKICAgICAgICAgICAgICAgICAgICBlNTo4OTo1YToyNjpmNTozZTphYzo4NzoxODplYTo2Njo3ZjphNDplZTo1ZDoKICAgICAgICAgICAgICAgICAgICA2MTplYjpjMzphMjphZjowMzpiODo0MDo5NzplMDo2Mjo2MDozNjpmZDpjZToKICAgICAgICAgICAgICAgICAgICBhNDplMwogICAgICAgICAgICAgICAgRXhwb25lbnQ6IDY1NTM3ICgweDEwMDAxKQogICAgICAgIFg1MDl2MyBleHRlbnNpb25zOgogICAgICAgICAgICBYNTA5djMgQmFzaWMgQ29uc3RyYWludHM6IAogICAgICAgICAgICAgICAgQ0E6RkFMU0UKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgS2V5IElkZW50aWZpZXI6IAogICAgICAgICAgICAgICAgNTA6QUI6RjY6NUQ6RUQ6NEU6QjI6RDU6N0Q6ODI6RTI6NUM6RUY6QTA6MTQ6Qjc6MTQ6RUY6NkM6NjEKICAgICAgICAgICAgWDUwOXYzIEF1dGhvcml0eSBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBrZXlpZDpFQzo3NDpCRTpFODpFMzo1MTpCNDpDQTpFMjoxRTo4NDpEQzpBMDoyODo0NjowMzo5QzozMDo5Nzo3QgogICAgICAgICAgICAgICAgRGlyTmFtZTovQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgICAgICAgICAgc2VyaWFsOkIwOkZGOjI4OkE2OjhBOkVCOjBEOkZGCgogICAgICAgICAgICBYNTA5djMgRXh0ZW5kZWQgS2V5IFVzYWdlOiAKICAgICAgICAgICAgICAgIFRMUyBXZWIgU2VydmVyIEF1dGhlbnRpY2F0aW9uCiAgICAgICAgICAgIFg1MDl2MyBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgRGlnaXRhbCBTaWduYXR1cmUsIEtleSBFbmNpcGhlcm1lbnQKICAgICAgICAgICAgWDUwOXYzIFN1YmplY3QgQWx0ZXJuYXRpdmUgTmFtZTogCiAgICAgICAgICAgICAgICBJUCBBZGRyZXNzOjUyLjIwMi4yMjYuMTczLCBJUCBBZGRyZXNzOjE3Mi4yMC4wLjksIElQIEFkZHJlc3M6MTAuMC4wLjEsIEROUzprdWJlcm5ldGVzLCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LCBETlM6a3ViZXJuZXRlcy5kZWZhdWx0LnN2YywgRE5TOmt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbCwgRE5TOmt1YmVybmV0ZXMtbWFzdGVyCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgICAxNDoxODowMzpiNDo5NDphZjo5MzplNTo1OTplNTpmNjpmYjo3OTo5MDo5NjozNzplMDpkNzoKICAgICAgICAgYjk6ZDE6NTU6OTM6NDY6YzM6ZTA6NzI6NDY6MmI6MWQ6YWI6OTQ6ZDg6YTA6M2I6M2U6ZWQ6CiAgICAgICAgIGMyOjkxOmZhOjU1OmNkOjk1OmQ3OjBkOmM4OmM0OjliOjY1OmMzOjhkOmY0OmIxOmI5OjdiOgogICAgICAgICBmODowNjo3NDo4MTo5ZTplNzo3NDo0Zjo4Yjo3NTphMDowMzplZjo2MTo1NTo2MTo2ZTpmZjoKICAgICAgICAgZDk6ZTE6ZmU6M2Y6MmI6M2M6Nzc6NzE6YWI6Mzc6NGQ6MWE6MDU6YWY6MTc6M2I6NWE6MzE6CiAgICAgICAgIDk4Ojk3OjEwOjM4OjYzOjQzOjY2OjdlOmY0OmQ1OmRiOjRjOjNhOjU5OjAyOmY3OjgzOjYxOgogICAgICAgICA2ODpjODphZTphZTo0NDplNzo3OTozMzowYzo1ZTpkMTphMzo5MzoxMjo2YzplYzoxMzpiYjoKICAgICAgICAgNmI6Mzk6OTg6NzQ6OTc6ZWI6YzA6NzE6ZTE6OWE6Yzk6YTY6NmM6Y2I6NTM6YzQ6ZGQ6MDk6CiAgICAgICAgIGFjOjc1OmZjOmQ1OmQ1OjEyOjA5OjFhOjhmOmEzOjRjOjdjOmMxOjJlOjYxOjIwOjk3OmFhOgogICAgICAgICA0ODpjMzpiZjpmMDpkMjozODowOTphYjowMzo5YzplODozMTozNjozMDpjZDpjMzpiZDowZjoKICAgICAgICAgMjY6NTg6NTk6N2U6ZTE6MTM6MWI6NDY6YmU6N2U6YjY6OWE6MWE6ZDc6M2I6ZWI6MjA6NWI6CiAgICAgICAgIDJkOjQ2OjQ0OmEwOjA0OjJlOmEyOjA5OjNjOmU5OjA0OjUxOjYxOmFjOjdjOmJlOjdiOmIxOgogICAgICAgICBlMTplOTozNTozNDphNTplMDphMToxMTowZDo0ZTpkYToxYTo4NDowYTo4ODo3ZTpiYjo3YjoKICAgICAgICAgMTk6YWY6MzQ6MDM6MDA6YzI6NGI6ZDg6OTc6NTQ6N2Q6OTg6NzU6ZmQ6ZDM6NzM6ZmE6M2Y6CiAgICAgICAgIGYwOjk5OjYyOjM2Ci0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEOURDQ0F0eWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBa01TSXdJQVlEVlFRREZCazFNaTR5Ck1ESXVNakkyTGpFM00wQXhORFl5TlRVNE5EZzJNQjRYRFRFMk1EVXdOakU0TVRRME5sb1hEVEkyTURVd05ERTQKTVRRME5sb3dIREVhTUJnR0ExVUVBeE1SYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREcDNXMW95YjcyVnlHSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94ClAwQkpMWkg5MEdabm5XV3lJQWNjQ3NVT2hVTVI2K2lrdGY4TmdTeXYyTFZROWhwalA4eW5WMmxxSnVnK0xQTzYKQ3oya2g1d0xGL0x1Zjc1dzNhWG9nNlcrYlp3aVB6RVJCazJBZmlnaVdMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSApCdXBoTmJxRFVMRlFzaDZ3RHJYUFlhdFRlQjZ0bTJ1S0Q3Z1d6Vi9hZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCCnJ5cTZRMnRzZDJiWWsxMEJHY0piS0YxclMxaGpYWFNyaUZ4TDhjQUxXQ0F2UXJtS3E5UURxVTF3em5nQVdrclIKaHJQVmt1V0pXaWIxUHF5SEdPcG1mNlR1WFdIcnc2S3ZBN2hBbCtCaVlEYjl6cVRqQWdNQkFBR2pnZ0UzTUlJQgpNekFKQmdOVkhSTUVBakFBTUIwR0ExVWREZ1FXQkJSUXEvWmQ3VTZ5MVgyQzRsenZvQlMzRk85c1lUQlVCZ05WCkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXUKTWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzRwpBUVVGQndNQk1Bc0dBMVVkRHdRRUF3SUZvRENCamdZRFZSMFJCSUdHTUlHRGh3UTB5dUt0aHdTc0ZBQUpod1FLCkFBQUJnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQ0ZtdDFZbVZ5Ym1WMFpYTXUKWkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaApiSUlSYTNWaVpYSnVaWFJsY3kxdFlYTjBaWEl3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJRWUE3U1VyNVBsCldlWDIrM21RbGpmZzE3blJWWk5HdytCeVJpc2RxNVRZb0RzKzdjS1IrbFhObGRjTnlNU2JaY09OOUxHNWUvZ0cKZElHZTUzUlBpM1dnQSs5aFZXRnUvOW5oL2o4clBIZHhxemROR2dXdkZ6dGFNWmlYRURoalEyWis5TlhiVERwWgpBdmVEWVdqSXJxNUU1M2t6REY3Um81TVNiT3dUdTJzNW1IU1g2OEJ4NFpySnBtekxVOFRkQ2F4MS9OWFZFZ2thCmo2Tk1mTUV1WVNDWHFrakR2L0RTT0FtckE1em9NVFl3emNPOUR5WllXWDdoRXh0R3ZuNjJtaHJYTytzZ1d5MUcKUktBRUxxSUpQT2tFVVdHc2ZMNTdzZUhwTlRTbDRLRVJEVTdhR29RS2lINjdleG12TkFNQXdrdllsMVI5bUhYOQowM1A2UC9DWllqWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\'''
++ yaml-quote LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRERwM1cxb3liNzJWeUcKSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94UDBCSkxaSDkwR1publdXeUlBY2NDc1VPaFVNUjYraWt0ZjhOZ1N5dgoyTFZROWhwalA4eW5WMmxxSnVnK0xQTzZDejJraDV3TEYvTHVmNzV3M2FYb2c2VytiWndpUHpFUkJrMkFmaWdpCldMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSEJ1cGhOYnFEVUxGUXNoNndEclhQWWF0VGVCNnRtMnVLRDdnV3pWL2EKZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCcnlxNlEydHNkMmJZazEwQkdjSmJLRjFyUzFoalhYU3JpRnhMOGNBTApXQ0F2UXJtS3E5UURxVTF3em5nQVdrclJoclBWa3VXSldpYjFQcXlIR09wbWY2VHVYV0hydzZLdkE3aEFsK0JpCllEYjl6cVRqQWdNQkFBRUNnZ0VCQUk1UG51RzRRMkhLcjI3ck9VV1NIaDZUN056blp4TUU0UlFmaVJwQ2pJcnQKdDVQcllxRVpMbUJLeFlFVElGUTRnQmxvQTNiUzNpcS9lM2FJWlJIM2dDZ1N2dFExVTNxZnhDdDlYT1pFeU5pRQp2dTZldzlmUVdRQVZhRmpnY00wN1F1YnlHY2x0VVRBV0V6RXdYaWEwYmVoK0RrYVBMRGhqVmhaU0tXdkl6dkJXCjhaOENLYjlNa1hKMFdQTFlCSE8zZk5lZUNHRFk2ZVQ2eFpSQlZJNWUrVHppNEZySmdFdE51WHpJVVJnRmc5YmwKT1lMd1gzYTlwaEMzbjNlanVFT0toSXpDcVN1WWVRV0dBMEJweVV0YzAwdHRCaEcyVVpYVFVJWWRHdHZocWhoeQpFQmdOdWs4YjZTMTR4TW9GcUxFUnFYTXA4Tk5nelFCQzhRTEFwdWE4WWdFQ2dZRUErcmNwNHF5dmdXeEI0ZUhoCklYVngvVFJZYU1hOFRTaGtKcktoYkMwYjdzNmRnZWpGOUdIWThoUk5XSkNaNGloUlltTWs0cE1LNTI3clNaME4KSGV5RGZ2aXAwT2lBdTFsZGFaNFJ6VC9KREhYYXJva2toT3pDN2pwUG45bjAwMXkraVdNSit0UTBBUHVYUlFDSApkVFE5QWFnZXZ4RlpTUG9UbUNjRHZxeVZyZU1DZ1lFQXg4Y3d4cUdIQkVZU3FCUGlZVEdNc1dwQWsvcDAydUNOClNhTWlZVmhmci9icXJJdnBRSTViTUlleVRrdU5QMW96WVRZcVh2d0xXaXpBeXFxSHkxMXlyaDZSL1VZUzg1VFkKU2tGY2ExSk0xZHR1MHJUZ1dnNnRIckVLU0FTazFEaTZYVThjNE1pZ3p0SWg1WHZwRDBVZ01pNmJOTmRKVTE3bQpCQmdrNTVnMDNRRUNnWUVBdjZVakwxSXhGZzFhanYvS3gzaXZHWTNaeHIyalVwZDlkdGMwN1N2T0hrMXh1TXZtCkJWaUdMUVczMmVzdXRlRjcxR2xVMkp6dHlOclFvQVNjOGpMSWtWWWkrTDNCS1hTMkl2WGhSYk5zUzBvTFR6OGwKMnpYZ0M1b25JMW5IKzRqNVhLdUlCV1FRSEhBMHdWb1dNVkV0RVFjaCtZdVpaRjlFZXhuWGt2ajVzV0VDZ1lBOApVR3p2YXhEaVAyMmVoUEpSdWEzcVdsUEkyVkt5U2gwZDREeWUreGxZZk1sNDhueW5XdE01SVo2NWVLSGFRSmRHCmdCM21zMTJTQ2ZUaXV2MW9ibndUQ1hPMTdaUUhLaWJxdERUOHljb2N2clVFdEVzUHBXS3E0M1JoTGRXOXBLclAKUlBWSkFBbGNwNkJJTWxLNG8zd0c2bjg5UXNvR2U1NGlHay82QTcvaUFRS0JnUURXQmxlSnplTDlhRWkxU0xWQgpsWFhYbTRZR2UyeWhEUnFlY0w4em5NT3FLdEQ2VE9hcTlXMEZ6Ui96b3lDVkVBKytEYVdmMk9qTk4xSXl4TENTCjN1TmVlcTJwRVg3WVc0ZHFrQWpzSXRTL3hwZGgvdXV4Y1hzY0IyQ2lHQUM4bDVweE5WbmFHaUlXQzRvaGRFZ0cKN2JtN3FrMzZaQ21lZmwxaW5YdGp6SXVmMXc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRERwM1cxb3liNzJWeUcKSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94UDBCSkxaSDkwR1publdXeUlBY2NDc1VPaFVNUjYraWt0ZjhOZ1N5dgoyTFZROWhwalA4eW5WMmxxSnVnK0xQTzZDejJraDV3TEYvTHVmNzV3M2FYb2c2VytiWndpUHpFUkJrMkFmaWdpCldMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSEJ1cGhOYnFEVUxGUXNoNndEclhQWWF0VGVCNnRtMnVLRDdnV3pWL2EKZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCcnlxNlEydHNkMmJZazEwQkdjSmJLRjFyUzFoalhYU3JpRnhMOGNBTApXQ0F2UXJtS3E5UURxVTF3em5nQVdrclJoclBWa3VXSldpYjFQcXlIR09wbWY2VHVYV0hydzZLdkE3aEFsK0JpCllEYjl6cVRqQWdNQkFBRUNnZ0VCQUk1UG51RzRRMkhLcjI3ck9VV1NIaDZUN056blp4TUU0UlFmaVJwQ2pJcnQKdDVQcllxRVpMbUJLeFlFVElGUTRnQmxvQTNiUzNpcS9lM2FJWlJIM2dDZ1N2dFExVTNxZnhDdDlYT1pFeU5pRQp2dTZldzlmUVdRQVZhRmpnY00wN1F1YnlHY2x0VVRBV0V6RXdYaWEwYmVoK0RrYVBMRGhqVmhaU0tXdkl6dkJXCjhaOENLYjlNa1hKMFdQTFlCSE8zZk5lZUNHRFk2ZVQ2eFpSQlZJNWUrVHppNEZySmdFdE51WHpJVVJnRmc5YmwKT1lMd1gzYTlwaEMzbjNlanVFT0toSXpDcVN1WWVRV0dBMEJweVV0YzAwdHRCaEcyVVpYVFVJWWRHdHZocWhoeQpFQmdOdWs4YjZTMTR4TW9GcUxFUnFYTXA4Tk5nelFCQzhRTEFwdWE4WWdFQ2dZRUErcmNwNHF5dmdXeEI0ZUhoCklYVngvVFJZYU1hOFRTaGtKcktoYkMwYjdzNmRnZWpGOUdIWThoUk5XSkNaNGloUlltTWs0cE1LNTI3clNaME4KSGV5RGZ2aXAwT2lBdTFsZGFaNFJ6VC9KREhYYXJva2toT3pDN2pwUG45bjAwMXkraVdNSit0UTBBUHVYUlFDSApkVFE5QWFnZXZ4RlpTUG9UbUNjRHZxeVZyZU1DZ1lFQXg4Y3d4cUdIQkVZU3FCUGlZVEdNc1dwQWsvcDAydUNOClNhTWlZVmhmci9icXJJdnBRSTViTUlleVRrdU5QMW96WVRZcVh2d0xXaXpBeXFxSHkxMXlyaDZSL1VZUzg1VFkKU2tGY2ExSk0xZHR1MHJUZ1dnNnRIckVLU0FTazFEaTZYVThjNE1pZ3p0SWg1WHZwRDBVZ01pNmJOTmRKVTE3bQpCQmdrNTVnMDNRRUNnWUVBdjZVakwxSXhGZzFhanYvS3gzaXZHWTNaeHIyalVwZDlkdGMwN1N2T0hrMXh1TXZtCkJWaUdMUVczMmVzdXRlRjcxR2xVMkp6dHlOclFvQVNjOGpMSWtWWWkrTDNCS1hTMkl2WGhSYk5zUzBvTFR6OGwKMnpYZ0M1b25JMW5IKzRqNVhLdUlCV1FRSEhBMHdWb1dNVkV0RVFjaCtZdVpaRjlFZXhuWGt2ajVzV0VDZ1lBOApVR3p2YXhEaVAyMmVoUEpSdWEzcVdsUEkyVkt5U2gwZDREeWUreGxZZk1sNDhueW5XdE01SVo2NWVLSGFRSmRHCmdCM21zMTJTQ2ZUaXV2MW9ibndUQ1hPMTdaUUhLaWJxdERUOHljb2N2clVFdEVzUHBXS3E0M1JoTGRXOXBLclAKUlBWSkFBbGNwNkJJTWxLNG8zd0c2bjg5UXNvR2U1NGlHay82QTcvaUFRS0JnUURXQmxlSnplTDlhRWkxU0xWQgpsWFhYbTRZR2UyeWhEUnFlY0w4em5NT3FLdEQ2VE9hcTlXMEZ6Ui96b3lDVkVBKytEYVdmMk9qTk4xSXl4TENTCjN1TmVlcTJwRVg3WVc0ZHFrQWpzSXRTL3hwZGgvdXV4Y1hzY0IyQ2lHQUM4bDVweE5WbmFHaUlXQzRvaGRFZ0cKN2JtN3FrMzZaQ21lZmwxaW5YdGp6SXVmMXc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
++ echo ''\''LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRERwM1cxb3liNzJWeUcKSDREcmYzOEhiVzNQOVVmWGR0ZGpxVU94UDBCSkxaSDkwR1publdXeUlBY2NDc1VPaFVNUjYraWt0ZjhOZ1N5dgoyTFZROWhwalA4eW5WMmxxSnVnK0xQTzZDejJraDV3TEYvTHVmNzV3M2FYb2c2VytiWndpUHpFUkJrMkFmaWdpCldMUkVlYXlmNkdnZnZHUXFiR3RsRGpiSEJ1cGhOYnFEVUxGUXNoNndEclhQWWF0VGVCNnRtMnVLRDdnV3pWL2EKZjVPZ2xFakE4ajljSXJ3TGdGYnVJY2tCcnlxNlEydHNkMmJZazEwQkdjSmJLRjFyUzFoalhYU3JpRnhMOGNBTApXQ0F2UXJtS3E5UURxVTF3em5nQVdrclJoclBWa3VXSldpYjFQcXlIR09wbWY2VHVYV0hydzZLdkE3aEFsK0JpCllEYjl6cVRqQWdNQkFBRUNnZ0VCQUk1UG51RzRRMkhLcjI3ck9VV1NIaDZUN056blp4TUU0UlFmaVJwQ2pJcnQKdDVQcllxRVpMbUJLeFlFVElGUTRnQmxvQTNiUzNpcS9lM2FJWlJIM2dDZ1N2dFExVTNxZnhDdDlYT1pFeU5pRQp2dTZldzlmUVdRQVZhRmpnY00wN1F1YnlHY2x0VVRBV0V6RXdYaWEwYmVoK0RrYVBMRGhqVmhaU0tXdkl6dkJXCjhaOENLYjlNa1hKMFdQTFlCSE8zZk5lZUNHRFk2ZVQ2eFpSQlZJNWUrVHppNEZySmdFdE51WHpJVVJnRmc5YmwKT1lMd1gzYTlwaEMzbjNlanVFT0toSXpDcVN1WWVRV0dBMEJweVV0YzAwdHRCaEcyVVpYVFVJWWRHdHZocWhoeQpFQmdOdWs4YjZTMTR4TW9GcUxFUnFYTXA4Tk5nelFCQzhRTEFwdWE4WWdFQ2dZRUErcmNwNHF5dmdXeEI0ZUhoCklYVngvVFJZYU1hOFRTaGtKcktoYkMwYjdzNmRnZWpGOUdIWThoUk5XSkNaNGloUlltTWs0cE1LNTI3clNaME4KSGV5RGZ2aXAwT2lBdTFsZGFaNFJ6VC9KREhYYXJva2toT3pDN2pwUG45bjAwMXkraVdNSit0UTBBUHVYUlFDSApkVFE5QWFnZXZ4RlpTUG9UbUNjRHZxeVZyZU1DZ1lFQXg4Y3d4cUdIQkVZU3FCUGlZVEdNc1dwQWsvcDAydUNOClNhTWlZVmhmci9icXJJdnBRSTViTUlleVRrdU5QMW96WVRZcVh2d0xXaXpBeXFxSHkxMXlyaDZSL1VZUzg1VFkKU2tGY2ExSk0xZHR1MHJUZ1dnNnRIckVLU0FTazFEaTZYVThjNE1pZ3p0SWg1WHZwRDBVZ01pNmJOTmRKVTE3bQpCQmdrNTVnMDNRRUNnWUVBdjZVakwxSXhGZzFhanYvS3gzaXZHWTNaeHIyalVwZDlkdGMwN1N2T0hrMXh1TXZtCkJWaUdMUVczMmVzdXRlRjcxR2xVMkp6dHlOclFvQVNjOGpMSWtWWWkrTDNCS1hTMkl2WGhSYk5zUzBvTFR6OGwKMnpYZ0M1b25JMW5IKzRqNVhLdUlCV1FRSEhBMHdWb1dNVkV0RVFjaCtZdVpaRjlFZXhuWGt2ajVzV0VDZ1lBOApVR3p2YXhEaVAyMmVoUEpSdWEzcVdsUEkyVkt5U2gwZDREeWUreGxZZk1sNDhueW5XdE01SVo2NWVLSGFRSmRHCmdCM21zMTJTQ2ZUaXV2MW9ibndUQ1hPMTdaUUhLaWJxdERUOHljb2N2clVFdEVzUHBXS3E0M1JoTGRXOXBLclAKUlBWSkFBbGNwNkJJTWxLNG8zd0c2bjg5UXNvR2U1NGlHay82QTcvaUFRS0JnUURXQmxlSnplTDlhRWkxU0xWQgpsWFhYbTRZR2UyeWhEUnFlY0w4em5NT3FLdEQ2VE9hcTlXMEZ6Ui96b3lDVkVBKytEYVdmMk9qTk4xSXl4TENTCjN1TmVlcTJwRVg3WVc0ZHFrQWpzSXRTL3hwZGgvdXV4Y1hzY0IyQ2lHQUM4bDVweE5WbmFHaUlXQzRvaGRFZ0cKN2JtN3FrMzZaQ21lZmwxaW5YdGp6SXVmMXc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=='\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote false
+++ echo false
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''false'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote 2
+++ echo 2
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''2'\'''
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ [[ jessie == \c\o\r\e\o\s ]]
+ echo '#! /bin/bash'
+ echo 'mkdir -p /var/cache/kubernetes-install'
+ echo 'cd /var/cache/kubernetes-install'
+ echo 'cat > kube_env.yaml << __EOF_MASTER_KUBE_ENV_YAML'
+ cat /tmp/kubernetes.fZ0hhp/master-kube-env.yaml
+ echo 'AUTO_UPGRADE: '\''true'\'''
++ yaml-quote aufs
+++ echo aufs
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''aufs'\'''
+ echo 'DOCKER_STORAGE: '\''aufs'\'''
++ yaml-quote 172.20.0.9
+++ echo 172.20.0.9
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''172.20.0.9'\'''
+ echo 'API_SERVERS: '\''172.20.0.9'\'''
+ echo __EOF_MASTER_KUBE_ENV_YAML
+ echo ''
+ echo 'wget -O bootstrap https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/bootstrap-script'
+ echo 'chmod +x bootstrap'
+ echo 'mkdir -p /etc/kubernetes'
+ echo 'mv kube_env.yaml /etc/kubernetes'
+ echo 'mv bootstrap /etc/kubernetes/'
+ echo 'cat > /etc/rc.local << EOF_RC_LOCAL'
+ echo '#!/bin/sh -e'
+ echo /etc/kubernetes/bootstrap
+ echo 'exit 0'
+ echo EOF_RC_LOCAL
+ echo /etc/kubernetes/bootstrap
+ gzip /tmp/kubernetes.fZ0hhp/master-user-data
+ echo 'Starting Master'
Starting Master
++ aws ec2 run-instances --image-id ami-6c9ea606 --iam-instance-profile Name=kubernetes-master --instance-type m3.medium --subnet-id subnet-19aaf86f --private-ip-address 172.20.0.9 --key-name kubernetes-0d759b58db5b46fdfa447da66bf26c4f --security-group-ids sg-8bdc22f0 --associate-public-ip-address --block-device-mappings '[{"DeviceName":"/dev/xvda","Ebs":{"DeleteOnTermination":true,"VolumeSize":8,"VolumeType":"gp2"}} ,{"DeviceName": "/dev/sdc","VirtualName":"ephemeral0"},{"DeviceName": "/dev/sdd","VirtualName":"ephemeral1"},{"DeviceName": "/dev/sde","VirtualName":"ephemeral2"},{"DeviceName": "/dev/sdf","VirtualName":"ephemeral3"}]' --user-data fileb:///tmp/kubernetes.fZ0hhp/master-user-data.gz --query 'Instances[].InstanceId'
+ master_id=i-688ff5ef
+ add-tag i-688ff5ef Name kubernetes-master
+ echo 'Adding tag to i-688ff5ef: Name=kubernetes-master'
Adding tag to i-688ff5ef: Name=kubernetes-master
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources i-688ff5ef --tags Key=Name,Value=kubernetes-master
+ return
+ add-tag i-688ff5ef Role kubernetes-master
+ echo 'Adding tag to i-688ff5ef: Role=kubernetes-master'
Adding tag to i-688ff5ef: Role=kubernetes-master
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources i-688ff5ef --tags Key=Role,Value=kubernetes-master
+ return
+ add-tag i-688ff5ef KubernetesCluster kubernetes
+ echo 'Adding tag to i-688ff5ef: KubernetesCluster=kubernetes'
Adding tag to i-688ff5ef: KubernetesCluster=kubernetes
+ n=0
+ '[' 0 -ge 25 ']'
+ aws ec2 create-tags --resources i-688ff5ef --tags Key=KubernetesCluster,Value=kubernetes
+ return
+ echo 'Waiting for master to be ready'
Waiting for master to be ready
+ local attempt=0
+ true
+ echo -n Attempt 1 to check for master node
Attempt 1 to check for master node++ get_instance_public_ip i-688ff5ef
++ local instance_id=i-688ff5ef
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].NetworkInterfaces[0].Association.PublicIp'
+ local ip=54.197.2.31
+ [[ -z 54.197.2.31 ]]
+ wait-for-instance-state i-688ff5ef running
+ instance_id=i-688ff5ef
+ state=running
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=pending
+ [[ pending == \r\u\n\n\i\n\g ]]
+ echo 'Waiting for instance i-688ff5ef to be running (currently pending)'
Waiting for instance i-688ff5ef to be running (currently pending)
+ echo 'Sleeping for 3 seconds...'
Sleeping for 3 seconds...
+ sleep 3
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=pending
+ [[ pending == \r\u\n\n\i\n\g ]]
+ echo 'Waiting for instance i-688ff5ef to be running (currently pending)'
Waiting for instance i-688ff5ef to be running (currently pending)
+ echo 'Sleeping for 3 seconds...'
Sleeping for 3 seconds...
+ sleep 3
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=pending
+ [[ pending == \r\u\n\n\i\n\g ]]
+ echo 'Waiting for instance i-688ff5ef to be running (currently pending)'
Waiting for instance i-688ff5ef to be running (currently pending)
+ echo 'Sleeping for 3 seconds...'
Sleeping for 3 seconds...
+ sleep 3
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=pending
+ [[ pending == \r\u\n\n\i\n\g ]]
+ echo 'Waiting for instance i-688ff5ef to be running (currently pending)'
Waiting for instance i-688ff5ef to be running (currently pending)
+ echo 'Sleeping for 3 seconds...'
Sleeping for 3 seconds...
+ sleep 3
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=pending
+ [[ pending == \r\u\n\n\i\n\g ]]
+ echo 'Waiting for instance i-688ff5ef to be running (currently pending)'
Waiting for instance i-688ff5ef to be running (currently pending)
+ echo 'Sleeping for 3 seconds...'
Sleeping for 3 seconds...
+ sleep 3
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=pending
+ [[ pending == \r\u\n\n\i\n\g ]]
+ echo 'Waiting for instance i-688ff5ef to be running (currently pending)'
Waiting for instance i-688ff5ef to be running (currently pending)
+ echo 'Sleeping for 3 seconds...'
Sleeping for 3 seconds...
+ sleep 3
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=pending
+ [[ pending == \r\u\n\n\i\n\g ]]
+ echo 'Waiting for instance i-688ff5ef to be running (currently pending)'
Waiting for instance i-688ff5ef to be running (currently pending)
+ echo 'Sleeping for 3 seconds...'
Sleeping for 3 seconds...
+ sleep 3
+ true
++ aws ec2 describe-instances --instance-ids i-688ff5ef --query 'Reservations[].Instances[].State.Name'
+ instance_state=running
+ [[ running == \r\u\n\n\i\n\g ]]
+ break
+ KUBE_MASTER=kubernetes-master
+ echo -e ' \033[0;32m[master running]\033[0m'
 [master running]
+ attach-ip-to-instance 52.202.226.173 i-688ff5ef
+ local ip_address=52.202.226.173
+ local instance_id=i-688ff5ef
++ aws ec2 describe-addresses --public-ips 52.202.226.173 --query 'Addresses[].AllocationId'
+ local elastic_ip_allocation_id=eipalloc-cf6f19a9
+ echo 'Attaching IP 52.202.226.173 to instance i-688ff5ef'
Attaching IP 52.202.226.173 to instance i-688ff5ef
+ aws ec2 associate-address --instance-id i-688ff5ef --allocation-id eipalloc-cf6f19a9
+ echo 'Attaching persistent data volume (vol-dd1ac876) to master'
Attaching persistent data volume (vol-dd1ac876) to master
+ aws ec2 attach-volume --volume-id vol-dd1ac876 --device /dev/sdb --instance-id i-688ff5ef
2016-05-06T18:15:27.410Z        /dev/sdb        i-688ff5ef      attaching       vol-dd1ac876
+ sleep 10
+ aws ec2 create-route --route-table-id rtb-84e795e3 --destination-cidr-block 10.246.0.0/24 --instance-id i-688ff5ef
+ break
+ build-config
+ export KUBE_CERT=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubecfg.crt
+ KUBE_CERT=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubecfg.crt
+ export KUBE_KEY=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubecfg.key
+ KUBE_KEY=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubecfg.key
+ export CA_CERT=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/ca.crt
+ CA_CERT=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/ca.crt
+ export CONTEXT=aws_kubernetes
+ CONTEXT=aws_kubernetes
+ umask 077
+ create-kubeconfig
+ local kubectl=./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh
+ export KUBECONFIG=/home/virginia/.kube/config
+ KUBECONFIG=/home/virginia/.kube/config
+ [[ ! -e /home/virginia/.kube/config ]]
++ dirname /home/virginia/.kube/config
+ mkdir -p /home/virginia/.kube
+ touch /home/virginia/.kube/config
+ cluster_args=("--server=${KUBE_SERVER:-https://${KUBE_MASTER_IP}}")
+ local cluster_args
+ [[ -z /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/ca.crt ]]
+ cluster_args+=("--certificate-authority=${CA_CERT}" "--embed-certs=true")
+ user_args=()
+ local user_args
+ [[ ! -z iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1 ]]
+ user_args+=("--token=${KUBE_BEARER_TOKEN}")
+ [[ ! -z /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubecfg.crt ]]
+ [[ ! -z /tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubecfg.key ]]
+ user_args+=("--client-certificate=${KUBE_CERT}" "--client-key=${KUBE_KEY}" "--embed-certs=true")
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config set-cluster aws_kubernetes --server=https://52.202.226.173 --certificate-authority=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/ca.crt --embed-certs=true
cluster "aws_kubernetes" set.
+ [[ -n --token=iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1 --client-certificate=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubecfg.crt --client-key=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubecfg.key --embed-certs=true ]]
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config set-credentials aws_kubernetes --token=iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1 --client-certificate=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/issued/kubecfg.crt --client-key=/tmp/kubernetes.fZ0hhp/easy-rsa-master/easyrsa3/pki/private/kubecfg.key --embed-certs=true
user "aws_kubernetes" set.
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config set-context aws_kubernetes --cluster=aws_kubernetes --user=aws_kubernetes
context "aws_kubernetes" set.
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config use-context aws_kubernetes --cluster=aws_kubernetes
switched to context "aws_kubernetes".
+ [[ ! -z iWdPYMW4CHtXIOxfITGJBvmZpGxotiZ1 ]]
+ [[ ! -z admin ]]
+ [[ ! -z VOpgP0Ggnty5mLcq ]]
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config set-credentials aws_kubernetes-basic-auth --username=admin --password=VOpgP0Ggnty5mLcq
user "aws_kubernetes-basic-auth" set.
+ echo 'Wrote config for aws_kubernetes to /home/virginia/.kube/config'
Wrote config for aws_kubernetes to /home/virginia/.kube/config
+ start-minions
+ build-runtime-config
+ :
+ echo 'Creating minion configuration'
Creating minion configuration
+ write-node-env
+ build-kube-env false /tmp/kubernetes.fZ0hhp/node-kube-env.yaml
+ local master=false
+ local file=/tmp/kubernetes.fZ0hhp/node-kube-env.yaml
+ build-runtime-config
+ :
+ rm -f /tmp/kubernetes.fZ0hhp/node-kube-env.yaml
+ cat
+++ date -u +%Y-%m-%dT%T%z
++ yaml-quote 2016-05-06T18:15:38+0000
+++ echo 2016-05-06T18:15:38+0000
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''2016-05-06T18:15:38+0000'\'''
++ yaml-quote kubernetes
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo kubernetes
++ echo ''\''kubernetes'\'''
++ yaml-quote kubernetes-minion
+++ echo kubernetes-minion
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''kubernetes-minion'\'''
++ yaml-quote 10.244.0.0/16
+++ echo 10.244.0.0/16
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.244.0.0/16'\'''
++ yaml-quote https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz
+++ echo https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-server-linux-amd64.tar.gz'\'''
++ yaml-quote 86c63983a1a1da3f1ec76e1914964e8a42fba244
+++ echo 86c63983a1a1da3f1ec76e1914964e8a42fba244
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''86c63983a1a1da3f1ec76e1914964e8a42fba244'\'''
++ yaml-quote https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz
+++ echo https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/kubernetes-salt.tar.gz'\'''
++ yaml-quote 246074805c38dad8774a027a97201cf2bb33b1d4
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo 246074805c38dad8774a027a97201cf2bb33b1d4
++ echo ''\''246074805c38dad8774a027a97201cf2bb33b1d4'\'''
++ yaml-quote 10.0.0.0/16
+++ echo 10.0.0.0/16
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.0.0.0/16'\'''
++ yaml-quote kubernetes-master
+++ echo kubernetes-master
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''kubernetes-master'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote influxdb
+++ echo influxdb
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''influxdb'\'''
++ yaml-quote none
+++ echo none
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''none'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote elasticsearch
+++ echo elasticsearch
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''elasticsearch'\'''
++ yaml-quote 1
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo 1
++ echo ''\''1'\'''
++ yaml-quote true
+++ echo true
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''true'\'''
++ yaml-quote false
+++ echo false
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''false'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote 1
+++ echo 1
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''1'\'''
++ yaml-quote 10.0.0.10
+++ echo 10.0.0.10
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.0.0.10'\'''
++ yaml-quote cluster.local
+++ echo cluster.local
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''cluster.local'\'''
++ yaml-quote lvAIUZkjSBoanj8FNhz2MBIfDsRjjoGJ
+++ echo lvAIUZkjSBoanj8FNhz2MBIfDsRjjoGJ
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''lvAIUZkjSBoanj8FNhz2MBIfDsRjjoGJ'\'''
++ yaml-quote MJmB5b3RngOUFJjfdhkYnZhC2MDD8Oqs
+++ echo MJmB5b3RngOUFJjfdhkYnZhC2MDD8Oqs
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''MJmB5b3RngOUFJjfdhkYnZhC2MDD8Oqs'\'''
++ yaml-quote NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel
+++ echo NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel'\'''
++ yaml-quote 10.246.0.0/24
+++ echo 10.246.0.0/24
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.246.0.0/24'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lKQUxEL0tLYUs2dzMvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ1F4SWpBZ0JnTlYKQkFNVUdUVXlMakl3TWk0eU1qWXVNVGN6UURFME5qSTFOVGcwT0RZd0hoY05NVFl3TlRBMk1UZ3hORFEyV2hjTgpNall3TlRBME1UZ3hORFEyV2pBa01TSXdJQVlEVlFRREZCazFNaTR5TURJdU1qSTJMakUzTTBBeE5EWXlOVFU0Ck5EZzJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBGNHRzNjA1YW13bkJFOEsKVG9TUHdiTUZSUldQdUtoc21WTDIveUp3UUxRM3dQNWNXN1dzc3pOcFhES2NXYUprT2d4OG9LN0VRY28zaVBlQQpNZ1NNRkNMMHJaa3VZcW9aRWkvT3FvUmRrM05tNGxSbGNXN0NpTWorZjQ5Qk9Wd2NDcHBjb1VYbkUyTGgydlpnCktLMERDaGtUOUVjKzVtMndKNDB2dmNWUW44UmZwUStVY05Db2pGanVhRHpSUnQyWjhtMVM1aHJGTGpNV2E3ck0KWC8yV3hYekozSXN4bFBMRTB5QnhjOFFHR1Bqb3NLZUZRVW1MbTlYQ2JNbEpCQXNldkJVV3RZNUtJRFZpNHRVQQpMUFdlRGlZYjRtRGFITmhWb0xodVRDSndMWlUvZGJ5NjlCajNYdkhYNjk2WlRDeUV6a2RWSjFwZ0RjdXlaRXhICnpkUkxIUUlEQVFBQm80R1RNSUdRTUIwR0ExVWREZ1FXQkJUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGV6QlUKQmdOVkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWgpOVEl1TWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQXdHQTFVZEV3UUZNQU1CCkFmOHdDd1lEVlIwUEJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHVNbW9wRkV6MFpXTkJpc1YKS3VZNXZNUEhUNVh4U29pbXJJQk9tSjNGMk1odmF2WHNURVJYY1NKbUhxeUVXejdvellkZ2NyRWM2K0dBVUx3dwpaV1BrOTdZUkxHTUxGbjJMZTdBbFFyV1RxQVFsRkhDQWxKK0o0MnJ5SFIwdkE0dU1mYlczQ1ZuVmlodGJnekVRCnhUTm1GMUdTMXl4bFcxcjdJT1NTbEdKTlNEVUtzMDdaTVFvbjFIUC9oOEpZUE9TZVpVb2JaZGhZQ3FTYS85MXcKS2YrU3RheG9wSWM3T2lJR0YzU0UxUWY2dG5RVTVZdUVjdWxyMW5vQkF4L2JaRW4yckUrNWtrYWtjRUlSUUNCNgpQRnJLNWRCS1dkR0QyQkNLZTMzQ1V3KzJzWXNWakpDSjVSbTJjYWpEQmdTK1RVU2dvN3lyR3gxN2Zhb0RORTRUCkUyc0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lKQUxEL0tLYUs2dzMvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ1F4SWpBZ0JnTlYKQkFNVUdUVXlMakl3TWk0eU1qWXVNVGN6UURFME5qSTFOVGcwT0RZd0hoY05NVFl3TlRBMk1UZ3hORFEyV2hjTgpNall3TlRBME1UZ3hORFEyV2pBa01TSXdJQVlEVlFRREZCazFNaTR5TURJdU1qSTJMakUzTTBBeE5EWXlOVFU0Ck5EZzJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBGNHRzNjA1YW13bkJFOEsKVG9TUHdiTUZSUldQdUtoc21WTDIveUp3UUxRM3dQNWNXN1dzc3pOcFhES2NXYUprT2d4OG9LN0VRY28zaVBlQQpNZ1NNRkNMMHJaa3VZcW9aRWkvT3FvUmRrM05tNGxSbGNXN0NpTWorZjQ5Qk9Wd2NDcHBjb1VYbkUyTGgydlpnCktLMERDaGtUOUVjKzVtMndKNDB2dmNWUW44UmZwUStVY05Db2pGanVhRHpSUnQyWjhtMVM1aHJGTGpNV2E3ck0KWC8yV3hYekozSXN4bFBMRTB5QnhjOFFHR1Bqb3NLZUZRVW1MbTlYQ2JNbEpCQXNldkJVV3RZNUtJRFZpNHRVQQpMUFdlRGlZYjRtRGFITmhWb0xodVRDSndMWlUvZGJ5NjlCajNYdkhYNjk2WlRDeUV6a2RWSjFwZ0RjdXlaRXhICnpkUkxIUUlEQVFBQm80R1RNSUdRTUIwR0ExVWREZ1FXQkJUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGV6QlUKQmdOVkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWgpOVEl1TWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQXdHQTFVZEV3UUZNQU1CCkFmOHdDd1lEVlIwUEJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHVNbW9wRkV6MFpXTkJpc1YKS3VZNXZNUEhUNVh4U29pbXJJQk9tSjNGMk1odmF2WHNURVJYY1NKbUhxeUVXejdvellkZ2NyRWM2K0dBVUx3dwpaV1BrOTdZUkxHTUxGbjJMZTdBbFFyV1RxQVFsRkhDQWxKK0o0MnJ5SFIwdkE0dU1mYlczQ1ZuVmlodGJnekVRCnhUTm1GMUdTMXl4bFcxcjdJT1NTbEdKTlNEVUtzMDdaTVFvbjFIUC9oOEpZUE9TZVpVb2JaZGhZQ3FTYS85MXcKS2YrU3RheG9wSWM3T2lJR0YzU0UxUWY2dG5RVTVZdUVjdWxyMW5vQkF4L2JaRW4yckUrNWtrYWtjRUlSUUNCNgpQRnJLNWRCS1dkR0QyQkNLZTMzQ1V3KzJzWXNWakpDSjVSbTJjYWpEQmdTK1RVU2dvN3lyR3gxN2Zhb0RORTRUCkUyc0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
++ echo ''\''LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lKQUxEL0tLYUs2dzMvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ1F4SWpBZ0JnTlYKQkFNVUdUVXlMakl3TWk0eU1qWXVNVGN6UURFME5qSTFOVGcwT0RZd0hoY05NVFl3TlRBMk1UZ3hORFEyV2hjTgpNall3TlRBME1UZ3hORFEyV2pBa01TSXdJQVlEVlFRREZCazFNaTR5TURJdU1qSTJMakUzTTBBeE5EWXlOVFU0Ck5EZzJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBGNHRzNjA1YW13bkJFOEsKVG9TUHdiTUZSUldQdUtoc21WTDIveUp3UUxRM3dQNWNXN1dzc3pOcFhES2NXYUprT2d4OG9LN0VRY28zaVBlQQpNZ1NNRkNMMHJaa3VZcW9aRWkvT3FvUmRrM05tNGxSbGNXN0NpTWorZjQ5Qk9Wd2NDcHBjb1VYbkUyTGgydlpnCktLMERDaGtUOUVjKzVtMndKNDB2dmNWUW44UmZwUStVY05Db2pGanVhRHpSUnQyWjhtMVM1aHJGTGpNV2E3ck0KWC8yV3hYekozSXN4bFBMRTB5QnhjOFFHR1Bqb3NLZUZRVW1MbTlYQ2JNbEpCQXNldkJVV3RZNUtJRFZpNHRVQQpMUFdlRGlZYjRtRGFITmhWb0xodVRDSndMWlUvZGJ5NjlCajNYdkhYNjk2WlRDeUV6a2RWSjFwZ0RjdXlaRXhICnpkUkxIUUlEQVFBQm80R1RNSUdRTUIwR0ExVWREZ1FXQkJUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGV6QlUKQmdOVkhTTUVUVEJMZ0JUc2RMN280MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWgpOVEl1TWpBeUxqSXlOaTR4TnpOQU1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQXdHQTFVZEV3UUZNQU1CCkFmOHdDd1lEVlIwUEJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHVNbW9wRkV6MFpXTkJpc1YKS3VZNXZNUEhUNVh4U29pbXJJQk9tSjNGMk1odmF2WHNURVJYY1NKbUhxeUVXejdvellkZ2NyRWM2K0dBVUx3dwpaV1BrOTdZUkxHTUxGbjJMZTdBbFFyV1RxQVFsRkhDQWxKK0o0MnJ5SFIwdkE0dU1mYlczQ1ZuVmlodGJnekVRCnhUTm1GMUdTMXl4bFcxcjdJT1NTbEdKTlNEVUtzMDdaTVFvbjFIUC9oOEpZUE9TZVpVb2JaZGhZQ3FTYS85MXcKS2YrU3RheG9wSWM3T2lJR0YzU0UxUWY2dG5RVTVZdUVjdWxyMW5vQkF4L2JaRW4yckUrNWtrYWtjRUlSUUNCNgpQRnJLNWRCS1dkR0QyQkNLZTMzQ1V3KzJzWXNWakpDSjVSbTJjYWpEQmdTK1RVU2dvN3lyR3gxN2Zhb0RORTRUCkUyc0EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='\'''
++ yaml-quote Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAyICgweDIpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlbGV0CiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmQyOjM1OjY4OjRkOjJmOjcwOjdmOmU3OmU0OmJmOjUyOmIwOjYxOmFlOgogICAgICAgICAgICAgICAgICAgIGYyOmVmOmFhOjU4Ojg4OjA0OjZhOmFmOmIyOjZhOjA5OjNhOjBmOjZkOmIyOgogICAgICAgICAgICAgICAgICAgIDkzOmIzOmZhOjBhOjU2OmQ5OjdjOmEzOjBkOjQ0OjgwOmUxOmU3OjExOjg4OgogICAgICAgICAgICAgICAgICAgIDA3OmE0OjNhOmM0OjkwOmI1OmEyOjYyOjg0OmM1OmNmOmE2OmVhOjJmOjI3OgogICAgICAgICAgICAgICAgICAgIDFiOjU3OmFiOmFlOjgzOmNlOjhjOjNhOmI2OjdlOjBlOjA2OjhkOjQ5OjAzOgogICAgICAgICAgICAgICAgICAgIDZlOmFkOjdhOmQ0OmFiOmJhOjg5OmU0OmE4OjJlOjMwOmVlOjdmOjFmOjdiOgogICAgICAgICAgICAgICAgICAgIDFjOmE5OmJkOjcyOjk4OmFjOjU3OmI3OjQ2OmI2OmRhOjVhOmM4OmE2OjY5OgogICAgICAgICAgICAgICAgICAgIGY4OjU2OjkxOjc3OjQ4OmNmOjJhOmVjOjYwOjlmOjUxOjQ5OmEzOjA0OjY2OgogICAgICAgICAgICAgICAgICAgIGUzOmQ3Ojg2OjkyOjY1OjQ3OmQ5OjhmOmViOmU5OjA5OjZhOjE4OjI3OjEwOgogICAgICAgICAgICAgICAgICAgIDdhOjlhOjFmOmQwOjE4OjkwOjk5OmVjOjAzOjFiOmMxOjhlOmFiOjI1OjQwOgogICAgICAgICAgICAgICAgICAgIDNmOmZlOmJiOjU4OjY2OjkxOjEwOjcxOmU3OjQzOjM4OjYyOjkzOmMwOjczOgogICAgICAgICAgICAgICAgICAgIDM3OmRmOjg5Ojc2OmIzOjdkOmY2OjYxOjMxOmEwOmNjOjU4OmU4OmNhOmFiOgogICAgICAgICAgICAgICAgICAgIDE4Ojk2OjRjOmU3OmY3OjYwOmQ0OmZiOmNjOjBjOmM0OjZjOjBmOjgzOjBmOgogICAgICAgICAgICAgICAgICAgIDc3OjE1OmE1OmM5OmU4OjRhOjI2OjkyOjMyOmIzOjYzOmFlOjQwOmQ1OmQ2OgogICAgICAgICAgICAgICAgICAgIDhmOjllOmFjOmJiOjc2OjI4OmFmOjY0OjA5OjE5OmNlOjk4OjNmOmZkOjMzOgogICAgICAgICAgICAgICAgICAgIDU0OjM1OmMxOjAwOjIxOmVlOjQxOjBmOmRkOjY0OmFmOjBjOjIyOjc5OjIwOgogICAgICAgICAgICAgICAgICAgIDYxOjkwOjllOjkyOmY1OmFkOjQ0OjNlOjlmOmRkOjFkOjU5OjJlOjQyOjMyOgogICAgICAgICAgICAgICAgICAgIDQyOjQzCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBFMzpDNzpFRDpEMjo5Nzo2NjpCNzo2RToxMTozMDo5QTo2QzpDQjoxQjo3RDoxQzpBQTo2NTo4MTo5NgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjk6ZGU6Y2Y6Y2M6ZjY6YTQ6YjM6MTY6MDQ6NzA6OWE6NDM6ZTc6ZGQ6Mzg6MmQ6OTc6MzU6CiAgICAgICAgIDhhOjhkOjA5OjcxOjRkOjIyOjVkOmY5OjcxOjAxOmYwOjJiOjVhOmIzOjgzOmY5OjgzOmEzOgogICAgICAgICA1Yjo3ODoxNDo0MDo2NTpmNDo3Njo1MDphNjpmMjo0YzpjZjphZjo3YTo1NDpkMTo5Yjo3ODoKICAgICAgICAgNTk6YWI6ODI6YzM6MGI6YWE6ZGY6ODU6YTE6YzA6ZDc6Zjk6YjM6NjM6Mzk6OWI6ZmU6ZTQ6CiAgICAgICAgIDFhOjNiOmJhOjBlOjNmOjQ1OmQ5OmVkOmRhOmU1OjdjOjVlOmZiOjI0OjQwOjUzOmM4OjYwOgogICAgICAgICBkYzpkNjozMzphNTo5NDowZjo2MzowZDo4MzpmMjpiYzo3ZjoyYzphODphYTpjODowMToxOToKICAgICAgICAgY2I6ODE6Yjk6NGU6YmM6Mzg6MmI6NGM6Mzg6OWU6OGM6YTk6ZTQ6NDI6ODE6MGI6YTc6Y2Y6CiAgICAgICAgIDJmOmQ2OmRmOjk2OjU5OmYyOjk2OjI2OmNiOmRmOjcxOjNhOjFmOjkxOjM3OjA4OmY4Ojk5OgogICAgICAgICAyZTpkZjplYTo5NjpmNzpmODo0YjpjOTo2MTplZjo2NzphMDo5ZDoxZjozODo4MDowODozZToKICAgICAgICAgNjI6ODU6NGE6NTg6OWM6ZTE6ZTI6NDM6N2Y6NWY6Yzk6MDA6ZjM6MGE6OTM6MjU6N2M6MTc6CiAgICAgICAgIGI5OjI3Ojc0OmQ2OmMxOmM5OmRhOjJmOjI0OmNiOjQ0OmY3OjY1OmEzOmQxOmI0OjVmOmE3OgogICAgICAgICBjYjoyNTo3ZjpmNzo1Mjo0Yzo3Mjo2NjpmNzphMDozMTpmYzpiMTo2NzpkMTo5MzoxMDpmNjoKICAgICAgICAgOTg6MGE6NmQ6NjE6OTI6ZTg6NTc6MDc6MWE6N2I6NTY6YjI6ZDM6ZmI6YWU6MDI6YjI6MzI6CiAgICAgICAgIDJmOmYxOjAxOjY3OmI2OjFkOmVlOjkyOjI0OmMwOmE1OmZjOjYwOjBlOmI5OjQ5OjNjOjExOgogICAgICAgICAzNToxNzo5NTpmZgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBakFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV3hsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5JMWFFMHZjSC9uNUw5U3NHR3U4dStxV0lnRWFxK3lhZ2s2RDIyeWs3UDZDbGJaZktNTgpSSURoNXhHSUI2UTZ4SkMxb21LRXhjK202aThuRzFlcnJvUE9qRHEyZmc0R2pVa0RicTE2MUt1NmllU29MakR1CmZ4OTdIS205Y3Bpc1Y3ZEd0dHBheUtacCtGYVJkMGpQS3V4Z24xRkpvd1JtNDllR2ttVkgyWS9yNlFscUdDY1EKZXBvZjBCaVFtZXdERzhHT3F5VkFQLzY3V0dhUkVISG5RemhpazhCek45K0pkck45OW1FeG9NeFk2TXFyR0paTQo1L2RnMVB2TURNUnNENE1QZHhXbHllaEtKcEl5czJPdVFOWFdqNTZzdTNZb3IyUUpHYzZZUC8welZEWEJBQ0h1ClFRL2RaSzhNSW5rZ1laQ2Vrdld0UkQ2ZjNSMVpMa0l5UWtNQ0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJUangrM1NsMmEzYmhFd21tekxHMzBjcW1XQmxqQlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYWQ3UHpQYWtzeFlFY0pwRDU5MDRMWmMxaW8wSgpjVTBpWGZseEFmQXJXck9EK1lPalczZ1VRR1gwZGxDbThrelByM3BVMFp0NFdhdUN3d3VxMzRXaHdOZjVzMk01Cm0vN2tHanU2RGo5RjJlM2E1WHhlK3lSQVU4aGczTll6cFpRUFl3MkQ4cngvTEtpcXlBRVp5NEc1VHJ3NEswdzQKbm95cDVFS0JDNmZQTDliZmxsbnlsaWJMMzNFNkg1RTNDUGlaTHQvcWx2ZjRTOGxoNzJlZ25SODRnQWcrWW9WSwpXSnpoNGtOL1g4a0E4d3FUSlh3WHVTZDAxc0hKMmk4a3kwVDNaYVBSdEYrbnl5Vi85MUpNY21iM29ESDhzV2ZSCmt4RDJtQXB0WVpMb1Z3Y2FlMWF5MC91dUFySXlML0VCWjdZZDdwSWt3S1g4WUE2NVNUd1JOUmVWL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAyICgweDIpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlbGV0CiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmQyOjM1OjY4OjRkOjJmOjcwOjdmOmU3OmU0OmJmOjUyOmIwOjYxOmFlOgogICAgICAgICAgICAgICAgICAgIGYyOmVmOmFhOjU4Ojg4OjA0OjZhOmFmOmIyOjZhOjA5OjNhOjBmOjZkOmIyOgogICAgICAgICAgICAgICAgICAgIDkzOmIzOmZhOjBhOjU2OmQ5OjdjOmEzOjBkOjQ0OjgwOmUxOmU3OjExOjg4OgogICAgICAgICAgICAgICAgICAgIDA3OmE0OjNhOmM0OjkwOmI1OmEyOjYyOjg0OmM1OmNmOmE2OmVhOjJmOjI3OgogICAgICAgICAgICAgICAgICAgIDFiOjU3OmFiOmFlOjgzOmNlOjhjOjNhOmI2OjdlOjBlOjA2OjhkOjQ5OjAzOgogICAgICAgICAgICAgICAgICAgIDZlOmFkOjdhOmQ0OmFiOmJhOjg5OmU0OmE4OjJlOjMwOmVlOjdmOjFmOjdiOgogICAgICAgICAgICAgICAgICAgIDFjOmE5OmJkOjcyOjk4OmFjOjU3OmI3OjQ2OmI2OmRhOjVhOmM4OmE2OjY5OgogICAgICAgICAgICAgICAgICAgIGY4OjU2OjkxOjc3OjQ4OmNmOjJhOmVjOjYwOjlmOjUxOjQ5OmEzOjA0OjY2OgogICAgICAgICAgICAgICAgICAgIGUzOmQ3Ojg2OjkyOjY1OjQ3OmQ5OjhmOmViOmU5OjA5OjZhOjE4OjI3OjEwOgogICAgICAgICAgICAgICAgICAgIDdhOjlhOjFmOmQwOjE4OjkwOjk5OmVjOjAzOjFiOmMxOjhlOmFiOjI1OjQwOgogICAgICAgICAgICAgICAgICAgIDNmOmZlOmJiOjU4OjY2OjkxOjEwOjcxOmU3OjQzOjM4OjYyOjkzOmMwOjczOgogICAgICAgICAgICAgICAgICAgIDM3OmRmOjg5Ojc2OmIzOjdkOmY2OjYxOjMxOmEwOmNjOjU4OmU4OmNhOmFiOgogICAgICAgICAgICAgICAgICAgIDE4Ojk2OjRjOmU3OmY3OjYwOmQ0OmZiOmNjOjBjOmM0OjZjOjBmOjgzOjBmOgogICAgICAgICAgICAgICAgICAgIDc3OjE1OmE1OmM5OmU4OjRhOjI2OjkyOjMyOmIzOjYzOmFlOjQwOmQ1OmQ2OgogICAgICAgICAgICAgICAgICAgIDhmOjllOmFjOmJiOjc2OjI4OmFmOjY0OjA5OjE5OmNlOjk4OjNmOmZkOjMzOgogICAgICAgICAgICAgICAgICAgIDU0OjM1OmMxOjAwOjIxOmVlOjQxOjBmOmRkOjY0OmFmOjBjOjIyOjc5OjIwOgogICAgICAgICAgICAgICAgICAgIDYxOjkwOjllOjkyOmY1OmFkOjQ0OjNlOjlmOmRkOjFkOjU5OjJlOjQyOjMyOgogICAgICAgICAgICAgICAgICAgIDQyOjQzCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBFMzpDNzpFRDpEMjo5Nzo2NjpCNzo2RToxMTozMDo5QTo2QzpDQjoxQjo3RDoxQzpBQTo2NTo4MTo5NgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjk6ZGU6Y2Y6Y2M6ZjY6YTQ6YjM6MTY6MDQ6NzA6OWE6NDM6ZTc6ZGQ6Mzg6MmQ6OTc6MzU6CiAgICAgICAgIDhhOjhkOjA5OjcxOjRkOjIyOjVkOmY5OjcxOjAxOmYwOjJiOjVhOmIzOjgzOmY5OjgzOmEzOgogICAgICAgICA1Yjo3ODoxNDo0MDo2NTpmNDo3Njo1MDphNjpmMjo0YzpjZjphZjo3YTo1NDpkMTo5Yjo3ODoKICAgICAgICAgNTk6YWI6ODI6YzM6MGI6YWE6ZGY6ODU6YTE6YzA6ZDc6Zjk6YjM6NjM6Mzk6OWI6ZmU6ZTQ6CiAgICAgICAgIDFhOjNiOmJhOjBlOjNmOjQ1OmQ5OmVkOmRhOmU1OjdjOjVlOmZiOjI0OjQwOjUzOmM4OjYwOgogICAgICAgICBkYzpkNjozMzphNTo5NDowZjo2MzowZDo4MzpmMjpiYzo3ZjoyYzphODphYTpjODowMToxOToKICAgICAgICAgY2I6ODE6Yjk6NGU6YmM6Mzg6MmI6NGM6Mzg6OWU6OGM6YTk6ZTQ6NDI6ODE6MGI6YTc6Y2Y6CiAgICAgICAgIDJmOmQ2OmRmOjk2OjU5OmYyOjk2OjI2OmNiOmRmOjcxOjNhOjFmOjkxOjM3OjA4OmY4Ojk5OgogICAgICAgICAyZTpkZjplYTo5NjpmNzpmODo0YjpjOTo2MTplZjo2NzphMDo5ZDoxZjozODo4MDowODozZToKICAgICAgICAgNjI6ODU6NGE6NTg6OWM6ZTE6ZTI6NDM6N2Y6NWY6Yzk6MDA6ZjM6MGE6OTM6MjU6N2M6MTc6CiAgICAgICAgIGI5OjI3Ojc0OmQ2OmMxOmM5OmRhOjJmOjI0OmNiOjQ0OmY3OjY1OmEzOmQxOmI0OjVmOmE3OgogICAgICAgICBjYjoyNTo3ZjpmNzo1Mjo0Yzo3Mjo2NjpmNzphMDozMTpmYzpiMTo2NzpkMTo5MzoxMDpmNjoKICAgICAgICAgOTg6MGE6NmQ6NjE6OTI6ZTg6NTc6MDc6MWE6N2I6NTY6YjI6ZDM6ZmI6YWU6MDI6YjI6MzI6CiAgICAgICAgIDJmOmYxOjAxOjY3OmI2OjFkOmVlOjkyOjI0OmMwOmE1OmZjOjYwOjBlOmI5OjQ5OjNjOjExOgogICAgICAgICAzNToxNzo5NTpmZgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBakFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV3hsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5JMWFFMHZjSC9uNUw5U3NHR3U4dStxV0lnRWFxK3lhZ2s2RDIyeWs3UDZDbGJaZktNTgpSSURoNXhHSUI2UTZ4SkMxb21LRXhjK202aThuRzFlcnJvUE9qRHEyZmc0R2pVa0RicTE2MUt1NmllU29MakR1CmZ4OTdIS205Y3Bpc1Y3ZEd0dHBheUtacCtGYVJkMGpQS3V4Z24xRkpvd1JtNDllR2ttVkgyWS9yNlFscUdDY1EKZXBvZjBCaVFtZXdERzhHT3F5VkFQLzY3V0dhUkVISG5RemhpazhCek45K0pkck45OW1FeG9NeFk2TXFyR0paTQo1L2RnMVB2TURNUnNENE1QZHhXbHllaEtKcEl5czJPdVFOWFdqNTZzdTNZb3IyUUpHYzZZUC8welZEWEJBQ0h1ClFRL2RaSzhNSW5rZ1laQ2Vrdld0UkQ2ZjNSMVpMa0l5UWtNQ0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJUangrM1NsMmEzYmhFd21tekxHMzBjcW1XQmxqQlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYWQ3UHpQYWtzeFlFY0pwRDU5MDRMWmMxaW8wSgpjVTBpWGZseEFmQXJXck9EK1lPalczZ1VRR1gwZGxDbThrelByM3BVMFp0NFdhdUN3d3VxMzRXaHdOZjVzMk01Cm0vN2tHanU2RGo5RjJlM2E1WHhlK3lSQVU4aGczTll6cFpRUFl3MkQ4cngvTEtpcXlBRVp5NEc1VHJ3NEswdzQKbm95cDVFS0JDNmZQTDliZmxsbnlsaWJMMzNFNkg1RTNDUGlaTHQvcWx2ZjRTOGxoNzJlZ25SODRnQWcrWW9WSwpXSnpoNGtOL1g4a0E4d3FUSlh3WHVTZDAxc0hKMmk4a3kwVDNaYVBSdEYrbnl5Vi85MUpNY21iM29ESDhzV2ZSCmt4RDJtQXB0WVpMb1Z3Y2FlMWF5MC91dUFySXlML0VCWjdZZDdwSWt3S1g4WUE2NVNUd1JOUmVWL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
++ echo ''\''Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiAyICgweDIpCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049NTIuMjAyLjIyNi4xNzNAMTQ2MjU1ODQ4NgogICAgICAgIFZhbGlkaXR5CiAgICAgICAgICAgIE5vdCBCZWZvcmU6IE1heSAgNiAxODoxNDo0NiAyMDE2IEdNVAogICAgICAgICAgICBOb3QgQWZ0ZXIgOiBNYXkgIDQgMTg6MTQ6NDYgMjAyNiBHTVQKICAgICAgICBTdWJqZWN0OiBDTj1rdWJlbGV0CiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBQdWJsaWMtS2V5OiAoMjA0OCBiaXQpCiAgICAgICAgICAgICAgICBNb2R1bHVzOgogICAgICAgICAgICAgICAgICAgIDAwOmQyOjM1OjY4OjRkOjJmOjcwOjdmOmU3OmU0OmJmOjUyOmIwOjYxOmFlOgogICAgICAgICAgICAgICAgICAgIGYyOmVmOmFhOjU4Ojg4OjA0OjZhOmFmOmIyOjZhOjA5OjNhOjBmOjZkOmIyOgogICAgICAgICAgICAgICAgICAgIDkzOmIzOmZhOjBhOjU2OmQ5OjdjOmEzOjBkOjQ0OjgwOmUxOmU3OjExOjg4OgogICAgICAgICAgICAgICAgICAgIDA3OmE0OjNhOmM0OjkwOmI1OmEyOjYyOjg0OmM1OmNmOmE2OmVhOjJmOjI3OgogICAgICAgICAgICAgICAgICAgIDFiOjU3OmFiOmFlOjgzOmNlOjhjOjNhOmI2OjdlOjBlOjA2OjhkOjQ5OjAzOgogICAgICAgICAgICAgICAgICAgIDZlOmFkOjdhOmQ0OmFiOmJhOjg5OmU0OmE4OjJlOjMwOmVlOjdmOjFmOjdiOgogICAgICAgICAgICAgICAgICAgIDFjOmE5OmJkOjcyOjk4OmFjOjU3OmI3OjQ2OmI2OmRhOjVhOmM4OmE2OjY5OgogICAgICAgICAgICAgICAgICAgIGY4OjU2OjkxOjc3OjQ4OmNmOjJhOmVjOjYwOjlmOjUxOjQ5OmEzOjA0OjY2OgogICAgICAgICAgICAgICAgICAgIGUzOmQ3Ojg2OjkyOjY1OjQ3OmQ5OjhmOmViOmU5OjA5OjZhOjE4OjI3OjEwOgogICAgICAgICAgICAgICAgICAgIDdhOjlhOjFmOmQwOjE4OjkwOjk5OmVjOjAzOjFiOmMxOjhlOmFiOjI1OjQwOgogICAgICAgICAgICAgICAgICAgIDNmOmZlOmJiOjU4OjY2OjkxOjEwOjcxOmU3OjQzOjM4OjYyOjkzOmMwOjczOgogICAgICAgICAgICAgICAgICAgIDM3OmRmOjg5Ojc2OmIzOjdkOmY2OjYxOjMxOmEwOmNjOjU4OmU4OmNhOmFiOgogICAgICAgICAgICAgICAgICAgIDE4Ojk2OjRjOmU3OmY3OjYwOmQ0OmZiOmNjOjBjOmM0OjZjOjBmOjgzOjBmOgogICAgICAgICAgICAgICAgICAgIDc3OjE1OmE1OmM5OmU4OjRhOjI2OjkyOjMyOmIzOjYzOmFlOjQwOmQ1OmQ2OgogICAgICAgICAgICAgICAgICAgIDhmOjllOmFjOmJiOjc2OjI4OmFmOjY0OjA5OjE5OmNlOjk4OjNmOmZkOjMzOgogICAgICAgICAgICAgICAgICAgIDU0OjM1OmMxOjAwOjIxOmVlOjQxOjBmOmRkOjY0OmFmOjBjOjIyOjc5OjIwOgogICAgICAgICAgICAgICAgICAgIDYxOjkwOjllOjkyOmY1OmFkOjQ0OjNlOjlmOmRkOjFkOjU5OjJlOjQyOjMyOgogICAgICAgICAgICAgICAgICAgIDQyOjQzCiAgICAgICAgICAgICAgICBFeHBvbmVudDogNjU1MzcgKDB4MTAwMDEpCiAgICAgICAgWDUwOXYzIGV4dGVuc2lvbnM6CiAgICAgICAgICAgIFg1MDl2MyBCYXNpYyBDb25zdHJhaW50czogCiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjogCiAgICAgICAgICAgICAgICBFMzpDNzpFRDpEMjo5Nzo2NjpCNzo2RToxMTozMDo5QTo2QzpDQjoxQjo3RDoxQzpBQTo2NTo4MTo5NgogICAgICAgICAgICBYNTA5djMgQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyOiAKICAgICAgICAgICAgICAgIGtleWlkOkVDOjc0OkJFOkU4OkUzOjUxOkI0OkNBOkUyOjFFOjg0OkRDOkEwOjI4OjQ2OjAzOjlDOjMwOjk3OjdCCiAgICAgICAgICAgICAgICBEaXJOYW1lOi9DTj01Mi4yMDIuMjI2LjE3M0AxNDYyNTU4NDg2CiAgICAgICAgICAgICAgICBzZXJpYWw6QjA6RkY6Mjg6QTY6OEE6RUI6MEQ6RkYKCiAgICAgICAgICAgIFg1MDl2MyBFeHRlbmRlZCBLZXkgVXNhZ2U6IAogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZTogCiAgICAgICAgICAgICAgICBEaWdpdGFsIFNpZ25hdHVyZQogICAgU2lnbmF0dXJlIEFsZ29yaXRobTogc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24KICAgICAgICAgNjk6ZGU6Y2Y6Y2M6ZjY6YTQ6YjM6MTY6MDQ6NzA6OWE6NDM6ZTc6ZGQ6Mzg6MmQ6OTc6MzU6CiAgICAgICAgIDhhOjhkOjA5OjcxOjRkOjIyOjVkOmY5OjcxOjAxOmYwOjJiOjVhOmIzOjgzOmY5OjgzOmEzOgogICAgICAgICA1Yjo3ODoxNDo0MDo2NTpmNDo3Njo1MDphNjpmMjo0YzpjZjphZjo3YTo1NDpkMTo5Yjo3ODoKICAgICAgICAgNTk6YWI6ODI6YzM6MGI6YWE6ZGY6ODU6YTE6YzA6ZDc6Zjk6YjM6NjM6Mzk6OWI6ZmU6ZTQ6CiAgICAgICAgIDFhOjNiOmJhOjBlOjNmOjQ1OmQ5OmVkOmRhOmU1OjdjOjVlOmZiOjI0OjQwOjUzOmM4OjYwOgogICAgICAgICBkYzpkNjozMzphNTo5NDowZjo2MzowZDo4MzpmMjpiYzo3ZjoyYzphODphYTpjODowMToxOToKICAgICAgICAgY2I6ODE6Yjk6NGU6YmM6Mzg6MmI6NGM6Mzg6OWU6OGM6YTk6ZTQ6NDI6ODE6MGI6YTc6Y2Y6CiAgICAgICAgIDJmOmQ2OmRmOjk2OjU5OmYyOjk2OjI2OmNiOmRmOjcxOjNhOjFmOjkxOjM3OjA4OmY4Ojk5OgogICAgICAgICAyZTpkZjplYTo5NjpmNzpmODo0YjpjOTo2MTplZjo2NzphMDo5ZDoxZjozODo4MDowODozZToKICAgICAgICAgNjI6ODU6NGE6NTg6OWM6ZTE6ZTI6NDM6N2Y6NWY6Yzk6MDA6ZjM6MGE6OTM6MjU6N2M6MTc6CiAgICAgICAgIGI5OjI3Ojc0OmQ2OmMxOmM5OmRhOjJmOjI0OmNiOjQ0OmY3OjY1OmEzOmQxOmI0OjVmOmE3OgogICAgICAgICBjYjoyNTo3ZjpmNzo1Mjo0Yzo3Mjo2NjpmNzphMDozMTpmYzpiMTo2NzpkMTo5MzoxMDpmNjoKICAgICAgICAgOTg6MGE6NmQ6NjE6OTI6ZTg6NTc6MDc6MWE6N2I6NTY6YjI6ZDM6ZmI6YWU6MDI6YjI6MzI6CiAgICAgICAgIDJmOmYxOjAxOjY3OmI2OjFkOmVlOjkyOjI0OmMwOmE1OmZjOjYwOjBlOmI5OjQ5OjNjOjExOgogICAgICAgICAzNToxNzo5NTpmZgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUJBakFOQmdrcWhraUc5dzBCQVFzRkFEQWtNU0l3SUFZRFZRUURGQmsxTWk0eQpNREl1TWpJMkxqRTNNMEF4TkRZeU5UVTRORGcyTUI0WERURTJNRFV3TmpFNE1UUTBObG9YRFRJMk1EVXdOREU0Ck1UUTBObG93RWpFUU1BNEdBMVVFQXhNSGEzVmlaV3hsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5JMWFFMHZjSC9uNUw5U3NHR3U4dStxV0lnRWFxK3lhZ2s2RDIyeWs3UDZDbGJaZktNTgpSSURoNXhHSUI2UTZ4SkMxb21LRXhjK202aThuRzFlcnJvUE9qRHEyZmc0R2pVa0RicTE2MUt1NmllU29MakR1CmZ4OTdIS205Y3Bpc1Y3ZEd0dHBheUtacCtGYVJkMGpQS3V4Z24xRkpvd1JtNDllR2ttVkgyWS9yNlFscUdDY1EKZXBvZjBCaVFtZXdERzhHT3F5VkFQLzY3V0dhUkVISG5RemhpazhCek45K0pkck45OW1FeG9NeFk2TXFyR0paTQo1L2RnMVB2TURNUnNENE1QZHhXbHllaEtKcEl5czJPdVFOWFdqNTZzdTNZb3IyUUpHYzZZUC8welZEWEJBQ0h1ClFRL2RaSzhNSW5rZ1laQ2Vrdld0UkQ2ZjNSMVpMa0l5UWtNQ0F3RUFBYU9CcFRDQm9qQUpCZ05WSFJNRUFqQUEKTUIwR0ExVWREZ1FXQkJUangrM1NsMmEzYmhFd21tekxHMzBjcW1XQmxqQlVCZ05WSFNNRVRUQkxnQlRzZEw3bwo0MUcweXVJZWhOeWdLRVlEbkRDWGU2RW9wQ1l3SkRFaU1DQUdBMVVFQXhRWk5USXVNakF5TGpJeU5pNHhOek5BCk1UUTJNalUxT0RRNE5vSUpBTEQvS0thSzZ3My9NQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUFzR0ExVWQKRHdRRUF3SUhnREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYWQ3UHpQYWtzeFlFY0pwRDU5MDRMWmMxaW8wSgpjVTBpWGZseEFmQXJXck9EK1lPalczZ1VRR1gwZGxDbThrelByM3BVMFp0NFdhdUN3d3VxMzRXaHdOZjVzMk01Cm0vN2tHanU2RGo5RjJlM2E1WHhlK3lSQVU4aGczTll6cFpRUFl3MkQ4cngvTEtpcXlBRVp5NEc1VHJ3NEswdzQKbm95cDVFS0JDNmZQTDliZmxsbnlsaWJMMzNFNkg1RTNDUGlaTHQvcWx2ZjRTOGxoNzJlZ25SODRnQWcrWW9WSwpXSnpoNGtOL1g4a0E4d3FUSlh3WHVTZDAxc0hKMmk4a3kwVDNaYVBSdEYrbnl5Vi85MUpNY21iM29ESDhzV2ZSCmt4RDJtQXB0WVpMb1Z3Y2FlMWF5MC91dUFySXlML0VCWjdZZDdwSWt3S1g4WUE2NVNUd1JOUmVWL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='\'''
++ yaml-quote LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFNOV2hOTDNCLzUrUy8KVXJCaHJ2THZxbGlJQkdxdnNtb0pPZzl0c3BPeitncFcyWHlqRFVTQTRlY1JpQWVrT3NTUXRhSmloTVhQcHVvdgpKeHRYcTY2RHpvdzZ0bjRPQm8xSkEyNnRldFNydW9ua3FDNHc3bjhmZXh5cHZYS1lyRmUzUnJiYVdzaW1hZmhXCmtYZEl6eXJzWUo5UlNhTUVadVBYaHBKbFI5bVA2K2tKYWhnbkVIcWFIOUFZa0puc0F4dkJqcXNsUUQvK3UxaG0Ka1JCeDUwTTRZcFBBY3pmZmlYYXpmZlpoTWFETVdPaktxeGlXVE9mM1lOVDd6QXpFYkErREQzY1ZwY25vU2lhUwpNck5qcmtEVjFvK2VyTHQyS0s5a0NSbk9tRC85TTFRMXdRQWg3a0VQM1dTdkRDSjVJR0dRbnBMMXJVUStuOTBkCldTNUNNa0pEQWdNQkFBRUNnZ0VBWkpMaEFHeitLblJNNGEweWJzcEJ1YUdMRWlqcTBuMU9kbk90QmhNMjBCbUYKOE4vRjNrMXV4U3RRWHZieWtRVDlIeStJTGhMUWdmV2Vma2o3c0FxWVNMLytIK2xJam5WY0M5NzBpVlFIaE5LUApQek9vUmdrV0VYM1p6T3l6YzVDaHR6TENNZDdWdWFsaUJDazlKVHpaa0piNkl1NVViTHE5c0ZUV25sYXVKVWtnCkRYd0hjWUhTNTM4U05ncEhqZktqZ3JnenFVV1NMdy81aHB5SFlCaVhXdklnY1hRdkwxUkVuY0Y2RmFHYXMvS1oKa2JxdHVCOEMxOXUweklFLzg3ZHdBMEhSN21uSldhNGJtNTBwalVGU0xPdlN5cFhONkNTc0NidXBNYnR5TkloaApiSlE3UVZxVGFGejNURS9qRWtid0RNK3dxZmpuY1RPNjBIeG51WWJjNFFLQmdRRHB1UUMzMVR2TEJpekZWb2JYCmJmdDczOW1kSXlJOTBUaHl4dTlxZ0tUL3dxRGdMa0plRG5XV1dlTHBkUzFlTXNPRVAzQTRyTHloK25rQWNIbjIKWVlQWlBOa2NycjRaKzZaOXhvN29UTjlSb3RLdDcyWmNmSlZQT0dva3RXWVIxcFRHaDB6WU53b1FaRnlwZ0hPRQp2UlF5c3AvVmkwZmRCaThTSzZOSkNVcHQzUUtCZ1FEbVBxVTZ0L2ptUEQra1ZmaXF2NmNrcDZVaGx5LzVkQUFxClVERTV6eW83ZG5hSGpYTk5seTVMNkFvV0d4eGtJRkVQdXZrS3pSU2I0cm54QlFSMUhma0FBalI3WWtVZkdBdVEKYTB0eUxTZXpqSU1tTGd1ZDIxakJKSWxwazB2UkUvTnlQZGFOc25vMkVTbG9sTnBESUREZTdLQ3N6K29rcmpXVgp4c1hNT1VhK253S0JnUUNQbTBqQnE1ZE5xOEdlandmVEhwVERERXZkclZUQXZ1ajhQUmVtVE4wVStUVjRDWFJsCjdtUjV1VWtmUVF4Yk1MM0phR0Uvc1lORjAyeTl4RjVyOEliZTEvQmZHMDliRDdEQTMxdTNpR1ErK05pU1h1SjYKT1dKVWhzbFJQTlEyYWE2SVBXSU9CK043SnU5NGhxQjBFdWx5TFNiZ1F2QW84ai9CM21ZNTNpZUpVUUtCZ1FEUwpkVmJRK3BNLzJMaVB2YW5rWWZVbE16eGxITzVVUmExVkFDSk81a2VEUFFDUlhVR1ZIZWpLcDVwNHBHVnFQSVA4Ckxmc3czVTdHUXhPVjlQRWpJTGVYUTJ5M2o1Y0JHaGlQOVJOc2xVdmgra0Z6Sjhta2pIaHZhN2RUVXJtTnJuL3IKNEF4N1R6WVlyODA2OUQwaCtJM1RaMVpqUUZXVkc4eU5VTGxDdU9RcW53S0JnRS9wSkFCT3h4QWlJOUxHL0R6aAovWkt3bC9CeFJQYnJ3VXpaZFc1NDMrMUpPS1AvVzRXTWZwL2RHeXRzV2hHNWhyOXlzMDJPSmUyVWVvVzU1cmFBCkxXVkJrZXlITk9peFVvSU5YbytFUmpDcVppNXVFeHNSQ3J0SDIySW8vcU5WZ2tvd3Rhb1pPRVYydkR3UkdhdGoKVUM5ZFFqb3FJTkxqTDJRUmViTG42RndZCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFNOV2hOTDNCLzUrUy8KVXJCaHJ2THZxbGlJQkdxdnNtb0pPZzl0c3BPeitncFcyWHlqRFVTQTRlY1JpQWVrT3NTUXRhSmloTVhQcHVvdgpKeHRYcTY2RHpvdzZ0bjRPQm8xSkEyNnRldFNydW9ua3FDNHc3bjhmZXh5cHZYS1lyRmUzUnJiYVdzaW1hZmhXCmtYZEl6eXJzWUo5UlNhTUVadVBYaHBKbFI5bVA2K2tKYWhnbkVIcWFIOUFZa0puc0F4dkJqcXNsUUQvK3UxaG0Ka1JCeDUwTTRZcFBBY3pmZmlYYXpmZlpoTWFETVdPaktxeGlXVE9mM1lOVDd6QXpFYkErREQzY1ZwY25vU2lhUwpNck5qcmtEVjFvK2VyTHQyS0s5a0NSbk9tRC85TTFRMXdRQWg3a0VQM1dTdkRDSjVJR0dRbnBMMXJVUStuOTBkCldTNUNNa0pEQWdNQkFBRUNnZ0VBWkpMaEFHeitLblJNNGEweWJzcEJ1YUdMRWlqcTBuMU9kbk90QmhNMjBCbUYKOE4vRjNrMXV4U3RRWHZieWtRVDlIeStJTGhMUWdmV2Vma2o3c0FxWVNMLytIK2xJam5WY0M5NzBpVlFIaE5LUApQek9vUmdrV0VYM1p6T3l6YzVDaHR6TENNZDdWdWFsaUJDazlKVHpaa0piNkl1NVViTHE5c0ZUV25sYXVKVWtnCkRYd0hjWUhTNTM4U05ncEhqZktqZ3JnenFVV1NMdy81aHB5SFlCaVhXdklnY1hRdkwxUkVuY0Y2RmFHYXMvS1oKa2JxdHVCOEMxOXUweklFLzg3ZHdBMEhSN21uSldhNGJtNTBwalVGU0xPdlN5cFhONkNTc0NidXBNYnR5TkloaApiSlE3UVZxVGFGejNURS9qRWtid0RNK3dxZmpuY1RPNjBIeG51WWJjNFFLQmdRRHB1UUMzMVR2TEJpekZWb2JYCmJmdDczOW1kSXlJOTBUaHl4dTlxZ0tUL3dxRGdMa0plRG5XV1dlTHBkUzFlTXNPRVAzQTRyTHloK25rQWNIbjIKWVlQWlBOa2NycjRaKzZaOXhvN29UTjlSb3RLdDcyWmNmSlZQT0dva3RXWVIxcFRHaDB6WU53b1FaRnlwZ0hPRQp2UlF5c3AvVmkwZmRCaThTSzZOSkNVcHQzUUtCZ1FEbVBxVTZ0L2ptUEQra1ZmaXF2NmNrcDZVaGx5LzVkQUFxClVERTV6eW83ZG5hSGpYTk5seTVMNkFvV0d4eGtJRkVQdXZrS3pSU2I0cm54QlFSMUhma0FBalI3WWtVZkdBdVEKYTB0eUxTZXpqSU1tTGd1ZDIxakJKSWxwazB2UkUvTnlQZGFOc25vMkVTbG9sTnBESUREZTdLQ3N6K29rcmpXVgp4c1hNT1VhK253S0JnUUNQbTBqQnE1ZE5xOEdlandmVEhwVERERXZkclZUQXZ1ajhQUmVtVE4wVStUVjRDWFJsCjdtUjV1VWtmUVF4Yk1MM0phR0Uvc1lORjAyeTl4RjVyOEliZTEvQmZHMDliRDdEQTMxdTNpR1ErK05pU1h1SjYKT1dKVWhzbFJQTlEyYWE2SVBXSU9CK043SnU5NGhxQjBFdWx5TFNiZ1F2QW84ai9CM21ZNTNpZUpVUUtCZ1FEUwpkVmJRK3BNLzJMaVB2YW5rWWZVbE16eGxITzVVUmExVkFDSk81a2VEUFFDUlhVR1ZIZWpLcDVwNHBHVnFQSVA4Ckxmc3czVTdHUXhPVjlQRWpJTGVYUTJ5M2o1Y0JHaGlQOVJOc2xVdmgra0Z6Sjhta2pIaHZhN2RUVXJtTnJuL3IKNEF4N1R6WVlyODA2OUQwaCtJM1RaMVpqUUZXVkc4eU5VTGxDdU9RcW53S0JnRS9wSkFCT3h4QWlJOUxHL0R6aAovWkt3bC9CeFJQYnJ3VXpaZFc1NDMrMUpPS1AvVzRXTWZwL2RHeXRzV2hHNWhyOXlzMDJPSmUyVWVvVzU1cmFBCkxXVkJrZXlITk9peFVvSU5YbytFUmpDcVppNXVFeHNSQ3J0SDIySW8vcU5WZ2tvd3Rhb1pPRVYydkR3UkdhdGoKVUM5ZFFqb3FJTkxqTDJRUmViTG42RndZCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
++ echo ''\''LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFNOV2hOTDNCLzUrUy8KVXJCaHJ2THZxbGlJQkdxdnNtb0pPZzl0c3BPeitncFcyWHlqRFVTQTRlY1JpQWVrT3NTUXRhSmloTVhQcHVvdgpKeHRYcTY2RHpvdzZ0bjRPQm8xSkEyNnRldFNydW9ua3FDNHc3bjhmZXh5cHZYS1lyRmUzUnJiYVdzaW1hZmhXCmtYZEl6eXJzWUo5UlNhTUVadVBYaHBKbFI5bVA2K2tKYWhnbkVIcWFIOUFZa0puc0F4dkJqcXNsUUQvK3UxaG0Ka1JCeDUwTTRZcFBBY3pmZmlYYXpmZlpoTWFETVdPaktxeGlXVE9mM1lOVDd6QXpFYkErREQzY1ZwY25vU2lhUwpNck5qcmtEVjFvK2VyTHQyS0s5a0NSbk9tRC85TTFRMXdRQWg3a0VQM1dTdkRDSjVJR0dRbnBMMXJVUStuOTBkCldTNUNNa0pEQWdNQkFBRUNnZ0VBWkpMaEFHeitLblJNNGEweWJzcEJ1YUdMRWlqcTBuMU9kbk90QmhNMjBCbUYKOE4vRjNrMXV4U3RRWHZieWtRVDlIeStJTGhMUWdmV2Vma2o3c0FxWVNMLytIK2xJam5WY0M5NzBpVlFIaE5LUApQek9vUmdrV0VYM1p6T3l6YzVDaHR6TENNZDdWdWFsaUJDazlKVHpaa0piNkl1NVViTHE5c0ZUV25sYXVKVWtnCkRYd0hjWUhTNTM4U05ncEhqZktqZ3JnenFVV1NMdy81aHB5SFlCaVhXdklnY1hRdkwxUkVuY0Y2RmFHYXMvS1oKa2JxdHVCOEMxOXUweklFLzg3ZHdBMEhSN21uSldhNGJtNTBwalVGU0xPdlN5cFhONkNTc0NidXBNYnR5TkloaApiSlE3UVZxVGFGejNURS9qRWtid0RNK3dxZmpuY1RPNjBIeG51WWJjNFFLQmdRRHB1UUMzMVR2TEJpekZWb2JYCmJmdDczOW1kSXlJOTBUaHl4dTlxZ0tUL3dxRGdMa0plRG5XV1dlTHBkUzFlTXNPRVAzQTRyTHloK25rQWNIbjIKWVlQWlBOa2NycjRaKzZaOXhvN29UTjlSb3RLdDcyWmNmSlZQT0dva3RXWVIxcFRHaDB6WU53b1FaRnlwZ0hPRQp2UlF5c3AvVmkwZmRCaThTSzZOSkNVcHQzUUtCZ1FEbVBxVTZ0L2ptUEQra1ZmaXF2NmNrcDZVaGx5LzVkQUFxClVERTV6eW83ZG5hSGpYTk5seTVMNkFvV0d4eGtJRkVQdXZrS3pSU2I0cm54QlFSMUhma0FBalI3WWtVZkdBdVEKYTB0eUxTZXpqSU1tTGd1ZDIxakJKSWxwazB2UkUvTnlQZGFOc25vMkVTbG9sTnBESUREZTdLQ3N6K29rcmpXVgp4c1hNT1VhK253S0JnUUNQbTBqQnE1ZE5xOEdlandmVEhwVERERXZkclZUQXZ1ajhQUmVtVE4wVStUVjRDWFJsCjdtUjV1VWtmUVF4Yk1MM0phR0Uvc1lORjAyeTl4RjVyOEliZTEvQmZHMDliRDdEQTMxdTNpR1ErK05pU1h1SjYKT1dKVWhzbFJQTlEyYWE2SVBXSU9CK043SnU5NGhxQjBFdWx5TFNiZ1F2QW84ai9CM21ZNTNpZUpVUUtCZ1FEUwpkVmJRK3BNLzJMaVB2YW5rWWZVbE16eGxITzVVUmExVkFDSk81a2VEUFFDUlhVR1ZIZWpLcDVwNHBHVnFQSVA4Ckxmc3czVTdHUXhPVjlQRWpJTGVYUTJ5M2o1Y0JHaGlQOVJOc2xVdmgra0Z6Sjhta2pIaHZhN2RUVXJtTnJuL3IKNEF4N1R6WVlyODA2OUQwaCtJM1RaMVpqUUZXVkc4eU5VTGxDdU9RcW53S0JnRS9wSkFCT3h4QWlJOUxHL0R6aAovWkt3bC9CeFJQYnJ3VXpaZFc1NDMrMUpPS1AvVzRXTWZwL2RHeXRzV2hHNWhyOXlzMDJPSmUyVWVvVzU1cmFBCkxXVkJrZXlITk9peFVvSU5YbytFUmpDcVppNXVFeHNSQ3J0SDIySW8vcU5WZ2tvd3Rhb1pPRVYydkR3UkdhdGoKVUM5ZFFqb3FJTkxqTDJRUmViTG42RndZCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\'''
++ yaml-quote none
+++ echo none
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''none'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote R2.20
+++ echo R2.20
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''R2.20'\'''
++ yaml-quote master
+++ echo master
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''master'\'''
++ yaml-quote 10.1.0.0/16
+++ echo 10.1.0.0/16
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.1.0.0/16'\'''
++ yaml-quote false
+++ echo false
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''false'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote
+++ sed -e 's/'\''/'\'''\''/g'
+++ echo ''
++ echo ''\'''\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
++ yaml-quote 10.0.0.0/8
+++ echo 10.0.0.0/8
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''10.0.0.0/8'\'''
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ [[ jessie == \t\r\u\s\t\y ]]
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ [[ false == \t\r\u\e ]]
+ cat
++ yaml-quote false
+++ echo false
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''false'\'''
++ yaml-quote us-east-1a
+++ echo us-east-1a
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''us-east-1a'\'''
++ yaml-quote
+++ echo ''
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\'''\'''
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ [[ jessie == \c\o\r\e\o\s ]]
+ echo '#! /bin/bash'
+ echo 'mkdir -p /var/cache/kubernetes-install'
+ echo 'cd /var/cache/kubernetes-install'
+ echo 'cat > kube_env.yaml << __EOF_KUBE_ENV_YAML'
+ cat /tmp/kubernetes.fZ0hhp/node-kube-env.yaml
+ echo 'AUTO_UPGRADE: '\''true'\'''
++ yaml-quote aufs
+++ echo aufs
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''aufs'\'''
+ echo 'DOCKER_STORAGE: '\''aufs'\'''
++ yaml-quote 172.20.0.9
+++ echo 172.20.0.9
+++ sed -e 's/'\''/'\'''\''/g'
++ echo ''\''172.20.0.9'\'''
+ echo 'API_SERVERS: '\''172.20.0.9'\'''
+ echo __EOF_KUBE_ENV_YAML
+ echo ''
+ echo 'wget -O bootstrap https://s3.amazonaws.com/kubernetes-staging-1f8388770186e82b07ada78a3d29b1db/devel/bootstrap-script'
+ echo 'chmod +x bootstrap'
+ echo 'mkdir -p /etc/kubernetes'
+ echo 'mv kube_env.yaml /etc/kubernetes'
+ echo 'mv bootstrap /etc/kubernetes/'
+ echo 'cat > /etc/rc.local << EOF_RC_LOCAL'
+ echo '#!/bin/sh -e'
+ echo /etc/kubernetes/bootstrap
+ echo 'exit 0'
+ echo EOF_RC_LOCAL
+ echo /etc/kubernetes/bootstrap
+ gzip /tmp/kubernetes.fZ0hhp/node-user-data
+ local public_ip_option
+ [[ true == \t\r\u\e ]]
+ public_ip_option=--associate-public-ip-address
+ local spot_price_option
+ [[ -n '' ]]
+ spot_price_option=
+ aws autoscaling create-launch-configuration --launch-configuration-name kubernetes-minion-group-us-east-1a --image-id ami-6c9ea606 --iam-instance-profile kubernetes-minion --instance-type m3.large --key-name kubernetes-0d759b58db5b46fdfa447da66bf26c4f --security-groups sg-82dc22f9 --associate-public-ip-address --block-device-mappings '[{"DeviceName":"/dev/xvda","Ebs":{"DeleteOnTermination":true,"VolumeSize":32,"VolumeType":"gp2"}} ,{"DeviceName": "/dev/sdc","VirtualName":"ephemeral0"},{"DeviceName": "/dev/sdd","VirtualName":"ephemeral1"},{"DeviceName": "/dev/sde","VirtualName":"ephemeral2"},{"DeviceName": "/dev/sdf","VirtualName":"ephemeral3"}]' --user-data fileb:///tmp/kubernetes.fZ0hhp/node-user-data.gz
+ echo 'Creating autoscaling group'
Creating autoscaling group
+ aws autoscaling create-auto-scaling-group --auto-scaling-group-name kubernetes-minion-group-us-east-1a --launch-configuration-name kubernetes-minion-group-us-east-1a --min-size 2 --max-size 2 --vpc-zone-identifier subnet-19aaf86f --tags ResourceId=kubernetes-minion-group-us-east-1a,ResourceType=auto-scaling-group,Key=Name,Value=kubernetes-minion ResourceId=kubernetes-minion-group-us-east-1a,ResourceType=auto-scaling-group,Key=Role,Value=kubernetes-minion ResourceId=kubernetes-minion-group-us-east-1a,ResourceType=auto-scaling-group,Key=KubernetesCluster,Value=kubernetes
+ wait-minions
+ local attempt=0
+ local max_attempts=30
+ [[ -n '' ]]
+ true
+ find-running-minions
+ NODE_IDS=()
+ NODE_NAMES=()
++ query-running-minions 'Reservations[].Instances[].InstanceId'
++ local 'query=Reservations[].Instances[].InstanceId'
++ aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=vpc-id,Values=vpc-4cd52a2b Name=tag:KubernetesCluster,Values=kubernetes Name=tag:aws:autoscaling:groupName,Values=kubernetes-minion-group-us-east-1a Name=tag:Role,Values=kubernetes-minion --query 'Reservations[].Instances[].InstanceId'
+ [[ 0 == 2 ]]
+ ((  attempt > max_attempts  ))
+ echo -e ' \033[0;33m0 minions started; waiting\033[0m'
 0 minions started; waiting
+ attempt=1
+ sleep 10
+ true
+ find-running-minions
+ NODE_IDS=()
+ NODE_NAMES=()
++ query-running-minions 'Reservations[].Instances[].InstanceId'
++ local 'query=Reservations[].Instances[].InstanceId'
++ aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=vpc-id,Values=vpc-4cd52a2b Name=tag:KubernetesCluster,Values=kubernetes Name=tag:aws:autoscaling:groupName,Values=kubernetes-minion-group-us-east-1a Name=tag:Role,Values=kubernetes-minion --query 'Reservations[].Instances[].InstanceId'
+ [[ 0 == 2 ]]
+ ((  attempt > max_attempts  ))
+ echo -e ' \033[0;33m0 minions started; waiting\033[0m'
 0 minions started; waiting
+ attempt=2
+ sleep 10
+ true
+ find-running-minions
+ NODE_IDS=()
+ NODE_NAMES=()
++ query-running-minions 'Reservations[].Instances[].InstanceId'
++ local 'query=Reservations[].Instances[].InstanceId'
++ aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=vpc-id,Values=vpc-4cd52a2b Name=tag:KubernetesCluster,Values=kubernetes Name=tag:aws:autoscaling:groupName,Values=kubernetes-minion-group-us-east-1a Name=tag:Role,Values=kubernetes-minion --query 'Reservations[].Instances[].InstanceId'
+ [[ 0 == 2 ]]
+ ((  attempt > max_attempts  ))
+ echo -e ' \033[0;33m0 minions started; waiting\033[0m'
 0 minions started; waiting
+ attempt=3
+ sleep 10
+ true
+ find-running-minions
+ NODE_IDS=()
+ NODE_NAMES=()
++ query-running-minions 'Reservations[].Instances[].InstanceId'
++ local 'query=Reservations[].Instances[].InstanceId'
++ aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=vpc-id,Values=vpc-4cd52a2b Name=tag:KubernetesCluster,Values=kubernetes Name=tag:aws:autoscaling:groupName,Values=kubernetes-minion-group-us-east-1a Name=tag:Role,Values=kubernetes-minion --query 'Reservations[].Instances[].InstanceId'
+ [[ 0 == 2 ]]
+ ((  attempt > max_attempts  ))
+ echo -e ' \033[0;33m0 minions started; waiting\033[0m'
 0 minions started; waiting
+ attempt=4
+ sleep 10
+ true
+ find-running-minions
+ NODE_IDS=()
+ NODE_NAMES=()
++ query-running-minions 'Reservations[].Instances[].InstanceId'
++ local 'query=Reservations[].Instances[].InstanceId'
++ aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=vpc-id,Values=vpc-4cd52a2b Name=tag:KubernetesCluster,Values=kubernetes Name=tag:aws:autoscaling:groupName,Values=kubernetes-minion-group-us-east-1a Name=tag:Role,Values=kubernetes-minion --query 'Reservations[].Instances[].InstanceId'
+ for id in '$(query-running-minions "Reservations[].Instances[].InstanceId")'
+ NODE_IDS+=("${id}")
+ NODE_NAMES+=("${id}")
+ for id in '$(query-running-minions "Reservations[].Instances[].InstanceId")'
+ NODE_IDS+=("${id}")
+ NODE_NAMES+=("${id}")
+ [[ 2 == 2 ]]
+ echo -e ' \033[0;32m2 minions started; ready\033[0m'
 2 minions started; ready
+ break
+ wait-master
+ detect-master
+ find-tagged-master-ip
+ find-master-pd
+ local name=kubernetes-master-pd
+ [[ -z vol-dd1ac876 ]]
+ [[ -n vol-dd1ac876 ]]
++ get-tag vol-dd1ac876 kubernetes.io/master-ip
++ aws ec2 describe-tags --filters Name=resource-id,Values=vol-dd1ac876 Name=key,Values=kubernetes.io/master-ip --query 'Tags[].Value'
+ KUBE_MASTER_IP=52.202.226.173
+ KUBE_MASTER=kubernetes-master
+ [[ -z 52.202.226.173 ]]
+ echo 'Using master: kubernetes-master (external IP: 52.202.226.173)'
+ echo 'Waiting for cluster initialization.'
Waiting for cluster initialization.
+ echo

+ echo '  This will continually check to see if the API for kubernetes is reachable.'
  This will continually check to see if the API for kubernetes is reachable.
+ echo '  This might loop forever if there was some uncaught error during start'
  This might loop forever if there was some uncaught error during start
+ echo '  up.'
  up.
+ echo

++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ printf .
.+ sleep 2
++ curl --insecure --user admin:VOpgP0Ggnty5mLcq --max-time 5 --fail --output /dev/null --silent https://52.202.226.173/healthz
+ echo 'Kubernetes cluster created.'
Kubernetes cluster created.
+ check-cluster
+ echo 'Sanity checking cluster...'
Sanity checking cluster...
+ sleep 5
+ detect-nodes
+ find-running-minions
+ NODE_IDS=()
+ NODE_NAMES=()
++ query-running-minions 'Reservations[].Instances[].InstanceId'
++ local 'query=Reservations[].Instances[].InstanceId'
++ aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=vpc-id,Values=vpc-4cd52a2b Name=tag:KubernetesCluster,Values=kubernetes Name=tag:aws:autoscaling:groupName,Values=kubernetes-minion-group-us-east-1a Name=tag:Role,Values=kubernetes-minion --query 'Reservations[].Instances[].InstanceId'
+ for id in '$(query-running-minions "Reservations[].Instances[].InstanceId")'
+ NODE_IDS+=("${id}")
+ NODE_NAMES+=("${id}")
+ for id in '$(query-running-minions "Reservations[].Instances[].InstanceId")'
+ NODE_IDS+=("${id}")
+ NODE_NAMES+=("${id}")
+ KUBE_NODE_IP_ADDRESSES=()
+ (( i=0 ))
+ (( i<2 ))
+ local minion_ip
+ [[ true == \t\r\u\e ]]
++ get_instance_public_ip i-0e8cf689
++ local instance_id=i-0e8cf689
++ aws ec2 describe-instances --instance-ids i-0e8cf689 --query 'Reservations[].Instances[].NetworkInterfaces[0].Association.PublicIp'
+ minion_ip=54.165.224.157
+ echo 'Found minion 0: i-0e8cf689 @ 54.165.224.157'
+ KUBE_NODE_IP_ADDRESSES+=("${minion_ip}")
+ (( i++ ))
+ (( i<2 ))
+ local minion_ip
+ [[ true == \t\r\u\e ]]
++ get_instance_public_ip i-0d8cf68a
++ local instance_id=i-0d8cf68a
++ aws ec2 describe-instances --instance-ids i-0d8cf68a --query 'Reservations[].Instances[].NetworkInterfaces[0].Association.PublicIp'
+ minion_ip=52.90.148.29
+ echo 'Found minion 1: i-0d8cf68a @ 52.90.148.29'
+ KUBE_NODE_IP_ADDRESSES+=("${minion_ip}")
+ (( i++ ))
+ (( i<2 ))
+ [[ -z 54.165.224.157 ]]
+ set +e
+ local rc
+ (( i=0 ))
+ (( i<2 ))
+ local attempt=0
+ true
+ local minion_ip=54.165.224.157
+ echo -n 'Attempt 1 to check Docker on node @ 54.165.224.157 ...'
Attempt 1 to check Docker on node @ 54.165.224.157 ...++ check-minion 54.165.224.157
++ local minion_ip=54.165.224.157
+++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@54.165.224.157 sudo docker ps -a
++ local output=
++ [[ -z '' ]]
++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@54.165.224.157 sudo service docker start
++ echo 'not working yet'
+ local 'output=not working yet'
+ echo not working yet
not working yet
+ [[ not working yet != \w\o\r\k\i\n\g ]]
+ ((  attempt > 9  ))
+ attempt=1
+ sleep 30
+ true
+ local minion_ip=54.165.224.157
+ echo -n 'Attempt 2 to check Docker on node @ 54.165.224.157 ...'
Attempt 2 to check Docker on node @ 54.165.224.157 ...++ check-minion 54.165.224.157
++ local minion_ip=54.165.224.157
+++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@54.165.224.157 sudo docker ps -a
++ local output=
++ [[ -z '' ]]
++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@54.165.224.157 sudo service docker start
++ echo 'not working yet'
+ local 'output=not working yet'
+ echo not working yet
not working yet
+ [[ not working yet != \w\o\r\k\i\n\g ]]
+ ((  attempt > 9  ))
+ attempt=2
+ sleep 30
+ true
+ local minion_ip=54.165.224.157
+ echo -n 'Attempt 3 to check Docker on node @ 54.165.224.157 ...'
Attempt 3 to check Docker on node @ 54.165.224.157 ...++ check-minion 54.165.224.157
++ local minion_ip=54.165.224.157
+++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@54.165.224.157 sudo docker ps -a
++ local output=
++ [[ -z '' ]]
++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@54.165.224.157 sudo service docker start
++ echo 'not working yet'
+ local 'output=not working yet'
+ echo not working yet
not working yet
+ [[ not working yet != \w\o\r\k\i\n\g ]]
+ ((  attempt > 9  ))
+ attempt=3
+ sleep 30
+ true
+ local minion_ip=54.165.224.157
+ echo -n 'Attempt 4 to check Docker on node @ 54.165.224.157 ...'
Attempt 4 to check Docker on node @ 54.165.224.157 ...++ check-minion 54.165.224.157
++ local minion_ip=54.165.224.157
+++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@54.165.224.157 sudo docker ps -a
++ local 'output=CONTAINER ID        IMAGE                                COMMAND             CREATED             STATUS              PORTS               NAMES
df21193b5595        gcr.io/google_containers/pause:2.0   "/pause"            8 seconds ago       Up 8 seconds                            k8s_POD.6059dfa2_kube-proxy-ip-172-20-0-241.ec2.internal_kube-system_edf0d24313b470efe8b32fa8999ff051_091bac8e
5ef1e513573e        gcr.io/google_containers/pause:2.0   "/pause"            9 seconds ago       Up 8 seconds                            k8s_POD.6059dfa2_fluentd-elasticsearch-ip-172-20-0-241.ec2.internal_kube-system_e313182cba6f0619720f91d8860ae1bb_614f321a'
++ [[ -z CONTAINER ID        IMAGE                                COMMAND             CREATED             STATUS              PORTS               NAMES
df21193b5595        gcr.io/google_containers/pause:2.0   "/pause"            8 seconds ago       Up 8 seconds                            k8s_POD.6059dfa2_kube-proxy-ip-172-20-0-241.ec2.internal_kube-system_edf0d24313b470efe8b32fa8999ff051_091bac8e
5ef1e513573e        gcr.io/google_containers/pause:2.0   "/pause"            9 seconds ago       Up 8 seconds                            k8s_POD.6059dfa2_fluentd-elasticsearch-ip-172-20-0-241.ec2.internal_kube-system_e313182cba6f0619720f91d8860ae1bb_614f321a ]]
++ echo working
+ local output=working
+ echo working
working
+ [[ working != \w\o\r\k\i\n\g ]]
+ break
+ (( i++ ))
+ (( i<2 ))
+ local attempt=0
+ true
+ local minion_ip=52.90.148.29
+ echo -n 'Attempt 1 to check Docker on node @ 52.90.148.29 ...'
Attempt 1 to check Docker on node @ 52.90.148.29 ...++ check-minion 52.90.148.29
++ local minion_ip=52.90.148.29
+++ ssh -oStrictHostKeyChecking=no -i /home/virginia/.ssh/kube_aws_rsa admin@52.90.148.29 sudo docker ps -a
++ local 'output=CONTAINER ID        IMAGE                                COMMAND             CREATED             STATUS              PORTS               NAMES
67fed0e52cbb        gcr.io/google_containers/pause:2.0   "/pause"            13 seconds ago      Up 13 seconds                           k8s_POD.6059dfa2_kube-proxy-ip-172-20-0-242.ec2.internal_kube-system_edf0d24313b470efe8b32fa8999ff051_3c8538ff
8f7d2720c887        gcr.io/google_containers/pause:2.0   "/pause"            14 seconds ago      Up 14 seconds                           k8s_POD.6059dfa2_fluentd-elasticsearch-ip-172-20-0-242.ec2.internal_kube-system_e313182cba6f0619720f91d8860ae1bb_f41f2286'
++ [[ -z CONTAINER ID        IMAGE                                COMMAND             CREATED             STATUS              PORTS               NAMES
67fed0e52cbb        gcr.io/google_containers/pause:2.0   "/pause"            13 seconds ago      Up 13 seconds                           k8s_POD.6059dfa2_kube-proxy-ip-172-20-0-242.ec2.internal_kube-system_edf0d24313b470efe8b32fa8999ff051_3c8538ff
8f7d2720c887        gcr.io/google_containers/pause:2.0   "/pause"            14 seconds ago      Up 14 seconds                           k8s_POD.6059dfa2_fluentd-elasticsearch-ip-172-20-0-242.ec2.internal_kube-system_e313182cba6f0619720f91d8860ae1bb_f41f2286 ]]
++ echo working
+ local output=working
+ echo working
working
+ [[ working != \w\o\r\k\i\n\g ]]
+ break
+ (( i++ ))
+ (( i<2 ))
+ get-kubeconfig-basicauth
+ export KUBECONFIG=/home/virginia/.kube/config
+ KUBECONFIG=/home/virginia/.kube/config
++ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config view -o 'jsonpath={.current-context}'
+ local cc=aws_kubernetes
+ [[ ! -z '' ]]
++ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config view -o 'jsonpath={.contexts[?(@.name == "aws_kubernetes")].context.user}'
+ local user=aws_kubernetes
++ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config view -o 'jsonpath={.users[?(@.name == "aws_kubernetes")].user.username}'
+ KUBE_USER=
++ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh config view -o 'jsonpath={.users[?(@.name == "aws_kubernetes")].user.password}'
+ KUBE_PASSWORD=
+ echo

+ echo -e '\033[0;32mKubernetes cluster is running.  The master is running at:'
Kubernetes cluster is running.  The master is running at:
+ echo

+ echo -e '\033[0;33m  https://52.202.226.173'
  https://52.202.226.173
+ echo

+ echo -e '\033[0;32mThe user name and password to use is located in /home/virginia/.kube/config.\033[0m'
The user name and password to use is located in /home/virginia/.kube/config.
+ echo

+ echo '... calling validate-cluster'
... calling validate-cluster
+ validate-cluster
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/validate-cluster.sh
+ set -o errexit
+ set -o nounset
+ set -o pipefail
++ dirname ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/validate-cluster.sh
+ KUBE_ROOT=./cluster/../cluster/../cluster/aws/../../cluster/../cluster/..
+ '[' -f ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/env.sh ']'
+ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/kube-env.sh
++ KUBERNETES_PROVIDER=aws
++ [[ -z '' ]]
++ declare -r 'color_start=\033['
++ declare -r 'color_red=\033[0;31m'
++ declare -r 'color_yellow=\033[0;33m'
++ declare -r 'color_green=\033[0;32m'
++ declare -r 'color_norm=\033[0m'
+ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/kube-util.sh
+++ dirname ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/kube-util.sh
++ KUBE_ROOT=./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/..
++ '[' -n aws ']'
++ PROVIDER_UTILS=./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/util.sh
++ '[' -f ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/util.sh ']'
++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/util.sh
++++ dirname ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/util.sh
+++ KUBE_ROOT=./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../..
+++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/aws/config-default.sh
++++ ZONE=us-east-1a
++++ MASTER_SIZE=m3.medium
++++ NODE_SIZE=m3.large
++++ NUM_NODES=2
++++ [[ -z m3.large ]]
++++ [[ -z m3.medium ]]
++++ AWS_S3_REGION=us-east-1
++++ DOCKER_STORAGE=aufs
++++ EXTRA_DOCKER_OPTS=
++++ INSTANCE_PREFIX=kubernetes
++++ CLUSTER_ID=kubernetes
++++ AWS_SSH_KEY=/home/virginia/.ssh/kube_aws_rsa
++++ IAM_PROFILE_MASTER=kubernetes-master
++++ IAM_PROFILE_NODE=kubernetes-minion
++++ LOG=/dev/null
++++ MASTER_DISK_TYPE=gp2
++++ MASTER_DISK_SIZE=20
++++ MASTER_ROOT_DISK_TYPE=gp2
++++ MASTER_ROOT_DISK_SIZE=8
++++ NODE_ROOT_DISK_TYPE=gp2
++++ NODE_ROOT_DISK_SIZE=32
++++ MASTER_NAME=kubernetes-master
++++ MASTER_TAG=kubernetes-master
++++ NODE_TAG=kubernetes-minion
++++ NODE_SCOPES=
++++ POLL_SLEEP_INTERVAL=3
++++ NON_MASQUERADE_CIDR=10.0.0.0/8
++++ SERVICE_CLUSTER_IP_RANGE=10.0.0.0/16
++++ CLUSTER_IP_RANGE=10.244.0.0/16
++++ MASTER_IP_RANGE=10.246.0.0/24
++++ MASTER_RESERVED_IP=
++++ RUNTIME_CONFIG=
++++ ENABLE_CLUSTER_MONITORING=influxdb
++++ ENABLE_NODE_LOGGING=true
++++ LOGGING_DESTINATION=elasticsearch
++++ ENABLE_CLUSTER_LOGGING=true
++++ ELASTICSEARCH_LOGGING_REPLICAS=1
++++ [[ false == \t\r\u\e ]]
++++ ENABLE_CLUSTER_DNS=true
++++ DNS_SERVER_IP=10.0.0.10
++++ DNS_DOMAIN=cluster.local
++++ DNS_REPLICAS=1
++++ ENABLE_CLUSTER_UI=true
++++ ENABLE_NODE_AUTOSCALER=true
++++ [[ true == \t\r\u\e ]]
++++ AUTOSCALER_MIN_NODES=1
++++ AUTOSCALER_MAX_NODES=2
++++ TARGET_NODE_UTILIZATION=0.7
++++ ADMISSION_CONTROL=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,PersistentVolumeLabel
++++ ENABLE_NODE_PUBLIC_IP=true
++++ KUBE_OS_DISTRIBUTION=jessie
++++ KUBE_NODE_IMAGE=
++++ COREOS_CHANNEL=alpha
++++ CONTAINER_RUNTIME=docker
++++ RKT_VERSION=0.5.5
++++ NETWORK_PROVIDER=none
++++ OPENCONTRAIL_TAG=R2.20
++++ OPENCONTRAIL_KUBERNETES_TAG=master
++++ OPENCONTRAIL_PUBLIC_SUBNET=10.1.0.0/16
++++ E2E_STORAGE_TEST_ENVIRONMENT=false
+++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/common.sh
++++ set -o errexit
++++ set -o nounset
++++ set -o pipefail
+++++ dirname ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/common.sh
++++ KUBE_ROOT=./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/..
++++ DEFAULT_KUBECONFIG=/home/virginia/.kube/config
++++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/lib/util.sh
++++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/lib/logging.sh
++++ KUBE_RELEASE_VERSION_REGEX='^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-(beta|alpha)\.(0|[1-9][0-9]*))?$'
++++ KUBE_CI_VERSION_REGEX='^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)-(beta|alpha)\.(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*)\+[-0-9a-z]*)?$'
+++ ALLOCATE_NODE_CIDRS=true
+++ NODE_INSTANCE_PREFIX=kubernetes-minion
+++ ASG_NAME=kubernetes-minion-group-us-east-1a
+++ MASTER_DISK_ID=
+++ TAG_KEY_MASTER_IP=kubernetes.io/master-ip
+++ OS_DISTRIBUTION=jessie
+++ [[ jessie == \u\b\u\n\t\u ]]
+++ load_distro_utils
+++ case "${OS_DISTRIBUTION}" in
+++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/aws/jessie/util.sh
++++ source ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/aws/trusty/common.sh
++++ SSH_USER=admin
+++ AWS_REGION=us-east-1
+++ export AWS_DEFAULT_REGION=us-east-1
+++ AWS_DEFAULT_REGION=us-east-1
+++ export AWS_DEFAULT_OUTPUT=text
+++ AWS_DEFAULT_OUTPUT=text
+++ AWS_CMD='aws ec2'
+++ AWS_ASG_CMD='aws autoscaling'
+++ VPC_CIDR_BASE=172.20
+++ MASTER_IP_SUFFIX=.9
+++ VPC_CIDR=172.20.0.0/16
+++ SUBNET_CIDR=172.20.0.0/24
+++ [[ -n '' ]]
+++ [[ -z '' ]]
+++ MASTER_INTERNAL_IP=172.20.0.9
+++ MASTER_SG_NAME=kubernetes-master-kubernetes
+++ NODE_SG_NAME=kubernetes-minion-kubernetes
+++ EPHEMERAL_BLOCK_DEVICE_MAPPINGS=',{"DeviceName": "/dev/sdc","VirtualName":"ephemeral0"},{"DeviceName": "/dev/sdd","VirtualName":"ephemeral1"},{"DeviceName": "/dev/sde","VirtualName":"ephemeral2"},{"DeviceName": "/dev/sdf","VirtualName":"ephemeral3"}'
+++ [[ '' == \e\b\s ]]
+ ALLOWED_NOTREADY_NODES=0
+ EXPECTED_NUM_NODES=2
+ [[ '' == \t\r\u\e ]]
+ return_value=0
+ attempt=0
+ true
++ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh get nodes
+ node='NAME                           STATUS    AGE
ip-172-20-0-241.ec2.internal   Ready     52s
ip-172-20-0-242.ec2.internal   Ready     55s'
++ echo 'NAME                           STATUS    AGE
ip-172-20-0-241.ec2.internal   Ready     52s
ip-172-20-0-242.ec2.internal   Ready     55s'
++ wc -l
+ found=2
++ echo 'NAME                           STATUS    AGE
ip-172-20-0-241.ec2.internal   Ready     52s
++ grep -v NotReady
++ wc -l
ip-172-20-0-242.ec2.internal   Ready     55s'
+ ready=2
+ ((  2 == 2  ))
+ ((  2 == 2 ))
+ break
+ echo 'Found 2 node(s).'
Found 2 node(s).
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh get nodes
NAME                           STATUS    AGE
ip-172-20-0-241.ec2.internal   Ready     53s
ip-172-20-0-242.ec2.internal   Ready     56s
+ attempt=0
+ true
++ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh get componentstatuses -o template '--template={{range .items}}{{with index .conditions 0}}{{.type}}:{{.status}},{{end}}{{end}}' --api-version=v1
Flag --api-version has been deprecated, flag is no longer respected and will be deleted in the next release
+ cs_status=Healthy:True,Healthy:True,Healthy:True,Healthy:True,
++ echo Healthy:True,Healthy:True,Healthy:True,Healthy:True,
++ grep -c Healthy:
++ tr , '\n'
+ componentstatuses=4
++ echo Healthy:True,Healthy:True,Healthy:True,Healthy:True,
++ grep -c Healthy:True
++ tr , '\n'
+ healthy=4
+ (( componentstatuses > healthy ))
+ break
+ echo 'Validate output:'
Validate output:
+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh get cs
NAME                 STATUS    MESSAGE              ERROR
scheduler            Healthy   ok
controller-manager   Healthy   ok
etcd-1               Healthy   {"health": "true"}
etcd-0               Healthy   {"health": "true"}
+ '[' 0 == 0 ']'
+ echo -e '\033[0;32mCluster validation succeeded\033[0m'
Cluster validation succeeded
+ exit 0
+ validate_result=0
+ [[ 0 == \1 ]]
+ [[ 0 == \2 ]]
+ echo -e 'Done, listing cluster services:\n'
Done, listing cluster services:

+ ./cluster/../cluster/../cluster/aws/../../cluster/../cluster/kubectl.sh cluster-info
Kubernetes master is running at https://52.202.226.173
Elasticsearch is running at https://52.202.226.173/api/v1/proxy/namespaces/kube-system/services/elasticsearch-logging
Heapster is running at https://52.202.226.173/api/v1/proxy/namespaces/kube-system/services/heapster
Kibana is running at https://52.202.226.173/api/v1/proxy/namespaces/kube-system/services/kibana-logging
KubeDNS is running at https://52.202.226.173/api/v1/proxy/namespaces/kube-system/services/kube-dns
kubernetes-dashboard is running at https://52.202.226.173/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard
Grafana is running at https://52.202.226.173/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana
InfluxDB is running at https://52.202.226.173/api/v1/proxy/namespaces/kube-system/services/monitoring-influxdb
+ echo

+ exit 0
+ rm -rf /tmp/kubernetes.fZ0hhp
+ echo 'Kubernetes binaries at /home/virginia/kubernetes/cluster/'
Kubernetes binaries at /home/virginia/kubernetes/cluster/
+ [[ :/home/virginia/.virtualenvs/kube-virginia/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games: != *\:\/\h\o\m\e\/\v\i\r\g\i\n\i\a\/\k\u\b\e\r\n\e\t\e\s\/\c\l\u\s\t\e\r\:* ]]
+ echo 'You may want to add this directory to your PATH in $HOME/.profile'
You may want to add this directory to your PATH in $HOME/.profile
+ echo 'Installation successful!'
Installation successful!
+ exit 0

