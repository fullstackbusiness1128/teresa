package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/luizalabs/teresa-api/models"
)

// CreateTeamReader is a Reader for the CreateTeam structure.
type CreateTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *CreateTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateTeamCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateTeamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateTeamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateTeamForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCreateTeamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewCreateTeamCreated creates a CreateTeamCreated with default headers values
func NewCreateTeamCreated() *CreateTeamCreated {
	return &CreateTeamCreated{}
}

/*CreateTeamCreated handles this case with default header values.

Newly created team
*/
type CreateTeamCreated struct {
	Payload *models.Team
}

func (o *CreateTeamCreated) Error() string {
	return fmt.Sprintf("[POST /teams][%d] createTeamCreated  %+v", 201, o.Payload)
}

func (o *CreateTeamCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTeamBadRequest creates a CreateTeamBadRequest with default headers values
func NewCreateTeamBadRequest() *CreateTeamBadRequest {
	return &CreateTeamBadRequest{}
}

/*CreateTeamBadRequest handles this case with default header values.

User sent a bad request
*/
type CreateTeamBadRequest struct {
	Payload *models.BadRequest
}

func (o *CreateTeamBadRequest) Error() string {
	return fmt.Sprintf("[POST /teams][%d] createTeamBadRequest  %+v", 400, o.Payload)
}

func (o *CreateTeamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTeamUnauthorized creates a CreateTeamUnauthorized with default headers values
func NewCreateTeamUnauthorized() *CreateTeamUnauthorized {
	return &CreateTeamUnauthorized{}
}

/*CreateTeamUnauthorized handles this case with default header values.

User not authorized
*/
type CreateTeamUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *CreateTeamUnauthorized) Error() string {
	return fmt.Sprintf("[POST /teams][%d] createTeamUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateTeamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTeamForbidden creates a CreateTeamForbidden with default headers values
func NewCreateTeamForbidden() *CreateTeamForbidden {
	return &CreateTeamForbidden{}
}

/*CreateTeamForbidden handles this case with default header values.

User does not have the credentials to access this resource

*/
type CreateTeamForbidden struct {
	Payload *models.Unauthorized
}

func (o *CreateTeamForbidden) Error() string {
	return fmt.Sprintf("[POST /teams][%d] createTeamForbidden  %+v", 403, o.Payload)
}

func (o *CreateTeamForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTeamDefault creates a CreateTeamDefault with default headers values
func NewCreateTeamDefault(code int) *CreateTeamDefault {
	return &CreateTeamDefault{
		_statusCode: code,
	}
}

/*CreateTeamDefault handles this case with default header values.

User not authorized
*/
type CreateTeamDefault struct {
	_statusCode int

	Payload *models.Unauthorized
}

// Code gets the status code for the create team default response
func (o *CreateTeamDefault) Code() int {
	return o._statusCode
}

func (o *CreateTeamDefault) Error() string {
	return fmt.Sprintf("[POST /teams][%d] createTeam default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTeamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
