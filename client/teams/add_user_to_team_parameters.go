package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewAddUserToTeamParams creates a new AddUserToTeamParams object
// with the default values initialized.
func NewAddUserToTeamParams() *AddUserToTeamParams {
	var ()
	return &AddUserToTeamParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddUserToTeamParamsWithTimeout creates a new AddUserToTeamParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddUserToTeamParamsWithTimeout(timeout time.Duration) *AddUserToTeamParams {
	var ()
	return &AddUserToTeamParams{

		timeout: timeout,
	}
}

/*AddUserToTeamParams contains all the parameters to send to the API endpoint
for the add user to team operation typically these are written to a http.Request
*/
type AddUserToTeamParams struct {

	/*TeamName
	  Team name

	*/
	TeamName string
	/*User*/
	User AddUserToTeamBody

	timeout time.Duration
}

// WithTeamName adds the teamName to the add user to team params
func (o *AddUserToTeamParams) WithTeamName(TeamName string) *AddUserToTeamParams {
	o.TeamName = TeamName
	return o
}

// WithUser adds the user to the add user to team params
func (o *AddUserToTeamParams) WithUser(User AddUserToTeamBody) *AddUserToTeamParams {
	o.User = User
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *AddUserToTeamParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param team_name
	if err := r.SetPathParam("team_name", o.TeamName); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.User); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
