package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAppDetailsParams creates a new GetAppDetailsParams object
// with the default values initialized.
func NewGetAppDetailsParams() *GetAppDetailsParams {
	var ()
	return &GetAppDetailsParams{}
}

/*GetAppDetailsParams contains all the parameters to send to the API endpoint
for the get app details operation typically these are written to a http.Request
*/
type GetAppDetailsParams struct {

	/*AppID
	  App ID

	*/
	AppID int64
	/*TeamID
	  Team ID

	*/
	TeamID int64
}

// WithAppID adds the appId to the get app details params
func (o *GetAppDetailsParams) WithAppID(AppID int64) *GetAppDetailsParams {
	o.AppID = AppID
	return o
}

// WithTeamID adds the teamId to the get app details params
func (o *GetAppDetailsParams) WithTeamID(TeamID int64) *GetAppDetailsParams {
	o.TeamID = TeamID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetAppDetailsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	var res []error

	// path param app_id
	if err := r.SetPathParam("app_id", swag.FormatInt64(o.AppID)); err != nil {
		return err
	}

	// path param team_id
	if err := r.SetPathParam("team_id", swag.FormatInt64(o.TeamID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
