package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/luizalabs/paas/api/models"
)

// UpdateAppReader is a Reader for the UpdateApp structure.
type UpdateAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *UpdateAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewUpdateAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateAppForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdateAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewUpdateAppOK creates a UpdateAppOK with default headers values
func NewUpdateAppOK() *UpdateAppOK {
	return &UpdateAppOK{}
}

/*UpdateAppOK handles this case with default header values.

App properties
*/
type UpdateAppOK struct {
	Payload *models.AppProperties
}

func (o *UpdateAppOK) Error() string {
	return fmt.Sprintf("[PUT /teams/{team_id}/apps/{app_id}][%d] updateAppOK  %+v", 200, o.Payload)
}

func (o *UpdateAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppProperties)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppUnauthorized creates a UpdateAppUnauthorized with default headers values
func NewUpdateAppUnauthorized() *UpdateAppUnauthorized {
	return &UpdateAppUnauthorized{}
}

/*UpdateAppUnauthorized handles this case with default header values.

User not authorized
*/
type UpdateAppUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *UpdateAppUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /teams/{team_id}/apps/{app_id}][%d] updateAppUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppForbidden creates a UpdateAppForbidden with default headers values
func NewUpdateAppForbidden() *UpdateAppForbidden {
	return &UpdateAppForbidden{}
}

/*UpdateAppForbidden handles this case with default header values.

User does not have the credentials to access this resource

*/
type UpdateAppForbidden struct {
	Payload *models.Unauthorized
}

func (o *UpdateAppForbidden) Error() string {
	return fmt.Sprintf("[PUT /teams/{team_id}/apps/{app_id}][%d] updateAppForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAppForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppDefault creates a UpdateAppDefault with default headers values
func NewUpdateAppDefault(code int) *UpdateAppDefault {
	return &UpdateAppDefault{
		_statusCode: code,
	}
}

/*UpdateAppDefault handles this case with default header values.

Error
*/
type UpdateAppDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update app default response
func (o *UpdateAppDefault) Code() int {
	return o._statusCode
}

func (o *UpdateAppDefault) Error() string {
	return fmt.Sprintf("[PUT /teams/{team_id}/apps/{app_id}][%d] updateApp default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
