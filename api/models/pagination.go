package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

/*Pagination pagination

swagger:model Pagination
*/
type Pagination struct {

	/* pagination
	 */
	Pagination *PaginationPagination `json:"pagination,omitempty"`
}

// Validate validates this pagination
func (m *Pagination) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePagination(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Pagination) validatePagination(formats strfmt.Registry) error {

	if swag.IsZero(m.Pagination) { // not required
		return nil
	}

	if m.Pagination != nil {

		if err := m.Pagination.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

/*PaginationPagination pagination pagination

swagger:model PaginationPagination
*/
type PaginationPagination struct {

	/* length
	 */
	Length int64 `json:"length,omitempty"`

	/* next Url
	 */
	NextURL string `json:"nextUrl,omitempty"`

	/* previous Url
	 */
	PreviousURL string `json:"previousUrl,omitempty"`

	/* self
	 */
	Self string `json:"self,omitempty"`

	/* size
	 */
	Size int64 `json:"size,omitempty"`
}

// Validate validates this pagination pagination
func (m *PaginationPagination) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
